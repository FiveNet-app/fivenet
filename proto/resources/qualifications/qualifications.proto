syntax = "proto3";

package resources.qualifications;

import "google/protobuf/duration.proto";
import "resources/qualifications/access.proto";
import "resources/qualifications/exam.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/gen/go/proto/resources/qualifications;qualifications";

message Qualification {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  string job = 5 [(validate.rules).string.max_len = 20];
  uint32 weight = 6 [(validate.rules).uint32.lt = 4294967295];
  bool closed = 7;
  // @sanitize: method=StripTags
  string abbreviation = 8 [(validate.rules).string.max_len = 20];
  // @sanitize
  string title = 9 [(validate.rules).string = {
    min_len: 3,
    max_len: 1024
  }];
  // @sanitize: method=StripTags
  optional string description = 10 [(validate.rules).string.max_len = 512];
  // @sanitize
  string content = 11 [(validate.rules).string = {
    min_len: 20,
    max_bytes: 750000 // 0.75 Megabytes
  }];
  optional int32 creator_id = 12;
  optional resources.users.UserShort creator = 13; // @gotags: alias:"creator"
  string creator_job = 14 [(validate.rules).string.max_len = 20];
  resources.qualifications.QualificationAccess access = 15;
  repeated QualificationRequirement requirements = 16;
  optional QualificationDiscordSettings discord_settings = 17;
  QualificationExamMode exam_mode = 18 [(validate.rules).enum.defined_only = true];
  optional QualificationExamSettings exam_settings = 19;
  optional resources.qualifications.ExamQuestions exam = 20;
  optional QualificationResult result = 21;
  optional QualificationRequest request = 22;
}

message QualificationShort {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  string job = 5 [(validate.rules).string.max_len = 20];
  uint32 weight = 6 [(validate.rules).uint32.lt = 4294967295];
  bool closed = 7;
  // @sanitize: method=StripTags
  string abbreviation = 8 [(validate.rules).string.max_len = 20];
  // @sanitize
  string title = 9 [(validate.rules).string = {
    min_len: 3,
    max_len: 1024
  }];
  // @sanitize: method=StripTags
  optional string description = 10 [(validate.rules).string.max_len = 512];
  optional int32 creator_id = 12;
  optional resources.users.UserShort creator = 13; // @gotags: alias:"creator"
  string creator_job = 14 [(validate.rules).string.max_len = 20];
  repeated QualificationRequirement requirements = 16;
  QualificationExamMode exam_mode = 18 [(validate.rules).enum.defined_only = true];
  optional QualificationExamSettings exam_settings = 19;
  optional QualificationResult result = 21;
}

message QualificationRequirement {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  uint64 qualification_id = 3 [jstype = JS_STRING];
  uint64 target_qualification_id = 4 [jstype = JS_STRING];
  optional QualificationShort target_qualification = 5; // @gotags: alias:"targetqualification.*"
}

message QualificationDiscordSettings {
  bool sync_enabled = 1;
  optional string role_name = 2 [(validate.rules).string.max_len = 64];
}

enum QualificationExamMode {
  QUALIFICATION_EXAM_MODE_UNSPECIFIED = 0;
  QUALIFICATION_EXAM_MODE_DISABLED = 1;
  QUALIFICATION_EXAM_MODE_ENABLED = 2;
  QUALIFICATION_EXAM_MODE_FORCED = 3;
}

message QualificationExamSettings {
  google.protobuf.Duration time = 1 [(validate.rules).duration = {
    required: true,
    lt:  {seconds: 300}, // 5 minutes
    gte: {seconds: 1036800}, // 24 hours
  }];
}

enum ResultStatus {
  RESULT_STATUS_UNSPECIFIED = 0;
  RESULT_STATUS_PENDING = 1;
  RESULT_STATUS_FAILED = 2;
  RESULT_STATUS_SUCCESSFUL = 3;
}

message QualificationResult {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp deleted_at = 3;
  uint64 qualification_id = 4 [jstype = JS_STRING];
  optional QualificationShort qualification = 5;
  int32 user_id = 6;
  resources.users.UserShort user = 7; // @gotags: alias:"user"
  ResultStatus status = 8 [(validate.rules).enum.defined_only = true];
  optional uint32 score = 9 [(validate.rules).uint32.lt = 1000];
  // @sanitize: method=StripTags
  string summary = 10 [(validate.rules).string = {min_len: 3, max_len: 512}];
  int32 creator_id = 11;
  resources.users.UserShort creator = 12; // @gotags: alias:"creator"
  string creator_job = 13 [(validate.rules).string.max_len = 20];
}

enum RequestStatus {
  REQUEST_STATUS_UNSPECIFIED = 0;
  REQUEST_STATUS_PENDING = 1;
  REQUEST_STATUS_DENIED = 2;
  REQUEST_STATUS_ACCEPTED = 3;
  REQUEST_STATUS_COMPLETED = 4;
  REQUEST_STATUS_EXAM_PENDING = 5;
  REQUEST_STATUS_EXAM_COMPLETED = 6;
}

message QualificationRequest {
  optional resources.timestamp.Timestamp created_at = 1;
  optional resources.timestamp.Timestamp deleted_at = 2;
  uint64 qualification_id = 3 [jstype = JS_STRING];
  optional QualificationShort qualification = 4;
  int32 user_id = 5;
  resources.users.UserShort user = 6; // @gotags: alias:"user"
  // @sanitize: method=StripTags
  optional string user_comment = 7 [(validate.rules).string = {max_len: 512}];
  optional RequestStatus status = 8 [(validate.rules).enum.defined_only = true];
  optional resources.timestamp.Timestamp approved_at = 9;
  // @sanitize: method=StripTags
  optional string approver_comment = 10 [(validate.rules).string = {max_len: 512}];
  optional int32 approver_id = 11;
  optional resources.users.UserShort approver = 12; // @gotags: alias:"approver"
  optional string approver_job = 13;
}
