// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: resources/documents/documents.proto

package documents

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	timestamp "github.com/galexrt/arpanet/proto/resources/timestamp"
	users "github.com/galexrt/arpanet/proto/resources/users"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DOCUMENT_CONTENT_TYPE int32

const (
	DOCUMENT_CONTENT_TYPE_HTML DOCUMENT_CONTENT_TYPE = 0
)

// Enum value maps for DOCUMENT_CONTENT_TYPE.
var (
	DOCUMENT_CONTENT_TYPE_name = map[int32]string{
		0: "HTML",
	}
	DOCUMENT_CONTENT_TYPE_value = map[string]int32{
		"HTML": 0,
	}
)

func (x DOCUMENT_CONTENT_TYPE) Enum() *DOCUMENT_CONTENT_TYPE {
	p := new(DOCUMENT_CONTENT_TYPE)
	*p = x
	return p
}

func (x DOCUMENT_CONTENT_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DOCUMENT_CONTENT_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_documents_proto_enumTypes[0].Descriptor()
}

func (DOCUMENT_CONTENT_TYPE) Type() protoreflect.EnumType {
	return &file_resources_documents_documents_proto_enumTypes[0]
}

func (x DOCUMENT_CONTENT_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DOCUMENT_CONTENT_TYPE.Descriptor instead.
func (DOCUMENT_CONTENT_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{0}
}

type DOCUMENT_ACCESS int32

const (
	DOCUMENT_ACCESS_BLOCKED DOCUMENT_ACCESS = 0
	DOCUMENT_ACCESS_VIEW    DOCUMENT_ACCESS = 1
	DOCUMENT_ACCESS_EDIT    DOCUMENT_ACCESS = 2
	DOCUMENT_ACCESS_LEADER  DOCUMENT_ACCESS = 3
	DOCUMENT_ACCESS_ADMIN   DOCUMENT_ACCESS = 4
)

// Enum value maps for DOCUMENT_ACCESS.
var (
	DOCUMENT_ACCESS_name = map[int32]string{
		0: "BLOCKED",
		1: "VIEW",
		2: "EDIT",
		3: "LEADER",
		4: "ADMIN",
	}
	DOCUMENT_ACCESS_value = map[string]int32{
		"BLOCKED": 0,
		"VIEW":    1,
		"EDIT":    2,
		"LEADER":  3,
		"ADMIN":   4,
	}
)

func (x DOCUMENT_ACCESS) Enum() *DOCUMENT_ACCESS {
	p := new(DOCUMENT_ACCESS)
	*p = x
	return p
}

func (x DOCUMENT_ACCESS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DOCUMENT_ACCESS) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_documents_proto_enumTypes[1].Descriptor()
}

func (DOCUMENT_ACCESS) Type() protoreflect.EnumType {
	return &file_resources_documents_documents_proto_enumTypes[1]
}

func (x DOCUMENT_ACCESS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DOCUMENT_ACCESS.Descriptor instead.
func (DOCUMENT_ACCESS) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{1}
}

type DOCUMENT_RELATION int32

const (
	DOCUMENT_RELATION_CREATED   DOCUMENT_RELATION = 0
	DOCUMENT_RELATION_MENTIONED DOCUMENT_RELATION = 1
	DOCUMENT_RELATION_TARGETS   DOCUMENT_RELATION = 2
	DOCUMENT_RELATION_CAUSED    DOCUMENT_RELATION = 3
)

// Enum value maps for DOCUMENT_RELATION.
var (
	DOCUMENT_RELATION_name = map[int32]string{
		0: "CREATED",
		1: "MENTIONED",
		2: "TARGETS",
		3: "CAUSED",
	}
	DOCUMENT_RELATION_value = map[string]int32{
		"CREATED":   0,
		"MENTIONED": 1,
		"TARGETS":   2,
		"CAUSED":    3,
	}
)

func (x DOCUMENT_RELATION) Enum() *DOCUMENT_RELATION {
	p := new(DOCUMENT_RELATION)
	*p = x
	return p
}

func (x DOCUMENT_RELATION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DOCUMENT_RELATION) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_documents_proto_enumTypes[2].Descriptor()
}

func (DOCUMENT_RELATION) Type() protoreflect.EnumType {
	return &file_resources_documents_documents_proto_enumTypes[2]
}

func (x DOCUMENT_RELATION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DOCUMENT_RELATION.Descriptor instead.
func (DOCUMENT_RELATION) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{2}
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" sql:"primary_key" alias:"id"`                                                                  // @gotags: sql:"primary_key" alias:"id"
	CreatedAt        *timestamp.Timestamp  `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty" alias:"created_at"`                                                     // @gotags: alias:"created_at"
	UpdatedAt        *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" alias:"updated_at"`                                                     // @gotags: alias:"updated_at"
	Title            string                `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty" alias:"title"`                                                             // @gotags: alias:"title"
	Content          string                `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty" alias:"content"`                                                         // @gotags: alias:"content"
	ContentType      DOCUMENT_CONTENT_TYPE `protobuf:"varint,6,opt,name=contentType,proto3,enum=resources.documents.DOCUMENT_CONTENT_TYPE" json:"contentType,omitempty" alias:"content_type"` // @gotags: alias:"content_type"
	Closed           bool                  `protobuf:"varint,7,opt,name=closed,proto3" json:"closed,omitempty" alias:"closed"`                                                          // @gotags: alias:"closed"
	State            string                `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty" alias:"state"`                                                             // @gotags: alias:"state"
	Creator          *users.ShortUser      `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty" alias:"creator"`                                                         // @gotags: alias:"creator"
	Public           bool                  `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty" alias:"public"`                                                         // @gotags: alias:"public"
	Category         *DocumentCategory     `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	TargetDocumentID uint64                `protobuf:"varint,12,opt,name=targetDocumentID,proto3" json:"targetDocumentID,omitempty" alias:"response_id"` // @gotags: alias:"response_id"
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Document) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Document) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Document) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Document) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Document) GetContentType() DOCUMENT_CONTENT_TYPE {
	if x != nil {
		return x.ContentType
	}
	return DOCUMENT_CONTENT_TYPE_HTML
}

func (x *Document) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *Document) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Document) GetCreator() *users.ShortUser {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *Document) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Document) GetCategory() *DocumentCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Document) GetTargetDocumentID() uint64 {
	if x != nil {
		return x.TargetDocumentID
	}
	return 0
}

type DocumentTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" sql:"primary_key" alias:"id"`                        // @gotags: sql:"primary_key" alias:"id"
	Job            string            `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty" alias:"job"`                       // @gotags: alias:"job"
	JobGrade       int32             `protobuf:"varint,3,opt,name=jobGrade,proto3" json:"jobGrade,omitempty" alias:"job_grade"`            // @gotags: alias:"job_grade"
	Title          string            `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty" alias:"title"`                   // @gotags: alias:"title"
	Description    string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty" alias:"description"`       // @gotags: alias:"description"
	ContentTitle   string            `protobuf:"bytes,6,opt,name=contentTitle,proto3" json:"contentTitle,omitempty" alias:"content_title"`     // @gotags: alias:"content_title"
	Content        string            `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty" alias:"content"`               // @gotags: alias:"content"
	AdditionalData string            `protobuf:"bytes,8,opt,name=additionalData,proto3" json:"additionalData,omitempty" alias:"additional_data"` // @gotags: alias:"additional_data"
	Category       *DocumentCategory `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	CreatorID      int32             `protobuf:"varint,10,opt,name=creatorID,proto3" json:"creatorID,omitempty" alias:"creator_id"` // @gotags: alias:"creator_id"
}

func (x *DocumentTemplate) Reset() {
	*x = DocumentTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentTemplate) ProtoMessage() {}

func (x *DocumentTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentTemplate.ProtoReflect.Descriptor instead.
func (*DocumentTemplate) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{1}
}

func (x *DocumentTemplate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DocumentTemplate) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *DocumentTemplate) GetJobGrade() int32 {
	if x != nil {
		return x.JobGrade
	}
	return 0
}

func (x *DocumentTemplate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DocumentTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DocumentTemplate) GetContentTitle() string {
	if x != nil {
		return x.ContentTitle
	}
	return ""
}

func (x *DocumentTemplate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DocumentTemplate) GetAdditionalData() string {
	if x != nil {
		return x.AdditionalData
	}
	return ""
}

func (x *DocumentTemplate) GetCategory() *DocumentCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *DocumentTemplate) GetCreatorID() int32 {
	if x != nil {
		return x.CreatorID
	}
	return 0
}

type DocumentTemplateShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" sql:"primary_key" alias:"id"`                  // @gotags: sql:"primary_key" alias:"id"
	Job         string            `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty" alias:"job"`                 // @gotags: alias:"job"
	JobGrade    int32             `protobuf:"varint,3,opt,name=jobGrade,proto3" json:"jobGrade,omitempty" alias:"job_grade"`      // @gotags: alias:"job_grade"
	Title       string            `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty" alias:"title"`             // @gotags: alias:"title"
	Description string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty" alias:"description"` // @gotags: alias:"description"
	Category    *DocumentCategory `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	CreatorID   int32             `protobuf:"varint,7,opt,name=creatorID,proto3" json:"creatorID,omitempty" alias:"creator_id"` // @gotags: alias:"creator_id"
}

func (x *DocumentTemplateShort) Reset() {
	*x = DocumentTemplateShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentTemplateShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentTemplateShort) ProtoMessage() {}

func (x *DocumentTemplateShort) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentTemplateShort.ProtoReflect.Descriptor instead.
func (*DocumentTemplateShort) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{2}
}

func (x *DocumentTemplateShort) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DocumentTemplateShort) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *DocumentTemplateShort) GetJobGrade() int32 {
	if x != nil {
		return x.JobGrade
	}
	return 0
}

func (x *DocumentTemplateShort) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DocumentTemplateShort) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DocumentTemplateShort) GetCategory() *DocumentCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *DocumentTemplateShort) GetCreatorID() int32 {
	if x != nil {
		return x.CreatorID
	}
	return 0
}

type DocumentAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentID uint64                `protobuf:"varint,1,opt,name=documentID,proto3" json:"documentID,omitempty" sql:"primary_key" alias:"id"` // @gotags: sql:"primary_key" alias:"id"
	JobAccess  []*DocumentJobAccess  `protobuf:"bytes,2,rep,name=jobAccess,proto3" json:"jobAccess,omitempty"`
	UserAccess []*DocumentUserAccess `protobuf:"bytes,3,rep,name=userAccess,proto3" json:"userAccess,omitempty"`
}

func (x *DocumentAccess) Reset() {
	*x = DocumentAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAccess) ProtoMessage() {}

func (x *DocumentAccess) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAccess.ProtoReflect.Descriptor instead.
func (*DocumentAccess) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{3}
}

func (x *DocumentAccess) GetDocumentID() uint64 {
	if x != nil {
		return x.DocumentID
	}
	return 0
}

func (x *DocumentAccess) GetJobAccess() []*DocumentJobAccess {
	if x != nil {
		return x.JobAccess
	}
	return nil
}

func (x *DocumentAccess) GetUserAccess() []*DocumentUserAccess {
	if x != nil {
		return x.UserAccess
	}
	return nil
}

type DocumentJobAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" sql:"primary_key" alias:"id"`                                                  // @gotags: sql:"primary_key" alias:"id"
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty" alias:"created_at"`                                     // @gotags: alias:"created_at"
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" alias:"updated_at"`                                     // @gotags: alias:"updated_at"
	DocumentID   uint64               `protobuf:"varint,4,opt,name=documentID,proto3" json:"documentID,omitempty" alias:"document_id"`                                  // @gotags: alias:"document_id"
	Job          string               `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty" alias:"job"`                                                 // @gotags: alias:"job"
	MinimumGrade int32                `protobuf:"varint,6,opt,name=minimumGrade,proto3" json:"minimumGrade,omitempty" alias:"minimum_grade"`                              // @gotags: alias:"minimum_grade"
	Access       DOCUMENT_ACCESS      `protobuf:"varint,7,opt,name=access,proto3,enum=resources.documents.DOCUMENT_ACCESS" json:"access,omitempty" alias:"access"` // @gotags: alias:"access"
}

func (x *DocumentJobAccess) Reset() {
	*x = DocumentJobAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentJobAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentJobAccess) ProtoMessage() {}

func (x *DocumentJobAccess) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentJobAccess.ProtoReflect.Descriptor instead.
func (*DocumentJobAccess) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{4}
}

func (x *DocumentJobAccess) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DocumentJobAccess) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DocumentJobAccess) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DocumentJobAccess) GetDocumentID() uint64 {
	if x != nil {
		return x.DocumentID
	}
	return 0
}

func (x *DocumentJobAccess) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *DocumentJobAccess) GetMinimumGrade() int32 {
	if x != nil {
		return x.MinimumGrade
	}
	return 0
}

func (x *DocumentJobAccess) GetAccess() DOCUMENT_ACCESS {
	if x != nil {
		return x.Access
	}
	return DOCUMENT_ACCESS_BLOCKED
}

type DocumentUserAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" sql:"primary_key" alias:"id"`                                                  // @gotags: sql:"primary_key" alias:"id"
	CreatedAt  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty" alias:"created_at"`                                     // @gotags: alias:"created_at"
	UpdatedAt  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" alias:"updated_at"`                                     // @gotags: alias:"updated_at"
	DocumentID uint64               `protobuf:"varint,4,opt,name=documentID,proto3" json:"documentID,omitempty" alias:"document_id"`                                  // @gotags: alias:"document_id"
	UserID     int32                `protobuf:"varint,5,opt,name=userID,proto3" json:"userID,omitempty" alias:"user_id"`                                          // @gotags: alias:"user_id"
	Access     DOCUMENT_ACCESS      `protobuf:"varint,6,opt,name=access,proto3,enum=resources.documents.DOCUMENT_ACCESS" json:"access,omitempty" alias:"access"` // @gotags: alias:"access"
}

func (x *DocumentUserAccess) Reset() {
	*x = DocumentUserAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentUserAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentUserAccess) ProtoMessage() {}

func (x *DocumentUserAccess) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentUserAccess.ProtoReflect.Descriptor instead.
func (*DocumentUserAccess) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{5}
}

func (x *DocumentUserAccess) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DocumentUserAccess) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DocumentUserAccess) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DocumentUserAccess) GetDocumentID() uint64 {
	if x != nil {
		return x.DocumentID
	}
	return 0
}

func (x *DocumentUserAccess) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DocumentUserAccess) GetAccess() DOCUMENT_ACCESS {
	if x != nil {
		return x.Access
	}
	return DOCUMENT_ACCESS_BLOCKED
}

type DocumentCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" sql:"primary_key" alias:"id"`                  // @gotags: sql:"primary_key" alias:"id"
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" alias:"name"`               // @gotags: alias:"name"
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" alias:"description"` // @gotags: alias:"description"
	Job         string `protobuf:"bytes,4,opt,name=job,proto3" json:"job,omitempty" alias:"job"`                 // @gotags: alias:"job"
}

func (x *DocumentCategory) Reset() {
	*x = DocumentCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCategory) ProtoMessage() {}

func (x *DocumentCategory) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCategory.ProtoReflect.Descriptor instead.
func (*DocumentCategory) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{6}
}

func (x *DocumentCategory) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DocumentCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DocumentCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DocumentCategory) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

type DocumentRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" sql:"primary_key" alias:"id"`                                                        // @gotags: sql:"primary_key" alias:"id"
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty" alias:"created_at"`                                           // @gotags: alias:"created_at"
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" alias:"updated_at"`                                           // @gotags: alias:"updated_at"
	DocumentID   uint64               `protobuf:"varint,4,opt,name=documentID,proto3" json:"documentID,omitempty" alias:"document_id"`                                        // @gotags: alias:"document_id"
	TargetUserID int32                `protobuf:"varint,5,opt,name=targetUserID,proto3" json:"targetUserID,omitempty" alias:"target_user_id"`                                    // @gotags: alias:"target_user_id"
	Relation     DOCUMENT_RELATION    `protobuf:"varint,6,opt,name=relation,proto3,enum=resources.documents.DOCUMENT_RELATION" json:"relation,omitempty" alias:"relation"` // @gotags: alias:"relation"
	CauseUserID  int32                `protobuf:"varint,7,opt,name=causeUserID,proto3" json:"causeUserID,omitempty" alias:"cause_user_id"`                                      // @gotags: alias:"cause_user_id"
}

func (x *DocumentRelation) Reset() {
	*x = DocumentRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_documents_documents_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentRelation) ProtoMessage() {}

func (x *DocumentRelation) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_documents_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentRelation.ProtoReflect.Descriptor instead.
func (*DocumentRelation) Descriptor() ([]byte, []int) {
	return file_resources_documents_documents_proto_rawDescGZIP(), []int{7}
}

func (x *DocumentRelation) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DocumentRelation) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DocumentRelation) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DocumentRelation) GetDocumentID() uint64 {
	if x != nil {
		return x.DocumentID
	}
	return 0
}

func (x *DocumentRelation) GetTargetUserID() int32 {
	if x != nil {
		return x.TargetUserID
	}
	return 0
}

func (x *DocumentRelation) GetRelation() DOCUMENT_RELATION {
	if x != nil {
		return x.Relation
	}
	return DOCUMENT_RELATION_CREATED
}

func (x *DocumentRelation) GetCauseUserID() int32 {
	if x != nil {
		return x.CauseUserID
	}
	return 0
}

var File_resources_documents_documents_proto protoreflect.FileDescriptor

var file_resources_documents_documents_proto_rawDesc = []byte{
	0x0a, 0x23, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x23, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x04, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x28, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x03, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x1e,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18,
	0x18, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x28, 0x00, 0x52, 0x10, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x86,
	0x03, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x14, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x23,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xff,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x03, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x22, 0xbf, 0x01, 0x0a, 0x0e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x09, 0x6a,
	0x6f, 0x62, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x47, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xcf, 0x02, 0x0a, 0x11, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x18, 0x14, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2b, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa9, 0x02, 0x0a,
	0x12, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x46, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x03, 0x18, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xff, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x14, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x22, 0xe4, 0x02, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x20, 0x00, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x4c, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x0b, 0x63, 0x61, 0x75, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x0b,
	0x63, 0x61, 0x75, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x2a, 0x21, 0x0a, 0x15, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x00, 0x2a, 0x49,
	0x0a, 0x0f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x44, 0x49, 0x54,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x04, 0x2a, 0x48, 0x0a, 0x11, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4d,
	0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x55, 0x53, 0x45,
	0x44, 0x10, 0x03, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x61, 0x6c, 0x65, 0x78, 0x72, 0x74, 0x2f, 0x61, 0x72, 0x70, 0x61, 0x6e, 0x65,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3b, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resources_documents_documents_proto_rawDescOnce sync.Once
	file_resources_documents_documents_proto_rawDescData = file_resources_documents_documents_proto_rawDesc
)

func file_resources_documents_documents_proto_rawDescGZIP() []byte {
	file_resources_documents_documents_proto_rawDescOnce.Do(func() {
		file_resources_documents_documents_proto_rawDescData = protoimpl.X.CompressGZIP(file_resources_documents_documents_proto_rawDescData)
	})
	return file_resources_documents_documents_proto_rawDescData
}

var file_resources_documents_documents_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_resources_documents_documents_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_resources_documents_documents_proto_goTypes = []interface{}{
	(DOCUMENT_CONTENT_TYPE)(0),    // 0: resources.documents.DOCUMENT_CONTENT_TYPE
	(DOCUMENT_ACCESS)(0),          // 1: resources.documents.DOCUMENT_ACCESS
	(DOCUMENT_RELATION)(0),        // 2: resources.documents.DOCUMENT_RELATION
	(*Document)(nil),              // 3: resources.documents.Document
	(*DocumentTemplate)(nil),      // 4: resources.documents.DocumentTemplate
	(*DocumentTemplateShort)(nil), // 5: resources.documents.DocumentTemplateShort
	(*DocumentAccess)(nil),        // 6: resources.documents.DocumentAccess
	(*DocumentJobAccess)(nil),     // 7: resources.documents.DocumentJobAccess
	(*DocumentUserAccess)(nil),    // 8: resources.documents.DocumentUserAccess
	(*DocumentCategory)(nil),      // 9: resources.documents.DocumentCategory
	(*DocumentRelation)(nil),      // 10: resources.documents.DocumentRelation
	(*timestamp.Timestamp)(nil),   // 11: resources.timestamp.Timestamp
	(*users.ShortUser)(nil),       // 12: resources.users.ShortUser
}
var file_resources_documents_documents_proto_depIdxs = []int32{
	11, // 0: resources.documents.Document.createdAt:type_name -> resources.timestamp.Timestamp
	11, // 1: resources.documents.Document.updatedAt:type_name -> resources.timestamp.Timestamp
	0,  // 2: resources.documents.Document.contentType:type_name -> resources.documents.DOCUMENT_CONTENT_TYPE
	12, // 3: resources.documents.Document.creator:type_name -> resources.users.ShortUser
	9,  // 4: resources.documents.Document.category:type_name -> resources.documents.DocumentCategory
	9,  // 5: resources.documents.DocumentTemplate.category:type_name -> resources.documents.DocumentCategory
	9,  // 6: resources.documents.DocumentTemplateShort.category:type_name -> resources.documents.DocumentCategory
	7,  // 7: resources.documents.DocumentAccess.jobAccess:type_name -> resources.documents.DocumentJobAccess
	8,  // 8: resources.documents.DocumentAccess.userAccess:type_name -> resources.documents.DocumentUserAccess
	11, // 9: resources.documents.DocumentJobAccess.createdAt:type_name -> resources.timestamp.Timestamp
	11, // 10: resources.documents.DocumentJobAccess.updatedAt:type_name -> resources.timestamp.Timestamp
	1,  // 11: resources.documents.DocumentJobAccess.access:type_name -> resources.documents.DOCUMENT_ACCESS
	11, // 12: resources.documents.DocumentUserAccess.createdAt:type_name -> resources.timestamp.Timestamp
	11, // 13: resources.documents.DocumentUserAccess.updatedAt:type_name -> resources.timestamp.Timestamp
	1,  // 14: resources.documents.DocumentUserAccess.access:type_name -> resources.documents.DOCUMENT_ACCESS
	11, // 15: resources.documents.DocumentRelation.createdAt:type_name -> resources.timestamp.Timestamp
	11, // 16: resources.documents.DocumentRelation.updatedAt:type_name -> resources.timestamp.Timestamp
	2,  // 17: resources.documents.DocumentRelation.relation:type_name -> resources.documents.DOCUMENT_RELATION
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_resources_documents_documents_proto_init() }
func file_resources_documents_documents_proto_init() {
	if File_resources_documents_documents_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resources_documents_documents_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_documents_documents_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_documents_documents_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentTemplateShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_documents_documents_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_documents_documents_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentJobAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_documents_documents_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentUserAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_documents_documents_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_documents_documents_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resources_documents_documents_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_documents_documents_proto_goTypes,
		DependencyIndexes: file_resources_documents_documents_proto_depIdxs,
		EnumInfos:         file_resources_documents_documents_proto_enumTypes,
		MessageInfos:      file_resources_documents_documents_proto_msgTypes,
	}.Build()
	File_resources_documents_documents_proto = out.File
	file_resources_documents_documents_proto_rawDesc = nil
	file_resources_documents_documents_proto_goTypes = nil
	file_resources_documents_documents_proto_depIdxs = nil
}
