syntax = "proto3";

package resources.documents;

import "resources/documents/access.proto";
import "resources/documents/category.proto";
import "resources/documents/documents.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "resources/vehicles/vehicles.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/resources/documents;documents";

message Template {
  uint64 id = 1; // @gotags: alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  resources.documents.Category category = 4; // @gotags: alias:"category"
  uint32 weight = 5; // @gotags: alias:"weight"
  string title = 6 [(validate.rules).string.min_len = 3]; // @gotags: alias:"title"
  string description = 7 [(validate.rules).string.max_len = 255]; // @gotags: alias:"description"
  string content_title = 8 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 21845
  }]; // @gotags: alias:"content_title"
  string content = 9 [(validate.rules).string = {
    min_len: 0,
    max_bytes: 1500000
  }]; // @gotags: alias:"content"
  resources.documents.TemplateSchema schema = 10; // @gotags: alias:"schema"
  optional int32 creator_id = 11; // @gotags: alias:"creator_id"
  optional resources.users.UserShort creator = 12;
  optional string job = 13 [(validate.rules).string.max_len = 20]; // @gotags: alias:"job"
  repeated TemplateJobAccess job_access = 14;
  resources.documents.DocumentAccess content_access = 15; // @gotags: alias:"access"
}

message TemplateShort {
  uint64 id = 1; // @gotags: alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  uint32 weight = 4; // @gotags: alias:"weight"
  resources.documents.Category category = 5; // @gotags: alias:"category"
  string title = 6 [(validate.rules).string.min_len = 3]; // @gotags: alias:"title"
  string description = 7 [(validate.rules).string.max_len = 255]; // @gotags: alias:"description"
  resources.documents.TemplateSchema schema = 8; // @gotags: alias:"schema"
  optional int32 creator_id = 9; // @gotags: alias:"creator_id"
  optional resources.users.UserShort creator = 10;
  string job = 11 [(validate.rules).string.max_len = 20]; // @gotags: alias:"job"
}

message TemplateSchema {
  TemplateRequirements requirements = 1;
}

message TemplateRequirements {
  optional ObjectSpecs documents = 1;
  optional ObjectSpecs users = 2;
  optional ObjectSpecs vehicles = 3;
}

message ObjectSpecs {
  optional bool required = 1;
  optional int64 min = 2;
  optional int64 max = 3;
}

message TemplateData {
  resources.users.User activeChar = 1;
  repeated resources.documents.DocumentShort documents = 2 [(validate.rules).repeated.max_items = 5];
  repeated resources.users.User users = 3 [(validate.rules).repeated.max_items = 5];
  repeated resources.vehicles.Vehicle vehicles = 4 [(validate.rules).repeated.max_items = 5];
}

message TemplateJobAccess {
  uint64 id = 1; // @gotags: alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  uint64 template_id = 4; // @gotags: alias:"template_id"
  string job = 5 [(validate.rules).string.max_len = 20]; // @gotags: alias:"job"
  optional string job_label = 6 [(validate.rules).string.max_len = 50]; // @gotags: alias:"job_label"
  int32 minimum_grade = 7 [(validate.rules).int32.gt = 0]; // @gotags: alias:"minimum_grade"
  optional string job_grade_label = 8 [(validate.rules).string.max_len = 50]; // @gotags: alias:"job_grade_label"
  resources.documents.ACCESS_LEVEL access = 9 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"access"
}
