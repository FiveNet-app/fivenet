syntax = "proto3";

package resources.documents;

import "resources/documents/category.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/resources/documents;documents";

enum DocContentType {
  DOC_CONTENT_TYPE_UNSPECIFIED = 0;
  DOC_CONTENT_TYPE_HTML = 1;
  DOC_CONTENT_TYPE_PLAIN = 2;
}

message Document {
  uint64 id = 1 [jstype = JS_STRING];
  resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  optional uint64 category_id = 5 [jstype = JS_STRING];
  optional resources.documents.Category category = 6; // @gotags: alias:"category"
  // @sanitize
  string title = 7 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 21845
  }];
  DocContentType content_type = 8 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"content_type"
  // @sanitize
  string content = 9 [(validate.rules).string = {
    min_len: 20,
    max_bytes: 1750000 // 1.75 Megabytes
  }];
  // @sanitize
  optional string data = 10 [(validate.rules).string = {
    max_bytes: 1000000 // 1 Megabyte
  }]; // @gotags: alias:"data"
  optional int32 creator_id = 11; // @gotags: alias:"creator_id"
  optional resources.users.UserShort creator = 12; // @gotags: alias:"creator"
  string creator_job = 13;
  // @sanitize
  string state = 14 [(validate.rules).string.max_len = 32];
  bool closed = 15;
  bool public = 16;
  optional uint64 template_id = 17 [jstype = JS_STRING];
}

message DocumentShort {
  uint64 id = 1 [jstype = JS_STRING];
  resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  optional uint64 category_id = 5 [jstype = JS_STRING];
  optional resources.documents.Category category = 6; // @gotags: alias:"category"
  // @sanitize
  string title = 7 [(validate.rules).string.min_len = 3];
  DocContentType content_type = 8 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"content_type"
  // @sanitize
  string content = 9 [(validate.rules).string = {max_bytes: 1024}];
  optional int32 creator_id = 10; // @gotags: alias:"creator_id"
  optional resources.users.UserShort creator = 11; // @gotags: alias:"creator"
  string creator_job = 12; // @gotags: alias:"creator_job"
  // @sanitize
  string state = 13 [(validate.rules).string.max_len = 32]; // @gotags: alias:"state"
  bool closed = 14;
  bool public = 15;
}

enum DocReference {
  DOC_REFERENCE_UNSPECIFIED = 0;
  DOC_REFERENCE_LINKED = 1;
  DOC_REFERENCE_SOLVES = 2;
  DOC_REFERENCE_CLOSES = 3;
  DOC_REFERENCE_DEPRECATES = 4;
}

message DocumentReference {
  optional uint64 id = 1 [jstype = JS_STRING];
  optional resources.timestamp.Timestamp created_at = 2;
  uint64 source_document_id = 3 [jstype = JS_STRING]; // @gotags: alias:"source_document_id"
  optional resources.documents.DocumentShort source_document = 4; // @gotags: alias:"source_document"
  DocReference reference = 5 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"reference"
  uint64 target_document_id = 6 [jstype = JS_STRING]; // @gotags: alias:"target_document_id"
  optional resources.documents.DocumentShort target_document = 7; // @gotags: alias:"target_document"
  optional int32 creator_id = 8; // @gotags: alias:"creator_id"
  optional resources.users.UserShort creator = 9; // @gotags: alias:"ref_creator"
}

enum DocRelation {
  DOC_RELATION_UNSPECIFIED = 0;
  DOC_RELATION_MENTIONED = 1;
  DOC_RELATION_TARGETS = 2;
  DOC_RELATION_CAUSED = 3;
}

message DocumentRelation {
  optional uint64 id = 1 [jstype = JS_STRING];
  optional resources.timestamp.Timestamp created_at = 2;
  uint64 document_id = 3 [jstype = JS_STRING];
  optional resources.documents.DocumentShort document = 4; // @gotags: alias:"document"
  int32 source_user_id = 5 [(validate.rules).int32.gt = 0]; // @gotags: alias:"source_user_id"
  optional resources.users.UserShort source_user = 6; // @gotags: alias:"source_user"
  DocRelation relation = 7 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"relation"
  int32 target_user_id = 8 [(validate.rules).int32.gt = 0]; // @gotags: alias:"target_user_id"
  optional resources.users.UserShort target_user = 9; // @gotags: alias:"target_user"
}
