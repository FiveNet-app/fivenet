syntax = "proto3";

package resources.jobs;

import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/resources/jobs;jobs";

message Qualification {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  string job = 5 [(validate.rules).string.max_len = 20];
  uint32 weight = 6 [(validate.rules).uint32.lt = 4294967295];
  bool open = 7;
  // @sanitize: method=StripTags
  string abbreviation = 8 [(validate.rules).string.max_len = 20];
  // @sanitize
  string title = 9 [(validate.rules).string = {
    min_len: 3,
    max_len: 1024
  }];
  // @sanitize
  string description = 10 [(validate.rules).string = {
    min_len: 20,
    max_bytes: 500000 // 0.5 Megabytes
  }];
  int32 creator_id = 11;
  optional resources.users.UserShort creator = 12; // @gotags: alias:"creator"
  string creator_job = 13 [(validate.rules).string.max_len = 20];
  QualificationAccess access = 14;
}

enum AccessLevelUpdateMode {
  ACCESS_LEVEL_UPDATE_MODE_UNSPECIFIED = 0;
  ACCESS_LEVEL_UPDATE_MODE_UPDATE = 1;
  ACCESS_LEVEL_UPDATE_MODE_DELETE = 2;
  ACCESS_LEVEL_UPDATE_MODE_CLEAR = 3;
}

enum AccessLevel {
  ACCESS_LEVEL_UNSPECIFIED = 0;
  ACCESS_LEVEL_BLOCKED = 1;
  ACCESS_LEVEL_VIEW = 2;
  ACCESS_LEVEL_TAKE = 3;
  ACCESS_LEVEL_GRADE = 4;
  ACCESS_LEVEL_EDIT = 5;
}

message QualificationAccess {
  repeated QualificationJobAccess jobs = 1;
  repeated QualificationRequirementsAccess requirements = 2;
}

message QualificationJobAccess {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  uint64 qualification_id = 4 [jstype = JS_STRING];
  string job = 5 [(validate.rules).string.max_len = 20];
  optional string job_label = 6 [(validate.rules).string.max_len = 50];
  int32 minimum_grade = 7 [(validate.rules).int32.gt = 0];
  optional string job_grade_label = 8 [(validate.rules).string.max_len = 50];
  AccessLevel access = 9 [(validate.rules).enum.defined_only = true];
}

message QualificationRequirementsAccess {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  uint64 qualification_id = 3 [jstype = JS_STRING];
  AccessLevel access = 4 [(validate.rules).enum.defined_only = true];
}

message QualificationResult {
  uint64 id = 1 [jstype = JS_STRING];
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp deleted_at = 3;
  uint64 qualification_id = 4 [jstype = JS_STRING];
  int32 user_id = 5;
  resources.users.UserShort user = 6;
  bool successful = 7;
  uint32 score = 8 [(validate.rules).uint32.lt = 1000];
  // @sanitize: method=StripTags
  string summary = 9 [(validate.rules).string = {min_len: 3, max_len: 512}];
  int32 creator_id = 10;
  resources.users.UserShort creator = 11;
  string creator_job = 12 [(validate.rules).string.max_len = 20];
}

message QualificationRequest {
  uint64 qualification_id = 1 [jstype = JS_STRING];
  optional resources.timestamp.Timestamp created_at = 2;
  int32 user_id = 3;
  resources.users.UserShort user = 4;
  optional string reason = 5 [(validate.rules).string = {max_len: 512}];
  optional bool approved = 6;
  optional resources.timestamp.Timestamp approved_at = 7;
  optional int32 approver_id = 8;
  optional resources.users.UserShort approver = 9;
}

message QualificationTestQuestion {
  uint64 qualification_id = 1 [jstype = JS_STRING];
  string question = 2;
  // TODO
}

message QualificationTestAnswer {
  uint64 qualification_id = 1 [jstype = JS_STRING];
  optional resources.timestamp.Timestamp created_at = 2;
  int32 user_id = 3;
  // TODO
}
