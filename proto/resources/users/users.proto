syntax = "proto3";

package resources.users;

import "resources/filestore/file.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/jobs.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/gen/go/proto/resources/users;users";

message UserShort {
  int32 user_id = 1 [(validate.rules).int32.gt = 0]; // @gotags: alias:"id"
  string identifier = 2 [(validate.rules).string.max_len = 64];
  string job = 3 [(validate.rules).string.max_len = 20];
  optional string job_label = 4 [(validate.rules).string.max_len = 50];
  int32 job_grade = 5 [(validate.rules).int32.gt = -1];
  optional string job_grade_label = 6 [(validate.rules).string.max_len = 50];
  string firstname = 7 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string lastname = 8 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string dateofbirth = 9 [(validate.rules).string.len = 10];
  optional string phone_number = 12 [(validate.rules).string.max_len = 20];
  optional resources.filestore.File avatar = 17;
}

message User {
  int32 user_id = 1 [(validate.rules).int32.gt = 0]; // @gotags: alias:"id"
  string identifier = 2 [(validate.rules).string.max_len = 64];
  string job = 3 [(validate.rules).string.max_len = 20];
  optional string job_label = 4 [(validate.rules).string.max_len = 50];
  int32 job_grade = 5 [(validate.rules).int32.gt = -1];
  optional string job_grade_label = 6 [(validate.rules).string.max_len = 50];
  string firstname = 7 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string lastname = 8 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string dateofbirth = 9 [(validate.rules).string.len = 10];
  optional string sex = 10 [(validate.rules).string = {
    min_len: 1,
    max_len: 2
  }];
  optional string height = 11;
  optional string phone_number = 12 [(validate.rules).string.max_len = 20];
  optional int32 visum = 13 [(validate.rules).int32.gte = 0];
  optional int32 playtime = 14 [(validate.rules).int32.gte = 0];

  UserProps props = 15; // @gotags: alias:"fivenet_user_props"
  repeated License licenses = 16; // @gotags: alias:"user_licenses"
  optional resources.filestore.File avatar = 17;
}

message License {
  string type = 1 [(validate.rules).string = {
    min_len: 3,
    max_len: 60
  }];
  string label = 2;
}

message UserProps {
  int32 user_id = 1 [(validate.rules).int32.gt = 0];
  optional bool wanted = 2;
  optional string job_name = 3; // @gotags: alias:"job"
  optional resources.users.Job job = 4;
  optional int32 job_grade_number = 5; // @gotags: alias:"job_grade"
  optional resources.users.JobGrade job_grade = 6;
  optional uint32 traffic_infraction_points = 7;
  optional int64 open_fines = 8;
  optional string blood_type = 9;
  optional resources.filestore.File mug_shot = 11;
  optional CitizenAttributes attributes = 12;
}

enum UserActivityType {
  USER_ACTIVITY_TYPE_UNSPECIFIED = 0;
  USER_ACTIVITY_TYPE_CHANGED = 1;
  USER_ACTIVITY_TYPE_MENTIONED = 2;
  USER_ACTIVITY_TYPE_CREATED = 3;
}

message UserActivity {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: alias:"fivenet_user_activity.id"
  UserActivityType type = 2 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"fivenet_user_activity.type"
  resources.timestamp.Timestamp created_at = 3; // @gotags: alias:"fivenet_user_activity.created_at"
  UserShort source_user = 4; // @gotags: alias:"source_user"
  UserShort target_user = 5; // @gotags: alias:"target_user"
  // @sanitize
  string key = 6 [(validate.rules).string = {
    min_len: 1,
    max_len: 64
  }]; // @gotags: alias:"fivenet_user_activity.key"
  string old_value = 7 [(validate.rules).string.max_len = 256]; // @gotags: alias:"fivenet_user_activity.old_value"
  string new_value = 8 [(validate.rules).string.max_len = 256]; // @gotags: alias:"fivenet_user_activity.new_value"
  // @sanitize
  string reason = 9 [(validate.rules).string.max_len = 255]; // @gotags: alias:"fivenet_user_activity.reason"
}

message CitizenAttributes {
  repeated CitizenAttribute list = 1 [(validate.rules).repeated.max_items = 10];
}

message CitizenAttribute {
  uint64 id = 1 [jstype = JS_STRING]; // @gotags: sql:"primary_key" alias:"id"
  optional string job = 2 [(validate.rules).string.max_len = 20];
  string name = 3 [(validate.rules).string.max_len = 48];
  string color = 4 [(validate.rules).string = {
    len: 7,
    pattern: "^#[A-Fa-f0-9]{6}$",
  }];
}
