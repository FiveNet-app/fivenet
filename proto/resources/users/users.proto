syntax = "proto3";

package resources.users;

import "resources/filestore/file.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/attributes.proto";
import "resources/users/jobs.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/gen/go/proto/resources/users;users";

message UserShort {
  int32 user_id = 1 [(validate.rules).int32.gt = 0]; // @gotags: alias:"id"
  optional string identifier = 2 [(validate.rules).string.max_len = 64];
  string job = 3 [(validate.rules).string.max_len = 20];
  optional string job_label = 4 [(validate.rules).string.max_len = 50];
  int32 job_grade = 5 [(validate.rules).int32.gt = -1];
  optional string job_grade_label = 6 [(validate.rules).string.max_len = 50];
  string firstname = 7 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string lastname = 8 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string dateofbirth = 9 [(validate.rules).string.len = 10];
  optional string phone_number = 12 [(validate.rules).string.max_len = 20];
  optional resources.filestore.File avatar = 17;
}

message User {
  int32 user_id = 1 [(validate.rules).int32.gt = 0]; // @gotags: alias:"id"
  optional string identifier = 2 [(validate.rules).string.max_len = 64];
  string job = 3 [(validate.rules).string.max_len = 20];
  optional string job_label = 4 [(validate.rules).string.max_len = 50];
  int32 job_grade = 5 [(validate.rules).int32.gt = -1];
  optional string job_grade_label = 6 [(validate.rules).string.max_len = 50];
  string firstname = 7 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string lastname = 8 [(validate.rules).string = {
    min_len: 1,
    max_len: 50
  }];
  string dateofbirth = 9 [(validate.rules).string.len = 10];
  optional string sex = 10 [(validate.rules).string = {
    min_len: 1,
    max_len: 2
  }];
  optional string height = 11;
  optional string phone_number = 12 [(validate.rules).string.max_len = 20];
  optional int32 visum = 13 [(validate.rules).int32.gte = 0];
  optional int32 playtime = 14 [(validate.rules).int32.gte = 0];

  UserProps props = 15; // @gotags: alias:"fivenet_user_props"
  repeated License licenses = 16; // @gotags: alias:"user_licenses"
  optional resources.filestore.File avatar = 17;
}

message License {
  string type = 1 [(validate.rules).string = {
    min_len: 3,
    max_len: 60
  }];
  string label = 2;
}

message UserLicenses {
  int32 user_id = 1 [(validate.rules).int32.gt = 0];
  repeated License licenses = 2;
}

message UserProps {
  int32 user_id = 1 [(validate.rules).int32.gt = 0];
  optional resources.timestamp.Timestamp updated_at = 2;
  optional bool wanted = 3;
  optional string job_name = 4; // @gotags: alias:"job"
  optional resources.users.Job job = 5;
  optional int32 job_grade_number = 6; // @gotags: alias:"job_grade"
  optional resources.users.JobGrade job_grade = 7;
  optional uint32 traffic_infraction_points = 8;
  optional int64 open_fines = 9;
  optional string blood_type = 10;
  optional resources.filestore.File mug_shot = 11;
  optional CitizenAttributes attributes = 12;
  // @sanitize: method=StripTags
  optional string email = 19 [(validate.rules).string = {min_len: 6, max_len: 80}];
}
