syntax = "proto3";

package gen.documents;
option go_package = "github.com/galexrt/arpanet/proto/documents";

import "common/database/database.proto";
import "common/timestamp/timestamp.proto";
import "common/userinfo/userinfo.proto";

message FindDocumentsRequest {
    int64 offset = 1;
    repeated gen.common.database.OrderBy orderBy = 2;
    string search = 3;
}

message FindDocumentsResponse {
    repeated Document documents = 1;
}

message Document {
    uint64 id = 1; // @gotags: sql:"primary_key" alias:"id"
    gen.common.timestamp.Timestamp created_at = 2; // @gotags: alias:"created_at"
    gen.common.timestamp.Timestamp updated_at = 3; // @gotags: alias:"updated_at"
    string title = 5; // @gotags: alias:"title"
    string content = 6; // @gotags: alias:"content"
    string content_type = 7; // @gotags: alias:"content_type"
    bool closed = 8; // @gotags: alias:"closed"
    string state = 9; // @gotags: alias:"state"
    gen.common.userinfo.ShortUser creator = 10; // @gotags: alias:"creator"
    string creator_job = 11; // @gotags: alias:"creator_job"
    bool public = 12; // @gotags: alias:"public"
}

message GetDocumentRequest {
    uint64 id = 1;
}

message GetDocumentResponse {
    Document document = 1;
    repeated Document responses = 2;
}

message CreateOrEditDocumentRequest {

}

message CreateOrEditDocumentResponse {

}

message Template {
    uint64 id = 1; // @gotags: sql:"primary_key" alias:"id"
    string job = 2; // @gotags: alias:"job"
    int32 jobGrade = 3; // @gotags: alias:"job_grade"
    string title = 4; // @gotags: alias:"title"
    string description = 5; // @gotags: alias:"description"
    string content_title = 6; // @gotags: alias:"content_title"
    string content = 7; // @gotags: alias:"content"
    string additionalData = 8; // @gotags: alias:"additional_data"
    int32 creatorID = 9; // @gotags: alias:"creator_id"
}

message TemplateShort {
    uint64 id = 1; // @gotags: sql:"primary_key" alias:"id"
    string job = 2; // @gotags: alias:"job"
    int32 jobGrade = 3; // @gotags: alias:"job_grade"
    string title = 4; // @gotags: alias:"title"
    string description = 5; // @gotags: alias:"description"
    int32 creatorID = 6; // @gotags: alias:"creator_id"
}

message ListTemplatesRequest {}

message ListTemplatesResponse {
    repeated TemplateShort templates = 1;
}

message GetTemplateRequest {
    uint64 id = 1;
}

message GetTemplateResponse {
    Template template = 1;
}

message GetDocumentAccessRequest {
    uint64 id = 1;
}

message GetDocumentAccessResponse {
}

message SetDocumentAccessRequest {
    uint64 id = 1;
}

message SetDocumentAccessResponse {
}

service DocumentsService {
    rpc FindDocuments(FindDocumentsRequest) returns (FindDocumentsResponse);

    rpc GetDocument(GetDocumentRequest) returns (GetDocumentResponse);
    rpc CreateOrEditDocument(CreateOrEditDocumentRequest) returns (CreateOrEditDocumentResponse);

    rpc ListTemplates(ListTemplatesRequest) returns (ListTemplatesResponse);
    rpc GetTemplate(GetTemplateRequest) returns (GetTemplateResponse);
    // TODO add create and update template methods

    rpc GetDocumentAccess(GetDocumentAccessRequest) returns (GetDocumentAccessResponse);
    rpc SetDocumentAccess(SetDocumentAccessRequest) returns (SetDocumentAccessResponse);
}
