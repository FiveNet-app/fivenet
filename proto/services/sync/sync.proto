syntax = "proto3";

package services.sync;

import "resources/sync/activity.proto";
import "resources/sync/data.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/gen/go/proto/services/sync;sync";

message GetStatusRequest {}

message GetStatusResponse {
  resources.sync.DataStatus jobs = 1;
  resources.sync.DataStatus users = 2;
  resources.sync.DataStatus vehicles = 3;
  resources.sync.DataStatus licenses = 4;
  resources.sync.DataStatus user_licenses = 5;
}

message AddActivityRequest {
  resources.sync.AddActivity activity = 1 [(validate.rules).message.required = true];
}

message AddActivityResponse {
  uint64 id = 1;
}

message SyncDataRequest {
  oneof data {
    resources.sync.DataJobs jobs = 1;
    resources.sync.DataUsers users = 2;
    resources.sync.DataVehicles vehicles = 3;
    resources.sync.DataLicenses licenses = 4;
    resources.sync.DataUserLicenses user_licenses = 5;
  }
}

message SyncDataResponse {
  int64 affected_rows = 1;
}

service SyncService {
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);

  rpc AddActivity(AddActivityRequest) returns (AddActivityResponse);
  rpc SyncData(SyncDataRequest) returns (SyncDataResponse);
}
