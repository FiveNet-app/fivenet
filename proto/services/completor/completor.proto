syntax = "proto3";

package services.completor;
option go_package = "github.com/galexrt/fivenet/proto/services/completor;completor";

import "resources/documents/category.proto";
import "resources/jobs/jobs.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

message CompleteCharNamesRequest {
  string search = 1 [(validate.rules).string.max_len = 50];
}

message CompleteCharNamesRespoonse {
  repeated resources.users.UserShort users = 1; // @gotags: alias:"user"
}

message CompleteJobNamesRequest {
  string search = 1 [(validate.rules).string.max_len = 50];
}

message CompleteJobNamesResponse {
  repeated resources.jobs.Job jobs = 1;
}

message CompleteDocumentCategoryRequest {
  string search = 1 [(validate.rules).string.max_len = 128];
}

message CompleteDocumentCategoryResponse {
  repeated resources.documents.DocumentCategory categories = 1;
}

service CompletorService {
  // @permission
  rpc CompleteCharNames(CompleteCharNamesRequest) returns (CompleteCharNamesRespoonse);
  // @permission
  rpc CompleteJobNames(CompleteJobNamesRequest) returns (CompleteJobNamesResponse);
  // @permission: PerJob=true
  rpc CompleteDocumentCategory(CompleteDocumentCategoryRequest) returns (CompleteDocumentCategoryResponse);
}
