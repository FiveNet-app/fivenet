syntax = "proto3";

package services.citizenstore;
option go_package = "github.com/galexrt/fivenet/proto/services/citizenstore;citizenstore";

import "resources/common/database/database.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

message FindUsersRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  repeated resources.common.database.OrderBy orderBy = 2 [(validate.rules).repeated.max_items = 3];
  // Search params
  string search_name = 3 [(validate.rules).string.max_len = 50];
  bool wanted = 4;
}

message FindUsersResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.users.User users = 2;
}

message GetUserRequest {
  int32 user_id = 1 [(validate.rules).int32.gt = 0];
}

message GetUserResponse {
  resources.users.User user = 1;
}

message GetUserActivityRequest {
  int32 user_id = 1 [(validate.rules).int32.gt = 0];
}

message GetUserActivityResponse {
  repeated resources.users.UserActivity activity = 1;
}

message SetUserPropsRequest {
  resources.users.UserProps props = 1;
}

message SetUserPropsResponse {}

service CitizenStoreService {
  // @perm: fields=PhoneNumber,Licenses,UserProps;description="Citizens List and Search"
  rpc FindUsers(FindUsersRequest) returns (FindUsersResponse);
  // @perm: name=FindUsers
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  // @perm: fields=SourceUser;description="Citizen Info Activity Feed"
  rpc GetUserActivity(GetUserActivityRequest) returns (GetUserActivityResponse);
  // @perm: fields=Wanted;description="Set Citizen Props (e.g., wanted status)"
  rpc SetUserProps(SetUserPropsRequest) returns (SetUserPropsResponse);
}
