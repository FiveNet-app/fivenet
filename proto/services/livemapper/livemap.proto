syntax = "proto3";

package services.livemapper;

import "resources/livemap/livemap.proto";
import "resources/users/jobs.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/services/livemapper;livemapper";

message StreamRequest {}

message StreamResponse {
  repeated resources.users.Job jobs_users = 1;
  repeated resources.livemap.UserMarker users = 2;
  repeated resources.users.Job jobs_markers = 3;
  repeated resources.livemap.Marker markers = 4;
}

message CreateOrUpdateMarkerRequest {
  resources.livemap.Marker marker = 1 [(validate.rules).message.required = true];
}

message CreateOrUpdateMarkerResponse {
  resources.livemap.Marker marker = 1;
}

message DeleteMarkerRequest {
  uint64 id = 1;
}

message DeleteMarkerResponse {}

service LivemapperService {
  // @perm: Attrs=Markers/JobList:"config.Game.Livemap.Jobs"|Players/JobGradeList
  rpc Stream(StreamRequest) returns (stream StreamResponse);

  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank", "Any"}ยง[]string{"Own"}
  rpc CreateOrUpdateMarker(CreateOrUpdateMarkerRequest) returns (CreateOrUpdateMarkerResponse);
  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank", "Any"}ยง[]string{"Own"}
  rpc DeleteMarker(DeleteMarkerRequest) returns (DeleteMarkerResponse);
}
