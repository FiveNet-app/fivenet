syntax = "proto3";

package services.jobs;

import "resources/common/database/database.proto";
import "resources/jobs/colleagues.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/services/jobs;jobs";

// Colleagues

message ListColleaguesRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  // Search params
  string search_name = 2 [(validate.rules).string.max_len = 50];
}

message ListColleaguesResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.jobs.Colleague colleagues = 2;
}

message GetColleagueRequest {
  int32 user_id = 1;
}

message GetColleagueResponse {
  resources.jobs.Colleague colleague = 1;
}

message SetJobsUserPropsRequest {
  resources.jobs.JobsUserProps props = 1;
  // @sanitize
  string reason = 2 [(validate.rules).string = {
    ignore_empty: true,
    min_len: 3,
    max_len: 255
  }];
}

message SetJobsUserPropsResponse {
  resources.jobs.JobsUserProps props = 1;
}

// MOTD

message GetMOTDRequest {}

message GetMOTDResponse {
  string motd = 1;
}

message SetMOTDRequest {
  // @sanitize: method=StripTags
  string motd = 1 [(validate.rules).string.max_len = 1024];
}

message SetMOTDResponse {
  string motd = 1;
}

service JobsService {
  // @perm
  rpc ListColleagues(ListColleaguesRequest) returns (ListColleaguesResponse);

  // @perm: Name=SuperUser
  rpc GetColleague(GetColleagueRequest) returns (GetColleagueResponse);
  // @perm
  rpc SetJobsUserProps(SetJobsUserPropsRequest) returns (SetJobsUserPropsResponse);

  // @perm: Name=Any
  rpc GetMOTD(GetMOTDRequest) returns (GetMOTDResponse);
  // @perm
  rpc SetMOTD(SetMOTDRequest) returns (SetMOTDResponse);
}
