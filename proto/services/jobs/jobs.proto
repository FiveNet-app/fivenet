syntax = "proto3";

package services.jobs;

import "resources/common/database/database.proto";
import "resources/users/users.proto";
import "resources/jobs/conduct.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/services/jobs;jobs";

// Colleagues

message ColleaguesListRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  // Search params
  string search_name = 2 [(validate.rules).string.max_len = 50];
}

message ColleaguesListResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.users.User users = 2;
}

// Conduct Register

message ConductListEntriesRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  // Search params
  repeated resources.jobs.ConductType types = 2;
  optional bool show_expired = 3;
  repeated int32 user_ids = 4;
}

message ConductListEntriesResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.jobs.ConductEntry entries = 2;
}

message ConductCreateEntryRequest {
  resources.jobs.ConductEntry entry = 1 [(validate.rules).message.required = true];
}

message ConductCreateEntryResponse {
  resources.jobs.ConductEntry entry = 1;
}

message ConductUpdateEntryRequest {
  resources.jobs.ConductEntry entry = 1 [(validate.rules).message.required = true];
}

message ConductUpdateEntryResponse {
  resources.jobs.ConductEntry entry = 1 [(validate.rules).message.required = true];
}

message ConductDeleteEntryRequest {
  uint64 id = 1;
}

message ConductDeleteEntryResponse {}

service JobsService {
  // @perm
  rpc ColleaguesList(ColleaguesListRequest) returns (ColleaguesListResponse);

  // @perm: Attrs=Access/StringList:[]string{"Own", "All"}ยง[]string{"Own"}
  rpc ConductListEntries(ConductListEntriesRequest) returns (ConductListEntriesResponse);
  // @perm
  rpc ConductCreateEntry(ConductCreateEntryRequest) returns (ConductCreateEntryResponse);
  // @perm
  rpc ConductUpdateEntry(ConductUpdateEntryRequest) returns (ConductUpdateEntryResponse);
  // @perm
  rpc ConductDeleteEntry(ConductDeleteEntryRequest) returns (ConductDeleteEntryResponse);
}
