syntax = "proto3";

package services.jobs;

import "resources/common/database/database.proto";
import "resources/jobs/requests.proto";
import "resources/timestamp/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/services/jobs;jobs";

// Requests

message ListRequestsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  // Search
  repeated int32 user_ids = 2;
  optional resources.timestamp.Timestamp from = 3;
  optional resources.timestamp.Timestamp to = 4;
  optional string search = 5 [(validate.rules).string.max_len = 50];
}

message ListRequestsResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.jobs.Request entries = 2;
}

message CreateRequestRequest {
  resources.jobs.Request entry = 1 [(validate.rules).message.required = true];
}

message CreateRequestResponse {
  resources.jobs.Request entry = 1;
}

message UpdateRequestRequest {
  resources.jobs.Request entry = 1 [(validate.rules).message.required = true];
}

message UpdateRequestResponse {
  resources.jobs.Request entry = 1;
}

message DeleteRequestRequest {
  uint64 id = 1 [jstype = JS_STRING];
}

message DeleteRequestResponse {}

message RequestsApproveRequest {
  uint64 id = 1 [jstype = JS_STRING];
  bool approve = 2;
}

message RequestsApproveResponse {}

message RequestsCloseRequest {
  uint64 id = 1 [jstype = JS_STRING];
  bool close = 2;
}

message RequestsCloseResponse {}

message ListRequestTypesRequest {}

message ListRequestTypesResponse {
  repeated resources.jobs.RequestType types = 1;
}

message CreateOrUpdateRequestTypeRequest {
  resources.jobs.RequestType request_type = 1;
}

message CreateOrUpdateRequestTypeResponse {
  resources.jobs.RequestType request_type = 1;
}

message DeleteRequestTypeRequest {
  uint64 id = 1 [jstype = JS_STRING];
}

message DeleteRequestTypeResponse {}

message ListRequestCommentsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  uint64 request_id = 2 [jstype = JS_STRING];
}

message ListRequestCommentsResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.jobs.RequestComment comments = 2;
}

message PostRequestCommentRequest {
  resources.jobs.RequestComment comment = 1 [(validate.rules).message.required = true];
}

message PostRequestCommentResponse {
  resources.jobs.RequestComment comment = 1 [(validate.rules).message.required = true];
}

message DeleteRequestCommentRequest {
  uint64 id = 1 [jstype = JS_STRING];
}

message DeleteRequestCommentResponse {}

service RequestsService {
  // @perm: Attrs=Access/StringList:[]string{"Own", "All"}ยง[]string{"Own"}
  rpc ListRequests(ListRequestsRequest) returns (ListRequestsResponse);
  // @perm
  rpc CreateRequest(CreateRequestRequest) returns (CreateRequestResponse);
  // @perm
  rpc UpdateRequest(UpdateRequestRequest) returns (UpdateRequestResponse);
  // @perm
  rpc DeleteRequest(DeleteRequestRequest) returns (DeleteRequestResponse);

  // @perm: Name=ListRequests
  rpc ListRequestTypes(ListRequestTypesRequest) returns (ListRequestTypesResponse);
  // @perm
  rpc CreateOrUpdateRequestType(CreateOrUpdateRequestTypeRequest) returns (CreateOrUpdateRequestTypeResponse);
  // @perm
  rpc RequestsDeleteType(DeleteRequestTypeRequest) returns (DeleteRequestTypeResponse);
  // @perm: Name=ListRequests
  rpc ListRequestComments(ListRequestCommentsRequest) returns (ListRequestCommentsResponse);
  // @perm: Name=CreateRequest
  rpc PostRequestComment(PostRequestCommentRequest) returns (PostRequestCommentResponse);
  // @perm
  rpc DeleteRequestComment(DeleteRequestCommentRequest) returns (DeleteRequestCommentResponse);
}
