syntax = "proto3";

package services.docstore;

import "resources/common/database/database.proto";
import "resources/documents/category.proto";
import "resources/documents/comment.proto";
import "resources/documents/documents.proto";
import "resources/documents/templates.proto";
import "resources/timestamp/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/galexrt/fivenet/gen/go/proto/services/docstore;docstore";

// Templates ==================================================================
message ListTemplatesRequest {}

message ListTemplatesResponse {
  repeated resources.documents.TemplateShort templates = 1;
}

message GetTemplateRequest {
  uint64 template_id = 1;
  optional resources.documents.TemplateData data = 2;
  optional bool render = 3;
}

message GetTemplateResponse {
  resources.documents.Template template = 1;
  bool rendered = 2;
}

message CreateTemplateRequest {
  resources.documents.Template template = 1 [(validate.rules).message.required = true];
}

message CreateTemplateResponse {
  uint64 id = 1;
}

message UpdateTemplateRequest {
  resources.documents.Template template = 1 [(validate.rules).message.required = true];
}

message UpdateTemplateResponse {
  uint64 id = 1;
}

message DeleteTemplateRequest {
  uint64 id = 1;
}

message DeleteTemplateResponse {}

// Documents ==================================================================
message ListDocumentsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  repeated resources.common.database.OrderBy orderBy = 2 [(validate.rules).repeated.max_items = 3];
  // Search params
  optional string search = 3;
  repeated uint64 category_ids = 4;
  repeated int32 creator_ids = 5;
  optional resources.timestamp.Timestamp from = 6;
  optional resources.timestamp.Timestamp to = 7;
  optional bool closed = 8;
}

message ListDocumentsResponse {
  resources.common.database.PaginationResponse pagination = 1 [(validate.rules).message.required = true];
  repeated resources.documents.DocumentShort documents = 2;
}

message GetDocumentRequest {
  uint64 document_id = 1;
}

message GetDocumentResponse {
  resources.documents.Document document = 1;
  resources.documents.DocumentAccess access = 2;
}

message GetDocumentReferencesRequest {
  uint64 document_id = 1;
}

message GetDocumentReferencesResponse {
  repeated resources.documents.DocumentReference references = 1; // @gotags: alias:"reference"
}

message GetDocumentRelationsRequest {
  uint64 document_id = 1;
}

message GetDocumentRelationsResponse {
  repeated resources.documents.DocumentRelation relations = 1; // @gotags: alias:"relation"
}

message AddDocumentReferenceRequest {
  resources.documents.DocumentReference reference = 1 [(validate.rules).message.required = true];
}

message AddDocumentReferenceResponse {
  uint64 id = 1;
}

message RemoveDocumentReferenceRequest {
  uint64 id = 1;
}

message RemoveDocumentReferenceResponse {}

message AddDocumentRelationRequest {
  resources.documents.DocumentRelation relation = 1 [(validate.rules).message.required = true];
}

message AddDocumentRelationResponse {
  uint64 id = 1;
}

message RemoveDocumentRelationRequest {
  uint64 id = 1;
}

message RemoveDocumentRelationResponse {}

// Comments ===============================================================
message GetCommentsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  uint64 document_id = 2;
}

message GetCommentsResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.documents.Comment comments = 2;
}

message PostCommentRequest {
  resources.documents.Comment comment = 1;
}

message PostCommentResponse {
  uint64 id = 1;
}

message EditCommentRequest {
  resources.documents.Comment comment = 1;
}

message EditCommentResponse {}

message DeleteCommentRequest {
  uint64 comment_id = 1;
}

message DeleteCommentResponse {}

message CreateDocumentRequest {
  optional uint64 category_id = 1; // @gotags: alias:"category_id"
  // @sanitize: method=StripTags
  string title = 2 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 21845
  }]; // @gotags: alias:"title"
  // @sanitize
  string content = 3 [(validate.rules).string = {
    min_len: 20,
    max_bytes: 1750000 // 1.75 Megabytes
  }]; // @gotags: alias:"content"
  resources.documents.DocContentType content_type = 4 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"content_type"
  optional string data = 5 [(validate.rules).string = {
    max_bytes: 1000000 // 1 Megabyte
  }]; // @gotags: alias:"data"
  // @sanitize
  string state = 6 [(validate.rules).string.max_len = 24]; // @gotags: alias:"state"
  bool closed = 7; // @gotags: alias:"closed"
  bool public = 8; // @gotags: alias:"public"
  optional resources.documents.DocumentAccess access = 9;
}

message CreateDocumentResponse {
  uint64 document_id = 1; // @gotags: alias:"id"
}

message UpdateDocumentRequest {
  uint64 document_id = 1; // @gotags: alias:"id"
  optional uint64 category_id = 2; // @gotags: alias:"category_id"
  // @sanitize: method=StripTags
  string title = 3 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 21845
  }]; // @gotags: alias:"title"
  // @sanitize
  string content = 4 [(validate.rules).string = {
    min_len: 20,
    max_bytes: 1750000 // 1.75 Megabytes
  }]; // @gotags: alias:"content"
  resources.documents.DocContentType content_type = 5 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"content_type"
  optional string data = 6 [(validate.rules).string = {
    max_bytes: 1000000 // 1 Megabyte
  }]; // @gotags: alias:"data"
  // @sanitize
  string state = 7 [(validate.rules).string.max_len = 24]; // @gotags: alias:"state"
  bool closed = 8; // @gotags: alias:"closed"
  bool public = 9; // @gotags: alias:"public"
  optional resources.documents.DocumentAccess access = 10;
}

message UpdateDocumentResponse {
  uint64 document_id = 1; // @gotags: alias:"id"
}

message DeleteDocumentRequest {
  uint64 document_id = 1; // @gotags: alias:"id"
}

message DeleteDocumentResponse {}

message ToggleDocumentRequest {
  uint64 document_id = 1;
  bool closed = 2;
}

message ToggleDocumentResponse {}

// Access =================================================================
message GetDocumentAccessRequest {
  uint64 document_id = 1;
}

message GetDocumentAccessResponse {
  resources.documents.DocumentAccess access = 1 [(validate.rules).message.required = true];
}

enum AccessLevelUpdateMode {
  ACCESS_LEVEL_UPDATE_MODE_UNSPECIFIED = 0;
  ACCESS_LEVEL_UPDATE_MODE_UPDATE = 1;
  ACCESS_LEVEL_UPDATE_MODE_DELETE = 2;
  ACCESS_LEVEL_UPDATE_MODE_CLEAR = 3;
}

message SetDocumentAccessRequest {
  uint64 document_id = 1;
  AccessLevelUpdateMode mode = 2 [(validate.rules).enum.defined_only = true];
  resources.documents.DocumentAccess access = 3 [(validate.rules).message.required = true];
}

message SetDocumentAccessResponse {}

message ListUserDocumentsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  int32 user_id = 2 [(validate.rules).int32.gt = 0];
  repeated resources.documents.DocRelation relations = 3 [(validate.rules).repeated.max_items = 3];
}

message ListUserDocumentsResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.documents.DocumentRelation relations = 2;
}

// Categories
message ListCategoriesRequest {}

message ListCategoriesResponse {
  repeated resources.documents.Category category = 1;
}

message CreateCategoryRequest {
  resources.documents.Category category = 1 [(validate.rules).message.required = true];
}

message CreateCategoryResponse {
  uint64 id = 1;
}

message UpdateCategoryRequest {
  resources.documents.Category category = 1 [(validate.rules).message.required = true];
}

message UpdateCategoryResponse {}

message DeleteCategoryRequest {
  repeated uint64 ids = 1;
}

message DeleteCategoryResponse {}

service DocStoreService {
  // @perm
  rpc ListTemplates(ListTemplatesRequest) returns (ListTemplatesResponse);
  // @perm: Name=ListTemplates
  rpc GetTemplate(GetTemplateRequest) returns (GetTemplateResponse);
  // @perm
  rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse);
  // @perm: Name=CreateTemplate
  rpc UpdateTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse);
  // @perm
  rpc DeleteTemplate(DeleteTemplateRequest) returns (DeleteTemplateResponse);

  // @perm
  rpc ListDocuments(ListDocumentsRequest) returns (ListDocumentsResponse);
  // @perm
  rpc GetDocument(GetDocumentRequest) returns (GetDocumentResponse);
  // @perm
  rpc CreateDocument(CreateDocumentRequest) returns (CreateDocumentResponse);
  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}ยง[]string{"Own"}
  rpc UpdateDocument(UpdateDocumentRequest) returns (UpdateDocumentResponse);
  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}ยง[]string{"Own"}
  rpc DeleteDocument(DeleteDocumentRequest) returns (DeleteDocumentResponse);

  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}ยง[]string{"Own"}
  rpc ToggleDocument(ToggleDocumentRequest) returns (ToggleDocumentResponse);

  // @perm: Name=GetDocument
  rpc GetDocumentReferences(GetDocumentReferencesRequest) returns (GetDocumentReferencesResponse);
  // @perm: Name=GetDocument
  rpc GetDocumentRelations(GetDocumentRelationsRequest) returns (GetDocumentRelationsResponse);
  // @perm
  rpc AddDocumentReference(AddDocumentReferenceRequest) returns (AddDocumentReferenceResponse);
  // @perm: Name=AddDocumentReference
  rpc RemoveDocumentReference(RemoveDocumentReferenceRequest) returns (RemoveDocumentReferenceResponse);
  // @perm
  rpc AddDocumentRelation(AddDocumentRelationRequest) returns (AddDocumentRelationResponse);
  // @perm: Name=AddDocumentRelation
  rpc RemoveDocumentRelation(RemoveDocumentRelationRequest) returns (RemoveDocumentRelationResponse);

  // @perm: Name=GetDocument
  rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse);
  // @perm
  rpc PostComment(PostCommentRequest) returns (PostCommentResponse);
  // @perm: Name=PostComment
  rpc EditComment(EditCommentRequest) returns (EditCommentResponse);
  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}ยง[]string{"Own"}
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);

  // @perm: Name=GetDocument
  rpc GetDocumentAccess(GetDocumentAccessRequest) returns (GetDocumentAccessResponse);
  // @perm: Name=CreateDocument
  rpc SetDocumentAccess(SetDocumentAccessRequest) returns (SetDocumentAccessResponse);

  // @perm
  rpc ListUserDocuments(ListUserDocumentsRequest) returns (ListUserDocumentsResponse);

  // @perm
  rpc ListCategories(ListCategoriesRequest) returns (ListCategoriesResponse);
  // @perm
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
  // @perm: Name=CreateCategory
  rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse);
  // @perm
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);
}
