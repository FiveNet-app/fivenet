syntax = "proto3";

package services.rector;

import "resources/users/jobs.proto";
import "resources/users/users.proto";
import "resources/vehicles/vehicles.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/gen/go/proto/services/rector;rector";

message GetStatusRequest {}

message GetStatusResponse {
  DataStatus users = 1;
  DataStatus jobs = 2;
  DataStatus licenses = 3;
  DataStatus vehicles = 4;
}

message DataStatus {
  uint64 total_count = 1;
  uint64 last_id = 2;
}

message SyncRequest {
  oneof data {
    DataUsers users = 1;
    DataJobs jobs = 2;
    DataLicenses licenses = 3;
    DataVehicles vehicles = 4;
  }
}

message DataUsers {
  repeated resources.users.User users = 1 [(validate.rules).repeated.max_items = 500];
}

message DataJobs {
  repeated resources.users.Job jobs = 1 [(validate.rules).repeated.max_items = 150];
}

message DataLicenses {
  repeated resources.users.License licenses = 1 [(validate.rules).repeated.max_items = 100];
}

message DataVehicles {
  repeated resources.vehicles.Vehicle vehicles = 1 [(validate.rules).repeated.max_items = 1000];
}

message SyncResponse {
  int64 affected_rows = 1;
}

service SyncService {
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);

  rpc Sync(SyncRequest) returns (SyncResponse);
}
