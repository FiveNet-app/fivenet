syntax = "proto3";

package services.auth;
option go_package = "github.com/galexrt/fivenet/proto/services/auth;auth";

import "resources/jobs/jobs.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

message LoginRequest {
  string username = 1 [(validate.rules).string = {min_len: 3, max_len: 24}];
  string password = 2 [(validate.rules).string = {min_len: 6, max_bytes: 70}];
}

message LoginResponse {
  string token = 1;
}

message CreateAccountRequest {
  string reg_token = 1 [(validate.rules).string = {
    len: 6,
    pattern: "^[0-9]{6}$",
  }];
  string username = 2 [(validate.rules).string = {min_len: 3, max_len: 24}];
  string password = 3 [(validate.rules).string = {min_len: 6, max_bytes: 70}];
}

message CreateAccountResponse {}

message GetCharactersRequest {}

message GetCharactersResponse {
  repeated resources.users.User chars = 1;
}

message ChooseCharacterRequest {
  int32 char_id = 1 [(validate.rules).int32.gt = 0];
}

message ChooseCharacterResponse {
  string token = 1;
  repeated string permissions = 2;
  resources.jobs.JobProps job_props = 3;
}

message LogoutRequest {}

message LogoutResponse {
  bool success = 1;
}

message SetJobRequest {
  int32 char_id = 1 [(validate.rules).int32.gt = 0];
  string job = 2 [(validate.rules).string.max_len = 50];
  int32 job_grade = 3 [(validate.rules).int32.gt = 0];
}

message SetJobResponse {
  string token = 1;
  resources.jobs.JobProps job_props = 2;
  resources.users.User char = 3;
}

service AuthService {
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  // @permission
  rpc GetCharacters(GetCharactersRequest) returns (GetCharactersResponse);
  // @permission: name=GetCharacters
  rpc ChooseCharacter(ChooseCharacterRequest) returns (ChooseCharacterResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  // @permission
  rpc SetJob(SetJobRequest) returns (SetJobResponse);
}
