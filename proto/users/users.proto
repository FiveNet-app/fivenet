syntax = "proto3";

package gen.users;
option go_package = "github.com/galexrt/arpanet/proto/users";

import "validate/validate.proto";
import "common/database/database.proto";
import "common/timestamp/timestamp.proto";
import "common/userinfo/userinfo.proto";

message FindUsersRequest {
    int64 offset = 1;
    repeated gen.common.database.OrderBy orderBy = 2;
    string firstname = 3;
    string lastname = 4;
    bool wanted = 5;
}

message FindUsersResponse {
    int64 totalCount = 1;
    int64 offset = 2;
    int64 end = 3;
    repeated gen.common.userinfo.User users = 4;
}

message GetUserRequest {
    int32 userID = 1 [(validate.rules).int32.gt = 0];
}

message GetUserResponse {
    gen.common.userinfo.User user = 1;
}

message GetUserActivityRequest {
    int32 userID = 1 [(validate.rules).int32.gt = 0];
}

message GetUserActivityResponse {
    repeated UserActivity activity = 1;
}

message SetUserPropsRequest {
    int32 userID = 1 [(validate.rules).int32.gt = 0];
    optional bool wanted = 2;
}

message SetUserPropsResponse {
}

message UserActivity {
    uint64 id = 1 [(validate.rules).uint64.gt = 0]; // @gotags: sql:"primary_key" alias:"arpanet_user_activity.id"
    string type = 2; // @gotags: alias:"arpanet_user_activity.type"
    gen.common.timestamp.Timestamp createdAt = 3; // @gotags: alias:"arpanet_user_activity.created_at"
    gen.common.userinfo.ShortUser targetUser = 4; // @gotags: alias:"target_user"
    gen.common.userinfo.ShortUser causeUser = 5; // @gotags: alias:"cause_user"
    string key = 6; // @gotags: alias:"arpanet_user_activity.key"
    string oldValue = 7; // @gotags: alias:"arpanet_user_activity.old_value"
    string newValue = 8; // @gotags: alias:"arpanet_user_activity.new_value"
}

service UsersService {
    rpc FindUsers(FindUsersRequest) returns (FindUsersResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc GetUserActivity(GetUserActivityRequest) returns (GetUserActivityResponse);
    rpc SetUserProps(SetUserPropsRequest) returns (SetUserPropsResponse);
}
