/**
 * @fileoverview gRPC-Web generated client stub for gen.documents
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: documents/documents.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as documents_documents_pb from '../documents/documents_pb';


export class DocumentsServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorFindDocuments = new grpcWeb.MethodDescriptor(
    '/gen.documents.DocumentsService/FindDocuments',
    grpcWeb.MethodType.UNARY,
    documents_documents_pb.FindDocumentsRequest,
    documents_documents_pb.FindDocumentsResponse,
    (request: documents_documents_pb.FindDocumentsRequest) => {
      return request.serializeBinary();
    },
    documents_documents_pb.FindDocumentsResponse.deserializeBinary
  );

  findDocuments(
    request: documents_documents_pb.FindDocumentsRequest,
    metadata: grpcWeb.Metadata | null): Promise<documents_documents_pb.FindDocumentsResponse>;

  findDocuments(
    request: documents_documents_pb.FindDocumentsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: documents_documents_pb.FindDocumentsResponse) => void): grpcWeb.ClientReadableStream<documents_documents_pb.FindDocumentsResponse>;

  findDocuments(
    request: documents_documents_pb.FindDocumentsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: documents_documents_pb.FindDocumentsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gen.documents.DocumentsService/FindDocuments',
        request,
        metadata || {},
        this.methodDescriptorFindDocuments,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gen.documents.DocumentsService/FindDocuments',
    request,
    metadata || {},
    this.methodDescriptorFindDocuments);
  }

  methodDescriptorGetDocument = new grpcWeb.MethodDescriptor(
    '/gen.documents.DocumentsService/GetDocument',
    grpcWeb.MethodType.UNARY,
    documents_documents_pb.GetDocumentRequest,
    documents_documents_pb.GetDocumentResponse,
    (request: documents_documents_pb.GetDocumentRequest) => {
      return request.serializeBinary();
    },
    documents_documents_pb.GetDocumentResponse.deserializeBinary
  );

  getDocument(
    request: documents_documents_pb.GetDocumentRequest,
    metadata: grpcWeb.Metadata | null): Promise<documents_documents_pb.GetDocumentResponse>;

  getDocument(
    request: documents_documents_pb.GetDocumentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: documents_documents_pb.GetDocumentResponse) => void): grpcWeb.ClientReadableStream<documents_documents_pb.GetDocumentResponse>;

  getDocument(
    request: documents_documents_pb.GetDocumentRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: documents_documents_pb.GetDocumentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gen.documents.DocumentsService/GetDocument',
        request,
        metadata || {},
        this.methodDescriptorGetDocument,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gen.documents.DocumentsService/GetDocument',
    request,
    metadata || {},
    this.methodDescriptorGetDocument);
  }

  methodDescriptorCreateOrEditDocument = new grpcWeb.MethodDescriptor(
    '/gen.documents.DocumentsService/CreateOrEditDocument',
    grpcWeb.MethodType.UNARY,
    documents_documents_pb.CreateOrEditDocumentRequest,
    documents_documents_pb.CreateOrEditDocumentResponse,
    (request: documents_documents_pb.CreateOrEditDocumentRequest) => {
      return request.serializeBinary();
    },
    documents_documents_pb.CreateOrEditDocumentResponse.deserializeBinary
  );

  createOrEditDocument(
    request: documents_documents_pb.CreateOrEditDocumentRequest,
    metadata: grpcWeb.Metadata | null): Promise<documents_documents_pb.CreateOrEditDocumentResponse>;

  createOrEditDocument(
    request: documents_documents_pb.CreateOrEditDocumentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: documents_documents_pb.CreateOrEditDocumentResponse) => void): grpcWeb.ClientReadableStream<documents_documents_pb.CreateOrEditDocumentResponse>;

  createOrEditDocument(
    request: documents_documents_pb.CreateOrEditDocumentRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: documents_documents_pb.CreateOrEditDocumentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gen.documents.DocumentsService/CreateOrEditDocument',
        request,
        metadata || {},
        this.methodDescriptorCreateOrEditDocument,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gen.documents.DocumentsService/CreateOrEditDocument',
    request,
    metadata || {},
    this.methodDescriptorCreateOrEditDocument);
  }

  methodDescriptorGetDocumentAccess = new grpcWeb.MethodDescriptor(
    '/gen.documents.DocumentsService/GetDocumentAccess',
    grpcWeb.MethodType.UNARY,
    documents_documents_pb.GetDocumentAccessRequest,
    documents_documents_pb.GetDocumentAccessResponse,
    (request: documents_documents_pb.GetDocumentAccessRequest) => {
      return request.serializeBinary();
    },
    documents_documents_pb.GetDocumentAccessResponse.deserializeBinary
  );

  getDocumentAccess(
    request: documents_documents_pb.GetDocumentAccessRequest,
    metadata: grpcWeb.Metadata | null): Promise<documents_documents_pb.GetDocumentAccessResponse>;

  getDocumentAccess(
    request: documents_documents_pb.GetDocumentAccessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: documents_documents_pb.GetDocumentAccessResponse) => void): grpcWeb.ClientReadableStream<documents_documents_pb.GetDocumentAccessResponse>;

  getDocumentAccess(
    request: documents_documents_pb.GetDocumentAccessRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: documents_documents_pb.GetDocumentAccessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gen.documents.DocumentsService/GetDocumentAccess',
        request,
        metadata || {},
        this.methodDescriptorGetDocumentAccess,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gen.documents.DocumentsService/GetDocumentAccess',
    request,
    metadata || {},
    this.methodDescriptorGetDocumentAccess);
  }

  methodDescriptorSetDocumentAccess = new grpcWeb.MethodDescriptor(
    '/gen.documents.DocumentsService/SetDocumentAccess',
    grpcWeb.MethodType.UNARY,
    documents_documents_pb.SetDocumentAccessRequest,
    documents_documents_pb.SetDocumentAccessResponse,
    (request: documents_documents_pb.SetDocumentAccessRequest) => {
      return request.serializeBinary();
    },
    documents_documents_pb.SetDocumentAccessResponse.deserializeBinary
  );

  setDocumentAccess(
    request: documents_documents_pb.SetDocumentAccessRequest,
    metadata: grpcWeb.Metadata | null): Promise<documents_documents_pb.SetDocumentAccessResponse>;

  setDocumentAccess(
    request: documents_documents_pb.SetDocumentAccessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: documents_documents_pb.SetDocumentAccessResponse) => void): grpcWeb.ClientReadableStream<documents_documents_pb.SetDocumentAccessResponse>;

  setDocumentAccess(
    request: documents_documents_pb.SetDocumentAccessRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: documents_documents_pb.SetDocumentAccessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gen.documents.DocumentsService/SetDocumentAccess',
        request,
        metadata || {},
        this.methodDescriptorSetDocumentAccess,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gen.documents.DocumentsService/SetDocumentAccess',
    request,
    metadata || {},
    this.methodDescriptorSetDocumentAccess);
  }

}

