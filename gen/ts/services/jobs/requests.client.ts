// @generated by protobuf-ts 2.9.3 with parameter optimize_speed,long_type_bigint
// @generated from protobuf file "services/jobs/requests.proto" (package "services.jobs", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { JobsRequestsService } from "./requests";
import type { DeleteRequestCommentResponse } from "./requests";
import type { DeleteRequestCommentRequest } from "./requests";
import type { PostRequestCommentResponse } from "./requests";
import type { PostRequestCommentRequest } from "./requests";
import type { ListRequestCommentsResponse } from "./requests";
import type { ListRequestCommentsRequest } from "./requests";
import type { DeleteRequestTypeResponse } from "./requests";
import type { DeleteRequestTypeRequest } from "./requests";
import type { CreateOrUpdateRequestTypeResponse } from "./requests";
import type { CreateOrUpdateRequestTypeRequest } from "./requests";
import type { ListRequestTypesResponse } from "./requests";
import type { ListRequestTypesRequest } from "./requests";
import type { DeleteRequestResponse } from "./requests";
import type { DeleteRequestRequest } from "./requests";
import type { UpdateRequestResponse } from "./requests";
import type { UpdateRequestRequest } from "./requests";
import type { CreateRequestResponse } from "./requests";
import type { CreateRequestRequest } from "./requests";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListRequestsResponse } from "./requests";
import type { ListRequestsRequest } from "./requests";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service services.jobs.JobsRequestsService
 */
export interface IJobsRequestsServiceClient {
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "All"}
     *
     * @generated from protobuf rpc: ListRequests(services.jobs.ListRequestsRequest) returns (services.jobs.ListRequestsResponse);
     */
    listRequests(input: ListRequestsRequest, options?: RpcOptions): UnaryCall<ListRequestsRequest, ListRequestsResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateRequest(services.jobs.CreateRequestRequest) returns (services.jobs.CreateRequestResponse);
     */
    createRequest(input: CreateRequestRequest, options?: RpcOptions): UnaryCall<CreateRequestRequest, CreateRequestResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: UpdateRequest(services.jobs.UpdateRequestRequest) returns (services.jobs.UpdateRequestResponse);
     */
    updateRequest(input: UpdateRequestRequest, options?: RpcOptions): UnaryCall<UpdateRequestRequest, UpdateRequestResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteRequest(services.jobs.DeleteRequestRequest) returns (services.jobs.DeleteRequestResponse);
     */
    deleteRequest(input: DeleteRequestRequest, options?: RpcOptions): UnaryCall<DeleteRequestRequest, DeleteRequestResponse>;
    /**
     * @perm: Name=ListRequests
     *
     * @generated from protobuf rpc: ListRequestTypes(services.jobs.ListRequestTypesRequest) returns (services.jobs.ListRequestTypesResponse);
     */
    listRequestTypes(input: ListRequestTypesRequest, options?: RpcOptions): UnaryCall<ListRequestTypesRequest, ListRequestTypesResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateOrUpdateRequestType(services.jobs.CreateOrUpdateRequestTypeRequest) returns (services.jobs.CreateOrUpdateRequestTypeResponse);
     */
    createOrUpdateRequestType(input: CreateOrUpdateRequestTypeRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateRequestTypeRequest, CreateOrUpdateRequestTypeResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteRequestType(services.jobs.DeleteRequestTypeRequest) returns (services.jobs.DeleteRequestTypeResponse);
     */
    deleteRequestType(input: DeleteRequestTypeRequest, options?: RpcOptions): UnaryCall<DeleteRequestTypeRequest, DeleteRequestTypeResponse>;
    /**
     * @perm: Name=ListRequests
     *
     * @generated from protobuf rpc: ListRequestComments(services.jobs.ListRequestCommentsRequest) returns (services.jobs.ListRequestCommentsResponse);
     */
    listRequestComments(input: ListRequestCommentsRequest, options?: RpcOptions): UnaryCall<ListRequestCommentsRequest, ListRequestCommentsResponse>;
    /**
     * @perm: Name=CreateRequest
     *
     * @generated from protobuf rpc: PostRequestComment(services.jobs.PostRequestCommentRequest) returns (services.jobs.PostRequestCommentResponse);
     */
    postRequestComment(input: PostRequestCommentRequest, options?: RpcOptions): UnaryCall<PostRequestCommentRequest, PostRequestCommentResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteRequestComment(services.jobs.DeleteRequestCommentRequest) returns (services.jobs.DeleteRequestCommentResponse);
     */
    deleteRequestComment(input: DeleteRequestCommentRequest, options?: RpcOptions): UnaryCall<DeleteRequestCommentRequest, DeleteRequestCommentResponse>;
}
/**
 * @generated from protobuf service services.jobs.JobsRequestsService
 */
export class JobsRequestsServiceClient implements IJobsRequestsServiceClient, ServiceInfo {
    typeName = JobsRequestsService.typeName;
    methods = JobsRequestsService.methods;
    options = JobsRequestsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "All"}
     *
     * @generated from protobuf rpc: ListRequests(services.jobs.ListRequestsRequest) returns (services.jobs.ListRequestsResponse);
     */
    listRequests(input: ListRequestsRequest, options?: RpcOptions): UnaryCall<ListRequestsRequest, ListRequestsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRequestsRequest, ListRequestsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateRequest(services.jobs.CreateRequestRequest) returns (services.jobs.CreateRequestResponse);
     */
    createRequest(input: CreateRequestRequest, options?: RpcOptions): UnaryCall<CreateRequestRequest, CreateRequestResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateRequestRequest, CreateRequestResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: UpdateRequest(services.jobs.UpdateRequestRequest) returns (services.jobs.UpdateRequestResponse);
     */
    updateRequest(input: UpdateRequestRequest, options?: RpcOptions): UnaryCall<UpdateRequestRequest, UpdateRequestResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateRequestRequest, UpdateRequestResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteRequest(services.jobs.DeleteRequestRequest) returns (services.jobs.DeleteRequestResponse);
     */
    deleteRequest(input: DeleteRequestRequest, options?: RpcOptions): UnaryCall<DeleteRequestRequest, DeleteRequestResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteRequestRequest, DeleteRequestResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=ListRequests
     *
     * @generated from protobuf rpc: ListRequestTypes(services.jobs.ListRequestTypesRequest) returns (services.jobs.ListRequestTypesResponse);
     */
    listRequestTypes(input: ListRequestTypesRequest, options?: RpcOptions): UnaryCall<ListRequestTypesRequest, ListRequestTypesResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRequestTypesRequest, ListRequestTypesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateOrUpdateRequestType(services.jobs.CreateOrUpdateRequestTypeRequest) returns (services.jobs.CreateOrUpdateRequestTypeResponse);
     */
    createOrUpdateRequestType(input: CreateOrUpdateRequestTypeRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateRequestTypeRequest, CreateOrUpdateRequestTypeResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateOrUpdateRequestTypeRequest, CreateOrUpdateRequestTypeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteRequestType(services.jobs.DeleteRequestTypeRequest) returns (services.jobs.DeleteRequestTypeResponse);
     */
    deleteRequestType(input: DeleteRequestTypeRequest, options?: RpcOptions): UnaryCall<DeleteRequestTypeRequest, DeleteRequestTypeResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteRequestTypeRequest, DeleteRequestTypeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=ListRequests
     *
     * @generated from protobuf rpc: ListRequestComments(services.jobs.ListRequestCommentsRequest) returns (services.jobs.ListRequestCommentsResponse);
     */
    listRequestComments(input: ListRequestCommentsRequest, options?: RpcOptions): UnaryCall<ListRequestCommentsRequest, ListRequestCommentsResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRequestCommentsRequest, ListRequestCommentsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=CreateRequest
     *
     * @generated from protobuf rpc: PostRequestComment(services.jobs.PostRequestCommentRequest) returns (services.jobs.PostRequestCommentResponse);
     */
    postRequestComment(input: PostRequestCommentRequest, options?: RpcOptions): UnaryCall<PostRequestCommentRequest, PostRequestCommentResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<PostRequestCommentRequest, PostRequestCommentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteRequestComment(services.jobs.DeleteRequestCommentRequest) returns (services.jobs.DeleteRequestCommentResponse);
     */
    deleteRequestComment(input: DeleteRequestCommentRequest, options?: RpcOptions): UnaryCall<DeleteRequestCommentRequest, DeleteRequestCommentResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteRequestCommentRequest, DeleteRequestCommentResponse>("unary", this._transport, method, opt, input);
    }
}
