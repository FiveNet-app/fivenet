// @generated by protobuf-ts 2.9.3 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "services/jobs/conduct.proto" (package "services.jobs", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { ConductEntry } from "../../resources/jobs/conduct";
import { PaginationResponse } from "../../resources/common/database/database";
import { ConductType } from "../../resources/jobs/conduct";
import { PaginationRequest } from "../../resources/common/database/database";
// Conduct Register

/**
 * @generated from protobuf message services.jobs.ListConductEntriesRequest
 */
export interface ListConductEntriesRequest {
    /**
     * @generated from protobuf field: resources.common.database.PaginationRequest pagination = 1;
     */
    pagination?: PaginationRequest;
    /**
     * Search params
     *
     * @generated from protobuf field: repeated resources.jobs.ConductType types = 2;
     */
    types: ConductType[];
    /**
     * @generated from protobuf field: optional bool show_expired = 3;
     */
    showExpired?: boolean;
    /**
     * @generated from protobuf field: repeated int32 user_ids = 4;
     */
    userIds: number[];
}
/**
 * @generated from protobuf message services.jobs.ListConductEntriesResponse
 */
export interface ListConductEntriesResponse {
    /**
     * @generated from protobuf field: resources.common.database.PaginationResponse pagination = 1;
     */
    pagination?: PaginationResponse;
    /**
     * @generated from protobuf field: repeated resources.jobs.ConductEntry entries = 2;
     */
    entries: ConductEntry[];
}
/**
 * @generated from protobuf message services.jobs.CreateConductEntryRequest
 */
export interface CreateConductEntryRequest {
    /**
     * @generated from protobuf field: resources.jobs.ConductEntry entry = 1;
     */
    entry?: ConductEntry;
}
/**
 * @generated from protobuf message services.jobs.CreateConductEntryResponse
 */
export interface CreateConductEntryResponse {
    /**
     * @generated from protobuf field: resources.jobs.ConductEntry entry = 1;
     */
    entry?: ConductEntry;
}
/**
 * @generated from protobuf message services.jobs.UpdateConductEntryRequest
 */
export interface UpdateConductEntryRequest {
    /**
     * @generated from protobuf field: resources.jobs.ConductEntry entry = 1;
     */
    entry?: ConductEntry;
}
/**
 * @generated from protobuf message services.jobs.UpdateConductEntryResponse
 */
export interface UpdateConductEntryResponse {
    /**
     * @generated from protobuf field: resources.jobs.ConductEntry entry = 1;
     */
    entry?: ConductEntry;
}
/**
 * @generated from protobuf message services.jobs.DeleteConductEntryRequest
 */
export interface DeleteConductEntryRequest {
    /**
     * @generated from protobuf field: uint64 id = 1 [jstype = JS_STRING];
     */
    id: string;
}
/**
 * @generated from protobuf message services.jobs.DeleteConductEntryResponse
 */
export interface DeleteConductEntryResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class ListConductEntriesRequest$Type extends MessageType<ListConductEntriesRequest> {
    constructor() {
        super("services.jobs.ListConductEntriesRequest", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationRequest, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["resources.jobs.ConductType", ConductType, "CONDUCT_TYPE_"] },
            { no: 3, name: "show_expired", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "user_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.ListConductEntriesRequest
 */
export const ListConductEntriesRequest = new ListConductEntriesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListConductEntriesResponse$Type extends MessageType<ListConductEntriesResponse> {
    constructor() {
        super("services.jobs.ListConductEntriesResponse", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationResponse },
            { no: 2, name: "entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ConductEntry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.ListConductEntriesResponse
 */
export const ListConductEntriesResponse = new ListConductEntriesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateConductEntryRequest$Type extends MessageType<CreateConductEntryRequest> {
    constructor() {
        super("services.jobs.CreateConductEntryRequest", [
            { no: 1, name: "entry", kind: "message", T: () => ConductEntry, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.CreateConductEntryRequest
 */
export const CreateConductEntryRequest = new CreateConductEntryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateConductEntryResponse$Type extends MessageType<CreateConductEntryResponse> {
    constructor() {
        super("services.jobs.CreateConductEntryResponse", [
            { no: 1, name: "entry", kind: "message", T: () => ConductEntry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.CreateConductEntryResponse
 */
export const CreateConductEntryResponse = new CreateConductEntryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateConductEntryRequest$Type extends MessageType<UpdateConductEntryRequest> {
    constructor() {
        super("services.jobs.UpdateConductEntryRequest", [
            { no: 1, name: "entry", kind: "message", T: () => ConductEntry, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.UpdateConductEntryRequest
 */
export const UpdateConductEntryRequest = new UpdateConductEntryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateConductEntryResponse$Type extends MessageType<UpdateConductEntryResponse> {
    constructor() {
        super("services.jobs.UpdateConductEntryResponse", [
            { no: 1, name: "entry", kind: "message", T: () => ConductEntry, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.UpdateConductEntryResponse
 */
export const UpdateConductEntryResponse = new UpdateConductEntryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteConductEntryRequest$Type extends MessageType<DeleteConductEntryRequest> {
    constructor() {
        super("services.jobs.DeleteConductEntryRequest", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.DeleteConductEntryRequest
 */
export const DeleteConductEntryRequest = new DeleteConductEntryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteConductEntryResponse$Type extends MessageType<DeleteConductEntryResponse> {
    constructor() {
        super("services.jobs.DeleteConductEntryResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.jobs.DeleteConductEntryResponse
 */
export const DeleteConductEntryResponse = new DeleteConductEntryResponse$Type();
/**
 * @generated ServiceType for protobuf service services.jobs.JobsConductService
 */
export const JobsConductService = new ServiceType("services.jobs.JobsConductService", [
    { name: "ListConductEntries", options: {}, I: ListConductEntriesRequest, O: ListConductEntriesResponse },
    { name: "CreateConductEntry", options: {}, I: CreateConductEntryRequest, O: CreateConductEntryResponse },
    { name: "UpdateConductEntry", options: {}, I: UpdateConductEntryRequest, O: UpdateConductEntryResponse },
    { name: "DeleteConductEntry", options: {}, I: DeleteConductEntryRequest, O: DeleteConductEntryResponse }
]);
