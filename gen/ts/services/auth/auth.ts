// @generated by protobuf-ts 2.9.1 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "services/auth/auth.proto" (package "services.auth", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { JobProps } from "../../resources/users/jobs.js";
import { User } from "../../resources/users/users.js";
import { OAuth2Account } from "../../resources/accounts/oauth2.js";
import { OAuth2Provider } from "../../resources/accounts/oauth2.js";
import { Account } from "../../resources/accounts/accounts.js";
import { Timestamp } from "../../resources/timestamp/timestamp.js";
/**
 * @generated from protobuf message services.auth.CreateAccountRequest
 */
export interface CreateAccountRequest {
    /**
     * @generated from protobuf field: string reg_token = 1;
     */
    regToken: string;
    /**
     * @generated from protobuf field: string username = 2;
     */
    username: string;
    /**
     * @generated from protobuf field: string password = 3;
     */
    password: string;
}
/**
 * @generated from protobuf message services.auth.CreateAccountResponse
 */
export interface CreateAccountResponse {
    /**
     * @generated from protobuf field: uint64 account_id = 1;
     */
    accountId: bigint;
}
/**
 * @generated from protobuf message services.auth.LoginRequest
 */
export interface LoginRequest {
    /**
     * @generated from protobuf field: string username = 1;
     */
    username: string;
    /**
     * @generated from protobuf field: string password = 2;
     */
    password: string;
}
/**
 * @generated from protobuf message services.auth.LoginResponse
 */
export interface LoginResponse {
    /**
     * @generated from protobuf field: string token = 1;
     */
    token: string;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp expires = 2;
     */
    expires?: Timestamp;
    /**
     * @generated from protobuf field: uint64 account_id = 3;
     */
    accountId: bigint;
}
/**
 * @generated from protobuf message services.auth.ChangePasswordRequest
 */
export interface ChangePasswordRequest {
    /**
     * @generated from protobuf field: string current = 1;
     */
    current: string;
    /**
     * @generated from protobuf field: string new = 2;
     */
    new: string;
}
/**
 * @generated from protobuf message services.auth.ChangePasswordResponse
 */
export interface ChangePasswordResponse {
    /**
     * @generated from protobuf field: string token = 1;
     */
    token: string;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp expires = 2;
     */
    expires?: Timestamp;
}
/**
 * @generated from protobuf message services.auth.ChangeUsernameRequest
 */
export interface ChangeUsernameRequest {
    /**
     * @generated from protobuf field: string current = 1;
     */
    current: string;
    /**
     * @generated from protobuf field: string new = 2;
     */
    new: string;
}
/**
 * @generated from protobuf message services.auth.ChangeUsernameResponse
 */
export interface ChangeUsernameResponse {
}
/**
 * @generated from protobuf message services.auth.ForgotPasswordRequest
 */
export interface ForgotPasswordRequest {
    /**
     * @generated from protobuf field: string reg_token = 1;
     */
    regToken: string;
    /**
     * @generated from protobuf field: string new = 2;
     */
    new: string;
}
/**
 * @generated from protobuf message services.auth.ForgotPasswordResponse
 */
export interface ForgotPasswordResponse {
}
/**
 * @generated from protobuf message services.auth.GetAccountInfoRequest
 */
export interface GetAccountInfoRequest {
}
/**
 * @generated from protobuf message services.auth.GetAccountInfoResponse
 */
export interface GetAccountInfoResponse {
    /**
     * @generated from protobuf field: resources.accounts.Account account = 1;
     */
    account?: Account;
    /**
     * @generated from protobuf field: repeated resources.accounts.OAuth2Provider oauth2_providers = 2;
     */
    oauth2Providers: OAuth2Provider[];
    /**
     * @generated from protobuf field: repeated resources.accounts.OAuth2Account oauth2_connections = 3;
     */
    oauth2Connections: OAuth2Account[];
}
/**
 * @generated from protobuf message services.auth.GetCharactersRequest
 */
export interface GetCharactersRequest {
}
/**
 * @generated from protobuf message services.auth.GetCharactersResponse
 */
export interface GetCharactersResponse {
    /**
     * @generated from protobuf field: repeated resources.users.User chars = 1;
     */
    chars: User[];
}
/**
 * @generated from protobuf message services.auth.ChooseCharacterRequest
 */
export interface ChooseCharacterRequest {
    /**
     * @generated from protobuf field: int32 char_id = 1;
     */
    charId: number;
}
/**
 * @generated from protobuf message services.auth.ChooseCharacterResponse
 */
export interface ChooseCharacterResponse {
    /**
     * @generated from protobuf field: string token = 1;
     */
    token: string;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp expires = 2;
     */
    expires?: Timestamp;
    /**
     * @generated from protobuf field: repeated string permissions = 3;
     */
    permissions: string[];
    /**
     * @generated from protobuf field: resources.users.JobProps job_props = 4;
     */
    jobProps?: JobProps;
    /**
     * @generated from protobuf field: resources.users.User char = 5;
     */
    char?: User;
}
/**
 * @generated from protobuf message services.auth.LogoutRequest
 */
export interface LogoutRequest {
}
/**
 * @generated from protobuf message services.auth.LogoutResponse
 */
export interface LogoutResponse {
    /**
     * @generated from protobuf field: bool success = 1;
     */
    success: boolean;
}
/**
 * @generated from protobuf message services.auth.DeleteOAuth2ConnectionRequest
 */
export interface DeleteOAuth2ConnectionRequest {
    /**
     * @generated from protobuf field: string provider = 1;
     */
    provider: string;
}
/**
 * @generated from protobuf message services.auth.DeleteOAuth2ConnectionResponse
 */
export interface DeleteOAuth2ConnectionResponse {
    /**
     * @generated from protobuf field: bool success = 1;
     */
    success: boolean;
}
/**
 * @generated from protobuf message services.auth.SetJobRequest
 */
export interface SetJobRequest {
    /**
     * @generated from protobuf field: int32 char_id = 1;
     */
    charId: number;
    /**
     * @generated from protobuf field: string job = 2;
     */
    job: string;
    /**
     * @generated from protobuf field: int32 job_grade = 3;
     */
    jobGrade: number;
}
/**
 * @generated from protobuf message services.auth.SetJobResponse
 */
export interface SetJobResponse {
    /**
     * @generated from protobuf field: string token = 1;
     */
    token: string;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp expires = 2;
     */
    expires?: Timestamp;
    /**
     * @generated from protobuf field: resources.users.JobProps job_props = 3;
     */
    jobProps?: JobProps;
    /**
     * @generated from protobuf field: resources.users.User char = 4;
     */
    char?: User;
}
// @generated message type with reflection information, may provide speed optimized methods
class CreateAccountRequest$Type extends MessageType<CreateAccountRequest> {
    constructor() {
        super("services.auth.CreateAccountRequest", [
            { no: 1, name: "reg_token", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { len: "6", pattern: "^[0-9]{6}$" } } } },
            { no: 2, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "24", pattern: "(?i)^[0-9A-Z\u00C4\u00D6\u00DC\u00DF_-]{3,24}$" } } } },
            { no: 3, name: "password", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "6", maxBytes: "70" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.CreateAccountRequest
 */
export const CreateAccountRequest = new CreateAccountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateAccountResponse$Type extends MessageType<CreateAccountResponse> {
    constructor() {
        super("services.auth.CreateAccountResponse", [
            { no: 1, name: "account_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.CreateAccountResponse
 */
export const CreateAccountResponse = new CreateAccountResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoginRequest$Type extends MessageType<LoginRequest> {
    constructor() {
        super("services.auth.LoginRequest", [
            { no: 1, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "24", pattern: "(?i)^[0-9A-Z\u00C4\u00D6\u00DC\u00DF_-]{3,24}$" } } } },
            { no: 2, name: "password", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "6", maxBytes: "70" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.LoginRequest
 */
export const LoginRequest = new LoginRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoginResponse$Type extends MessageType<LoginResponse> {
    constructor() {
        super("services.auth.LoginResponse", [
            { no: 1, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "expires", kind: "message", T: () => Timestamp },
            { no: 3, name: "account_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.LoginResponse
 */
export const LoginResponse = new LoginResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangePasswordRequest$Type extends MessageType<ChangePasswordRequest> {
    constructor() {
        super("services.auth.ChangePasswordRequest", [
            { no: 1, name: "current", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "6", maxBytes: "70" } } } },
            { no: 2, name: "new", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "6", maxBytes: "70" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ChangePasswordRequest
 */
export const ChangePasswordRequest = new ChangePasswordRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangePasswordResponse$Type extends MessageType<ChangePasswordResponse> {
    constructor() {
        super("services.auth.ChangePasswordResponse", [
            { no: 1, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "expires", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ChangePasswordResponse
 */
export const ChangePasswordResponse = new ChangePasswordResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeUsernameRequest$Type extends MessageType<ChangeUsernameRequest> {
    constructor() {
        super("services.auth.ChangeUsernameRequest", [
            { no: 1, name: "current", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "24", pattern: "(?i)^[0-9A-Z\u00C4\u00D6\u00DC\u00DF_-]{3,24}$" } } } },
            { no: 2, name: "new", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "24", pattern: "(?i)^[0-9A-Z\u00C4\u00D6\u00DC\u00DF_-]{3,24}$" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ChangeUsernameRequest
 */
export const ChangeUsernameRequest = new ChangeUsernameRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeUsernameResponse$Type extends MessageType<ChangeUsernameResponse> {
    constructor() {
        super("services.auth.ChangeUsernameResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ChangeUsernameResponse
 */
export const ChangeUsernameResponse = new ChangeUsernameResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ForgotPasswordRequest$Type extends MessageType<ForgotPasswordRequest> {
    constructor() {
        super("services.auth.ForgotPasswordRequest", [
            { no: 1, name: "reg_token", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { len: "6", pattern: "^[0-9]{6}$" } } } },
            { no: 2, name: "new", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "6", maxBytes: "70" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ForgotPasswordRequest
 */
export const ForgotPasswordRequest = new ForgotPasswordRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ForgotPasswordResponse$Type extends MessageType<ForgotPasswordResponse> {
    constructor() {
        super("services.auth.ForgotPasswordResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ForgotPasswordResponse
 */
export const ForgotPasswordResponse = new ForgotPasswordResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAccountInfoRequest$Type extends MessageType<GetAccountInfoRequest> {
    constructor() {
        super("services.auth.GetAccountInfoRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.GetAccountInfoRequest
 */
export const GetAccountInfoRequest = new GetAccountInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAccountInfoResponse$Type extends MessageType<GetAccountInfoResponse> {
    constructor() {
        super("services.auth.GetAccountInfoResponse", [
            { no: 1, name: "account", kind: "message", T: () => Account },
            { no: 2, name: "oauth2_providers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OAuth2Provider },
            { no: 3, name: "oauth2_connections", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OAuth2Account }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.GetAccountInfoResponse
 */
export const GetAccountInfoResponse = new GetAccountInfoResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCharactersRequest$Type extends MessageType<GetCharactersRequest> {
    constructor() {
        super("services.auth.GetCharactersRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.GetCharactersRequest
 */
export const GetCharactersRequest = new GetCharactersRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCharactersResponse$Type extends MessageType<GetCharactersResponse> {
    constructor() {
        super("services.auth.GetCharactersResponse", [
            { no: 1, name: "chars", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => User }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.GetCharactersResponse
 */
export const GetCharactersResponse = new GetCharactersResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChooseCharacterRequest$Type extends MessageType<ChooseCharacterRequest> {
    constructor() {
        super("services.auth.ChooseCharacterRequest", [
            { no: 1, name: "char_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ChooseCharacterRequest
 */
export const ChooseCharacterRequest = new ChooseCharacterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChooseCharacterResponse$Type extends MessageType<ChooseCharacterResponse> {
    constructor() {
        super("services.auth.ChooseCharacterResponse", [
            { no: 1, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "expires", kind: "message", T: () => Timestamp },
            { no: 3, name: "permissions", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "job_props", kind: "message", T: () => JobProps },
            { no: 5, name: "char", kind: "message", T: () => User }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.ChooseCharacterResponse
 */
export const ChooseCharacterResponse = new ChooseCharacterResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogoutRequest$Type extends MessageType<LogoutRequest> {
    constructor() {
        super("services.auth.LogoutRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.LogoutRequest
 */
export const LogoutRequest = new LogoutRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogoutResponse$Type extends MessageType<LogoutResponse> {
    constructor() {
        super("services.auth.LogoutResponse", [
            { no: 1, name: "success", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.LogoutResponse
 */
export const LogoutResponse = new LogoutResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteOAuth2ConnectionRequest$Type extends MessageType<DeleteOAuth2ConnectionRequest> {
    constructor() {
        super("services.auth.DeleteOAuth2ConnectionRequest", [
            { no: 1, name: "provider", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "50" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.DeleteOAuth2ConnectionRequest
 */
export const DeleteOAuth2ConnectionRequest = new DeleteOAuth2ConnectionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteOAuth2ConnectionResponse$Type extends MessageType<DeleteOAuth2ConnectionResponse> {
    constructor() {
        super("services.auth.DeleteOAuth2ConnectionResponse", [
            { no: 1, name: "success", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.DeleteOAuth2ConnectionResponse
 */
export const DeleteOAuth2ConnectionResponse = new DeleteOAuth2ConnectionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetJobRequest$Type extends MessageType<SetJobRequest> {
    constructor() {
        super("services.auth.SetJobRequest", [
            { no: 1, name: "char_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 2, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 3, name: "job_grade", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.SetJobRequest
 */
export const SetJobRequest = new SetJobRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetJobResponse$Type extends MessageType<SetJobResponse> {
    constructor() {
        super("services.auth.SetJobResponse", [
            { no: 1, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "expires", kind: "message", T: () => Timestamp },
            { no: 3, name: "job_props", kind: "message", T: () => JobProps },
            { no: 4, name: "char", kind: "message", T: () => User }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.auth.SetJobResponse
 */
export const SetJobResponse = new SetJobResponse$Type();
/**
 * @generated ServiceType for protobuf service services.auth.AuthService
 */
export const AuthService = new ServiceType("services.auth.AuthService", [
    { name: "Login", options: {}, I: LoginRequest, O: LoginResponse },
    { name: "Logout", options: {}, I: LogoutRequest, O: LogoutResponse },
    { name: "CreateAccount", options: {}, I: CreateAccountRequest, O: CreateAccountResponse },
    { name: "ChangeUsername", options: {}, I: ChangeUsernameRequest, O: ChangeUsernameResponse },
    { name: "ChangePassword", options: {}, I: ChangePasswordRequest, O: ChangePasswordResponse },
    { name: "ForgotPassword", options: {}, I: ForgotPasswordRequest, O: ForgotPasswordResponse },
    { name: "GetCharacters", options: {}, I: GetCharactersRequest, O: GetCharactersResponse },
    { name: "ChooseCharacter", options: {}, I: ChooseCharacterRequest, O: ChooseCharacterResponse },
    { name: "GetAccountInfo", options: {}, I: GetAccountInfoRequest, O: GetAccountInfoResponse },
    { name: "DeleteOAuth2Connection", options: {}, I: DeleteOAuth2ConnectionRequest, O: DeleteOAuth2ConnectionResponse },
    { name: "SetJob", options: {}, I: SetJobRequest, O: SetJobResponse }
]);
