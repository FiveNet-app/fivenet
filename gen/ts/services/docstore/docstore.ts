// @generated by protobuf-ts 2.9.1 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "services/docstore/docstore.proto" (package "services.docstore", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Category } from "../../resources/documents/category.js";
import { DocRelation } from "../../resources/documents/documents.js";
import { DocContentType } from "../../resources/documents/documents.js";
import { Comment } from "../../resources/documents/comment.js";
import { DocumentRelation } from "../../resources/documents/documents.js";
import { DocumentReference } from "../../resources/documents/documents.js";
import { DocumentAccess } from "../../resources/documents/documents.js";
import { Document } from "../../resources/documents/documents.js";
import { DocumentShort } from "../../resources/documents/documents.js";
import { PaginationResponse } from "../../resources/common/database/database.js";
import { Timestamp } from "../../resources/timestamp/timestamp.js";
import { OrderBy } from "../../resources/common/database/database.js";
import { PaginationRequest } from "../../resources/common/database/database.js";
import { Template } from "../../resources/documents/templates.js";
import { TemplateShort } from "../../resources/documents/templates.js";
/**
 * Templates ==================================================================
 *
 * @generated from protobuf message services.docstore.ListTemplatesRequest
 */
export interface ListTemplatesRequest {
}
/**
 * @generated from protobuf message services.docstore.ListTemplatesResponse
 */
export interface ListTemplatesResponse {
    /**
     * @generated from protobuf field: repeated resources.documents.TemplateShort templates = 1;
     */
    templates: TemplateShort[];
}
/**
 * @generated from protobuf message services.docstore.GetTemplateRequest
 */
export interface GetTemplateRequest {
    /**
     * @generated from protobuf field: uint64 template_id = 1;
     */
    templateId: bigint;
    /**
     * @generated from protobuf field: optional string data = 2;
     */
    data?: string;
    /**
     * @generated from protobuf field: optional bool render = 3;
     */
    render?: boolean;
}
/**
 * @generated from protobuf message services.docstore.GetTemplateResponse
 */
export interface GetTemplateResponse {
    /**
     * @generated from protobuf field: resources.documents.Template template = 1;
     */
    template?: Template;
    /**
     * @generated from protobuf field: bool rendered = 2;
     */
    rendered: boolean;
}
/**
 * @generated from protobuf message services.docstore.CreateTemplateRequest
 */
export interface CreateTemplateRequest {
    /**
     * @generated from protobuf field: resources.documents.Template template = 1;
     */
    template?: Template;
}
/**
 * @generated from protobuf message services.docstore.CreateTemplateResponse
 */
export interface CreateTemplateResponse {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.UpdateTemplateRequest
 */
export interface UpdateTemplateRequest {
    /**
     * @generated from protobuf field: resources.documents.Template template = 1;
     */
    template?: Template;
}
/**
 * @generated from protobuf message services.docstore.UpdateTemplateResponse
 */
export interface UpdateTemplateResponse {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.DeleteTemplateRequest
 */
export interface DeleteTemplateRequest {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.DeleteTemplateResponse
 */
export interface DeleteTemplateResponse {
}
/**
 * Documents ==================================================================
 *
 * @generated from protobuf message services.docstore.ListDocumentsRequest
 */
export interface ListDocumentsRequest {
    /**
     * @generated from protobuf field: resources.common.database.PaginationRequest pagination = 1;
     */
    pagination?: PaginationRequest;
    /**
     * @generated from protobuf field: repeated resources.common.database.OrderBy orderBy = 2;
     */
    orderBy: OrderBy[];
    /**
     * Search params
     *
     * @generated from protobuf field: optional string search = 3;
     */
    search?: string;
    /**
     * @generated from protobuf field: repeated uint64 category_ids = 4;
     */
    categoryIds: bigint[];
    /**
     * @generated from protobuf field: repeated int32 creator_ids = 5;
     */
    creatorIds: number[];
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp from = 6;
     */
    from?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp to = 7;
     */
    to?: Timestamp;
    /**
     * @generated from protobuf field: optional bool closed = 8;
     */
    closed?: boolean;
}
/**
 * @generated from protobuf message services.docstore.ListDocumentsResponse
 */
export interface ListDocumentsResponse {
    /**
     * @generated from protobuf field: resources.common.database.PaginationResponse pagination = 1;
     */
    pagination?: PaginationResponse;
    /**
     * @generated from protobuf field: repeated resources.documents.DocumentShort documents = 2;
     */
    documents: DocumentShort[];
}
/**
 * @generated from protobuf message services.docstore.GetDocumentRequest
 */
export interface GetDocumentRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint;
}
/**
 * @generated from protobuf message services.docstore.GetDocumentResponse
 */
export interface GetDocumentResponse {
    /**
     * @generated from protobuf field: resources.documents.Document document = 1;
     */
    document?: Document;
    /**
     * @generated from protobuf field: resources.documents.DocumentAccess access = 2;
     */
    access?: DocumentAccess;
}
/**
 * @generated from protobuf message services.docstore.GetDocumentReferencesRequest
 */
export interface GetDocumentReferencesRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint;
}
/**
 * @generated from protobuf message services.docstore.GetDocumentReferencesResponse
 */
export interface GetDocumentReferencesResponse {
    /**
     * @generated from protobuf field: repeated resources.documents.DocumentReference references = 1;
     */
    references: DocumentReference[]; // @gotags: alias:"reference"
}
/**
 * @generated from protobuf message services.docstore.GetDocumentRelationsRequest
 */
export interface GetDocumentRelationsRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint;
}
/**
 * @generated from protobuf message services.docstore.GetDocumentRelationsResponse
 */
export interface GetDocumentRelationsResponse {
    /**
     * @generated from protobuf field: repeated resources.documents.DocumentRelation relations = 1;
     */
    relations: DocumentRelation[]; // @gotags: alias:"relation"
}
/**
 * @generated from protobuf message services.docstore.AddDocumentReferenceRequest
 */
export interface AddDocumentReferenceRequest {
    /**
     * @generated from protobuf field: resources.documents.DocumentReference reference = 1;
     */
    reference?: DocumentReference;
}
/**
 * @generated from protobuf message services.docstore.AddDocumentReferenceResponse
 */
export interface AddDocumentReferenceResponse {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.RemoveDocumentReferenceRequest
 */
export interface RemoveDocumentReferenceRequest {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.RemoveDocumentReferenceResponse
 */
export interface RemoveDocumentReferenceResponse {
}
/**
 * @generated from protobuf message services.docstore.AddDocumentRelationRequest
 */
export interface AddDocumentRelationRequest {
    /**
     * @generated from protobuf field: resources.documents.DocumentRelation relation = 1;
     */
    relation?: DocumentRelation;
}
/**
 * @generated from protobuf message services.docstore.AddDocumentRelationResponse
 */
export interface AddDocumentRelationResponse {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.RemoveDocumentRelationRequest
 */
export interface RemoveDocumentRelationRequest {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.RemoveDocumentRelationResponse
 */
export interface RemoveDocumentRelationResponse {
}
/**
 * Comments ===============================================================
 *
 * @generated from protobuf message services.docstore.GetCommentsRequest
 */
export interface GetCommentsRequest {
    /**
     * @generated from protobuf field: resources.common.database.PaginationRequest pagination = 1;
     */
    pagination?: PaginationRequest;
    /**
     * @generated from protobuf field: uint64 document_id = 2;
     */
    documentId: bigint;
}
/**
 * @generated from protobuf message services.docstore.GetCommentsResponse
 */
export interface GetCommentsResponse {
    /**
     * @generated from protobuf field: resources.common.database.PaginationResponse pagination = 1;
     */
    pagination?: PaginationResponse;
    /**
     * @generated from protobuf field: repeated resources.documents.Comment comments = 2;
     */
    comments: Comment[];
}
/**
 * @generated from protobuf message services.docstore.PostCommentRequest
 */
export interface PostCommentRequest {
    /**
     * @generated from protobuf field: resources.documents.Comment comment = 1;
     */
    comment?: Comment;
}
/**
 * @generated from protobuf message services.docstore.PostCommentResponse
 */
export interface PostCommentResponse {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.EditCommentRequest
 */
export interface EditCommentRequest {
    /**
     * @generated from protobuf field: resources.documents.Comment comment = 1;
     */
    comment?: Comment;
}
/**
 * @generated from protobuf message services.docstore.EditCommentResponse
 */
export interface EditCommentResponse {
}
/**
 * @generated from protobuf message services.docstore.DeleteCommentRequest
 */
export interface DeleteCommentRequest {
    /**
     * @generated from protobuf field: uint64 comment_id = 1;
     */
    commentId: bigint;
}
/**
 * @generated from protobuf message services.docstore.DeleteCommentResponse
 */
export interface DeleteCommentResponse {
}
/**
 * @generated from protobuf message services.docstore.CreateDocumentRequest
 */
export interface CreateDocumentRequest {
    /**
     * @generated from protobuf field: optional uint64 category_id = 1;
     */
    categoryId?: bigint; // @gotags: alias:"category_id"
    /**
     * @sanitize: method=StripTags
     *
     * @generated from protobuf field: string title = 2;
     */
    title: string; // @gotags: alias:"title"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string content = 3;
     */
    content: string; // @gotags: alias:"content"
    /**
     * @generated from protobuf field: resources.documents.DocContentType content_type = 4;
     */
    contentType: DocContentType; // @gotags: alias:"content_type"
    /**
     * @generated from protobuf field: optional string data = 5;
     */
    data?: string; // @gotags: alias:"data"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string state = 6;
     */
    state: string; // @gotags: alias:"state"
    /**
     * @generated from protobuf field: bool closed = 7;
     */
    closed: boolean; // @gotags: alias:"closed"
    /**
     * @generated from protobuf field: bool public = 8;
     */
    public: boolean; // @gotags: alias:"public"
    /**
     * @generated from protobuf field: optional resources.documents.DocumentAccess access = 9;
     */
    access?: DocumentAccess;
}
/**
 * @generated from protobuf message services.docstore.CreateDocumentResponse
 */
export interface CreateDocumentResponse {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint; // @gotags: alias:"id"
}
/**
 * @generated from protobuf message services.docstore.UpdateDocumentRequest
 */
export interface UpdateDocumentRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint; // @gotags: alias:"id"
    /**
     * @generated from protobuf field: optional uint64 category_id = 2;
     */
    categoryId?: bigint; // @gotags: alias:"category_id"
    /**
     * @sanitize: method=StripTags
     *
     * @generated from protobuf field: string title = 3;
     */
    title: string; // @gotags: alias:"title"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string content = 4;
     */
    content: string; // @gotags: alias:"content"
    /**
     * @generated from protobuf field: resources.documents.DocContentType content_type = 5;
     */
    contentType: DocContentType; // @gotags: alias:"content_type"
    /**
     * @generated from protobuf field: optional string data = 6;
     */
    data?: string; // @gotags: alias:"data"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string state = 7;
     */
    state: string; // @gotags: alias:"state"
    /**
     * @generated from protobuf field: bool closed = 8;
     */
    closed: boolean; // @gotags: alias:"closed"
    /**
     * @generated from protobuf field: bool public = 9;
     */
    public: boolean; // @gotags: alias:"public"
    /**
     * @generated from protobuf field: optional resources.documents.DocumentAccess access = 10;
     */
    access?: DocumentAccess;
}
/**
 * @generated from protobuf message services.docstore.UpdateDocumentResponse
 */
export interface UpdateDocumentResponse {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint; // @gotags: alias:"id"
}
/**
 * @generated from protobuf message services.docstore.DeleteDocumentRequest
 */
export interface DeleteDocumentRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint; // @gotags: alias:"id"
}
/**
 * @generated from protobuf message services.docstore.DeleteDocumentResponse
 */
export interface DeleteDocumentResponse {
}
/**
 * @generated from protobuf message services.docstore.ToggleDocumentRequest
 */
export interface ToggleDocumentRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint;
    /**
     * @generated from protobuf field: bool closed = 2;
     */
    closed: boolean;
}
/**
 * @generated from protobuf message services.docstore.ToggleDocumentResponse
 */
export interface ToggleDocumentResponse {
}
/**
 * Access =================================================================
 *
 * @generated from protobuf message services.docstore.GetDocumentAccessRequest
 */
export interface GetDocumentAccessRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint;
}
/**
 * @generated from protobuf message services.docstore.GetDocumentAccessResponse
 */
export interface GetDocumentAccessResponse {
    /**
     * @generated from protobuf field: resources.documents.DocumentAccess access = 1;
     */
    access?: DocumentAccess;
}
/**
 * @generated from protobuf message services.docstore.SetDocumentAccessRequest
 */
export interface SetDocumentAccessRequest {
    /**
     * @generated from protobuf field: uint64 document_id = 1;
     */
    documentId: bigint;
    /**
     * @generated from protobuf field: services.docstore.AccessLevelUpdateMode mode = 2;
     */
    mode: AccessLevelUpdateMode;
    /**
     * @generated from protobuf field: resources.documents.DocumentAccess access = 3;
     */
    access?: DocumentAccess;
}
/**
 * @generated from protobuf message services.docstore.SetDocumentAccessResponse
 */
export interface SetDocumentAccessResponse {
}
/**
 * @generated from protobuf message services.docstore.ListUserDocumentsRequest
 */
export interface ListUserDocumentsRequest {
    /**
     * @generated from protobuf field: resources.common.database.PaginationRequest pagination = 1;
     */
    pagination?: PaginationRequest;
    /**
     * @generated from protobuf field: int32 user_id = 2;
     */
    userId: number;
    /**
     * @generated from protobuf field: repeated resources.documents.DocRelation relations = 3;
     */
    relations: DocRelation[];
}
/**
 * @generated from protobuf message services.docstore.ListUserDocumentsResponse
 */
export interface ListUserDocumentsResponse {
    /**
     * @generated from protobuf field: resources.common.database.PaginationResponse pagination = 1;
     */
    pagination?: PaginationResponse;
    /**
     * @generated from protobuf field: repeated resources.documents.DocumentRelation relations = 2;
     */
    relations: DocumentRelation[];
}
/**
 * Categories
 *
 * @generated from protobuf message services.docstore.ListCategoriesRequest
 */
export interface ListCategoriesRequest {
}
/**
 * @generated from protobuf message services.docstore.ListCategoriesResponse
 */
export interface ListCategoriesResponse {
    /**
     * @generated from protobuf field: repeated resources.documents.Category category = 1;
     */
    category: Category[];
}
/**
 * @generated from protobuf message services.docstore.CreateCategoryRequest
 */
export interface CreateCategoryRequest {
    /**
     * @generated from protobuf field: resources.documents.Category category = 1;
     */
    category?: Category;
}
/**
 * @generated from protobuf message services.docstore.CreateCategoryResponse
 */
export interface CreateCategoryResponse {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint;
}
/**
 * @generated from protobuf message services.docstore.UpdateCategoryRequest
 */
export interface UpdateCategoryRequest {
    /**
     * @generated from protobuf field: resources.documents.Category category = 1;
     */
    category?: Category;
}
/**
 * @generated from protobuf message services.docstore.UpdateCategoryResponse
 */
export interface UpdateCategoryResponse {
}
/**
 * @generated from protobuf message services.docstore.DeleteCategoryRequest
 */
export interface DeleteCategoryRequest {
    /**
     * @generated from protobuf field: repeated uint64 ids = 1;
     */
    ids: bigint[];
}
/**
 * @generated from protobuf message services.docstore.DeleteCategoryResponse
 */
export interface DeleteCategoryResponse {
}
/**
 * @generated from protobuf enum services.docstore.AccessLevelUpdateMode
 */
export enum AccessLevelUpdateMode {
    /**
     * @generated from protobuf enum value: ACCESS_LEVEL_UPDATE_MODE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: ACCESS_LEVEL_UPDATE_MODE_UPDATE = 1;
     */
    UPDATE = 1,
    /**
     * @generated from protobuf enum value: ACCESS_LEVEL_UPDATE_MODE_DELETE = 2;
     */
    DELETE = 2,
    /**
     * @generated from protobuf enum value: ACCESS_LEVEL_UPDATE_MODE_CLEAR = 3;
     */
    CLEAR = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class ListTemplatesRequest$Type extends MessageType<ListTemplatesRequest> {
    constructor() {
        super("services.docstore.ListTemplatesRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListTemplatesRequest
 */
export const ListTemplatesRequest = new ListTemplatesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListTemplatesResponse$Type extends MessageType<ListTemplatesResponse> {
    constructor() {
        super("services.docstore.ListTemplatesResponse", [
            { no: 1, name: "templates", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TemplateShort }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListTemplatesResponse
 */
export const ListTemplatesResponse = new ListTemplatesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetTemplateRequest$Type extends MessageType<GetTemplateRequest> {
    constructor() {
        super("services.docstore.GetTemplateRequest", [
            { no: 1, name: "template_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "data", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "10240" } } } },
            { no: 3, name: "render", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetTemplateRequest
 */
export const GetTemplateRequest = new GetTemplateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetTemplateResponse$Type extends MessageType<GetTemplateResponse> {
    constructor() {
        super("services.docstore.GetTemplateResponse", [
            { no: 1, name: "template", kind: "message", T: () => Template },
            { no: 2, name: "rendered", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetTemplateResponse
 */
export const GetTemplateResponse = new GetTemplateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateTemplateRequest$Type extends MessageType<CreateTemplateRequest> {
    constructor() {
        super("services.docstore.CreateTemplateRequest", [
            { no: 1, name: "template", kind: "message", T: () => Template, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.CreateTemplateRequest
 */
export const CreateTemplateRequest = new CreateTemplateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateTemplateResponse$Type extends MessageType<CreateTemplateResponse> {
    constructor() {
        super("services.docstore.CreateTemplateResponse", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.CreateTemplateResponse
 */
export const CreateTemplateResponse = new CreateTemplateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateTemplateRequest$Type extends MessageType<UpdateTemplateRequest> {
    constructor() {
        super("services.docstore.UpdateTemplateRequest", [
            { no: 1, name: "template", kind: "message", T: () => Template, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.UpdateTemplateRequest
 */
export const UpdateTemplateRequest = new UpdateTemplateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateTemplateResponse$Type extends MessageType<UpdateTemplateResponse> {
    constructor() {
        super("services.docstore.UpdateTemplateResponse", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.UpdateTemplateResponse
 */
export const UpdateTemplateResponse = new UpdateTemplateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteTemplateRequest$Type extends MessageType<DeleteTemplateRequest> {
    constructor() {
        super("services.docstore.DeleteTemplateRequest", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteTemplateRequest
 */
export const DeleteTemplateRequest = new DeleteTemplateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteTemplateResponse$Type extends MessageType<DeleteTemplateResponse> {
    constructor() {
        super("services.docstore.DeleteTemplateResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteTemplateResponse
 */
export const DeleteTemplateResponse = new DeleteTemplateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListDocumentsRequest$Type extends MessageType<ListDocumentsRequest> {
    constructor() {
        super("services.docstore.ListDocumentsRequest", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationRequest, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "orderBy", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OrderBy, options: { "validate.rules": { repeated: { maxItems: "3" } } } },
            { no: 3, name: "search", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "category_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "creator_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "from", kind: "message", T: () => Timestamp },
            { no: 7, name: "to", kind: "message", T: () => Timestamp },
            { no: 8, name: "closed", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListDocumentsRequest
 */
export const ListDocumentsRequest = new ListDocumentsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListDocumentsResponse$Type extends MessageType<ListDocumentsResponse> {
    constructor() {
        super("services.docstore.ListDocumentsResponse", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationResponse, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "documents", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentShort }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListDocumentsResponse
 */
export const ListDocumentsResponse = new ListDocumentsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentRequest$Type extends MessageType<GetDocumentRequest> {
    constructor() {
        super("services.docstore.GetDocumentRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentRequest
 */
export const GetDocumentRequest = new GetDocumentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentResponse$Type extends MessageType<GetDocumentResponse> {
    constructor() {
        super("services.docstore.GetDocumentResponse", [
            { no: 1, name: "document", kind: "message", T: () => Document },
            { no: 2, name: "access", kind: "message", T: () => DocumentAccess }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentResponse
 */
export const GetDocumentResponse = new GetDocumentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentReferencesRequest$Type extends MessageType<GetDocumentReferencesRequest> {
    constructor() {
        super("services.docstore.GetDocumentReferencesRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentReferencesRequest
 */
export const GetDocumentReferencesRequest = new GetDocumentReferencesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentReferencesResponse$Type extends MessageType<GetDocumentReferencesResponse> {
    constructor() {
        super("services.docstore.GetDocumentReferencesResponse", [
            { no: 1, name: "references", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentReference }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentReferencesResponse
 */
export const GetDocumentReferencesResponse = new GetDocumentReferencesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentRelationsRequest$Type extends MessageType<GetDocumentRelationsRequest> {
    constructor() {
        super("services.docstore.GetDocumentRelationsRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentRelationsRequest
 */
export const GetDocumentRelationsRequest = new GetDocumentRelationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentRelationsResponse$Type extends MessageType<GetDocumentRelationsResponse> {
    constructor() {
        super("services.docstore.GetDocumentRelationsResponse", [
            { no: 1, name: "relations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentRelation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentRelationsResponse
 */
export const GetDocumentRelationsResponse = new GetDocumentRelationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddDocumentReferenceRequest$Type extends MessageType<AddDocumentReferenceRequest> {
    constructor() {
        super("services.docstore.AddDocumentReferenceRequest", [
            { no: 1, name: "reference", kind: "message", T: () => DocumentReference, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.AddDocumentReferenceRequest
 */
export const AddDocumentReferenceRequest = new AddDocumentReferenceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddDocumentReferenceResponse$Type extends MessageType<AddDocumentReferenceResponse> {
    constructor() {
        super("services.docstore.AddDocumentReferenceResponse", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.AddDocumentReferenceResponse
 */
export const AddDocumentReferenceResponse = new AddDocumentReferenceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveDocumentReferenceRequest$Type extends MessageType<RemoveDocumentReferenceRequest> {
    constructor() {
        super("services.docstore.RemoveDocumentReferenceRequest", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.RemoveDocumentReferenceRequest
 */
export const RemoveDocumentReferenceRequest = new RemoveDocumentReferenceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveDocumentReferenceResponse$Type extends MessageType<RemoveDocumentReferenceResponse> {
    constructor() {
        super("services.docstore.RemoveDocumentReferenceResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.RemoveDocumentReferenceResponse
 */
export const RemoveDocumentReferenceResponse = new RemoveDocumentReferenceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddDocumentRelationRequest$Type extends MessageType<AddDocumentRelationRequest> {
    constructor() {
        super("services.docstore.AddDocumentRelationRequest", [
            { no: 1, name: "relation", kind: "message", T: () => DocumentRelation, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.AddDocumentRelationRequest
 */
export const AddDocumentRelationRequest = new AddDocumentRelationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddDocumentRelationResponse$Type extends MessageType<AddDocumentRelationResponse> {
    constructor() {
        super("services.docstore.AddDocumentRelationResponse", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.AddDocumentRelationResponse
 */
export const AddDocumentRelationResponse = new AddDocumentRelationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveDocumentRelationRequest$Type extends MessageType<RemoveDocumentRelationRequest> {
    constructor() {
        super("services.docstore.RemoveDocumentRelationRequest", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.RemoveDocumentRelationRequest
 */
export const RemoveDocumentRelationRequest = new RemoveDocumentRelationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveDocumentRelationResponse$Type extends MessageType<RemoveDocumentRelationResponse> {
    constructor() {
        super("services.docstore.RemoveDocumentRelationResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.RemoveDocumentRelationResponse
 */
export const RemoveDocumentRelationResponse = new RemoveDocumentRelationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCommentsRequest$Type extends MessageType<GetCommentsRequest> {
    constructor() {
        super("services.docstore.GetCommentsRequest", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationRequest, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetCommentsRequest
 */
export const GetCommentsRequest = new GetCommentsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCommentsResponse$Type extends MessageType<GetCommentsResponse> {
    constructor() {
        super("services.docstore.GetCommentsResponse", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationResponse },
            { no: 2, name: "comments", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Comment }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetCommentsResponse
 */
export const GetCommentsResponse = new GetCommentsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PostCommentRequest$Type extends MessageType<PostCommentRequest> {
    constructor() {
        super("services.docstore.PostCommentRequest", [
            { no: 1, name: "comment", kind: "message", T: () => Comment }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.PostCommentRequest
 */
export const PostCommentRequest = new PostCommentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PostCommentResponse$Type extends MessageType<PostCommentResponse> {
    constructor() {
        super("services.docstore.PostCommentResponse", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.PostCommentResponse
 */
export const PostCommentResponse = new PostCommentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EditCommentRequest$Type extends MessageType<EditCommentRequest> {
    constructor() {
        super("services.docstore.EditCommentRequest", [
            { no: 1, name: "comment", kind: "message", T: () => Comment }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.EditCommentRequest
 */
export const EditCommentRequest = new EditCommentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EditCommentResponse$Type extends MessageType<EditCommentResponse> {
    constructor() {
        super("services.docstore.EditCommentResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.EditCommentResponse
 */
export const EditCommentResponse = new EditCommentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCommentRequest$Type extends MessageType<DeleteCommentRequest> {
    constructor() {
        super("services.docstore.DeleteCommentRequest", [
            { no: 1, name: "comment_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteCommentRequest
 */
export const DeleteCommentRequest = new DeleteCommentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCommentResponse$Type extends MessageType<DeleteCommentResponse> {
    constructor() {
        super("services.docstore.DeleteCommentResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteCommentResponse
 */
export const DeleteCommentResponse = new DeleteCommentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateDocumentRequest$Type extends MessageType<CreateDocumentRequest> {
    constructor() {
        super("services.docstore.CreateDocumentRequest", [
            { no: 1, name: "category_id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxBytes: "21845" } } } },
            { no: 3, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "20", maxBytes: "1750000" } } } },
            { no: 4, name: "content_type", kind: "enum", T: () => ["resources.documents.DocContentType", DocContentType, "DOC_CONTENT_TYPE_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 5, name: "data", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "24" } } } },
            { no: 7, name: "closed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "public", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "access", kind: "message", T: () => DocumentAccess }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.CreateDocumentRequest
 */
export const CreateDocumentRequest = new CreateDocumentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateDocumentResponse$Type extends MessageType<CreateDocumentResponse> {
    constructor() {
        super("services.docstore.CreateDocumentResponse", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.CreateDocumentResponse
 */
export const CreateDocumentResponse = new CreateDocumentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateDocumentRequest$Type extends MessageType<UpdateDocumentRequest> {
    constructor() {
        super("services.docstore.UpdateDocumentRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "category_id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxBytes: "21845" } } } },
            { no: 4, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "20", maxBytes: "1750000" } } } },
            { no: 5, name: "content_type", kind: "enum", T: () => ["resources.documents.DocContentType", DocContentType, "DOC_CONTENT_TYPE_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 6, name: "data", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "24" } } } },
            { no: 8, name: "closed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "public", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "access", kind: "message", T: () => DocumentAccess }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.UpdateDocumentRequest
 */
export const UpdateDocumentRequest = new UpdateDocumentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateDocumentResponse$Type extends MessageType<UpdateDocumentResponse> {
    constructor() {
        super("services.docstore.UpdateDocumentResponse", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.UpdateDocumentResponse
 */
export const UpdateDocumentResponse = new UpdateDocumentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteDocumentRequest$Type extends MessageType<DeleteDocumentRequest> {
    constructor() {
        super("services.docstore.DeleteDocumentRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteDocumentRequest
 */
export const DeleteDocumentRequest = new DeleteDocumentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteDocumentResponse$Type extends MessageType<DeleteDocumentResponse> {
    constructor() {
        super("services.docstore.DeleteDocumentResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteDocumentResponse
 */
export const DeleteDocumentResponse = new DeleteDocumentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ToggleDocumentRequest$Type extends MessageType<ToggleDocumentRequest> {
    constructor() {
        super("services.docstore.ToggleDocumentRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "closed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ToggleDocumentRequest
 */
export const ToggleDocumentRequest = new ToggleDocumentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ToggleDocumentResponse$Type extends MessageType<ToggleDocumentResponse> {
    constructor() {
        super("services.docstore.ToggleDocumentResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ToggleDocumentResponse
 */
export const ToggleDocumentResponse = new ToggleDocumentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentAccessRequest$Type extends MessageType<GetDocumentAccessRequest> {
    constructor() {
        super("services.docstore.GetDocumentAccessRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentAccessRequest
 */
export const GetDocumentAccessRequest = new GetDocumentAccessRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentAccessResponse$Type extends MessageType<GetDocumentAccessResponse> {
    constructor() {
        super("services.docstore.GetDocumentAccessResponse", [
            { no: 1, name: "access", kind: "message", T: () => DocumentAccess, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.GetDocumentAccessResponse
 */
export const GetDocumentAccessResponse = new GetDocumentAccessResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetDocumentAccessRequest$Type extends MessageType<SetDocumentAccessRequest> {
    constructor() {
        super("services.docstore.SetDocumentAccessRequest", [
            { no: 1, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "mode", kind: "enum", T: () => ["services.docstore.AccessLevelUpdateMode", AccessLevelUpdateMode, "ACCESS_LEVEL_UPDATE_MODE_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 3, name: "access", kind: "message", T: () => DocumentAccess, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.SetDocumentAccessRequest
 */
export const SetDocumentAccessRequest = new SetDocumentAccessRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetDocumentAccessResponse$Type extends MessageType<SetDocumentAccessResponse> {
    constructor() {
        super("services.docstore.SetDocumentAccessResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.SetDocumentAccessResponse
 */
export const SetDocumentAccessResponse = new SetDocumentAccessResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListUserDocumentsRequest$Type extends MessageType<ListUserDocumentsRequest> {
    constructor() {
        super("services.docstore.ListUserDocumentsRequest", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationRequest, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 3, name: "relations", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["resources.documents.DocRelation", DocRelation, "DOC_RELATION_"], options: { "validate.rules": { repeated: { maxItems: "3" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListUserDocumentsRequest
 */
export const ListUserDocumentsRequest = new ListUserDocumentsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListUserDocumentsResponse$Type extends MessageType<ListUserDocumentsResponse> {
    constructor() {
        super("services.docstore.ListUserDocumentsResponse", [
            { no: 1, name: "pagination", kind: "message", T: () => PaginationResponse },
            { no: 2, name: "relations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentRelation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListUserDocumentsResponse
 */
export const ListUserDocumentsResponse = new ListUserDocumentsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListCategoriesRequest$Type extends MessageType<ListCategoriesRequest> {
    constructor() {
        super("services.docstore.ListCategoriesRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListCategoriesRequest
 */
export const ListCategoriesRequest = new ListCategoriesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListCategoriesResponse$Type extends MessageType<ListCategoriesResponse> {
    constructor() {
        super("services.docstore.ListCategoriesResponse", [
            { no: 1, name: "category", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Category }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.ListCategoriesResponse
 */
export const ListCategoriesResponse = new ListCategoriesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateCategoryRequest$Type extends MessageType<CreateCategoryRequest> {
    constructor() {
        super("services.docstore.CreateCategoryRequest", [
            { no: 1, name: "category", kind: "message", T: () => Category, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.CreateCategoryRequest
 */
export const CreateCategoryRequest = new CreateCategoryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateCategoryResponse$Type extends MessageType<CreateCategoryResponse> {
    constructor() {
        super("services.docstore.CreateCategoryResponse", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.CreateCategoryResponse
 */
export const CreateCategoryResponse = new CreateCategoryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCategoryRequest$Type extends MessageType<UpdateCategoryRequest> {
    constructor() {
        super("services.docstore.UpdateCategoryRequest", [
            { no: 1, name: "category", kind: "message", T: () => Category, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.UpdateCategoryRequest
 */
export const UpdateCategoryRequest = new UpdateCategoryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCategoryResponse$Type extends MessageType<UpdateCategoryResponse> {
    constructor() {
        super("services.docstore.UpdateCategoryResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.UpdateCategoryResponse
 */
export const UpdateCategoryResponse = new UpdateCategoryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCategoryRequest$Type extends MessageType<DeleteCategoryRequest> {
    constructor() {
        super("services.docstore.DeleteCategoryRequest", [
            { no: 1, name: "ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteCategoryRequest
 */
export const DeleteCategoryRequest = new DeleteCategoryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCategoryResponse$Type extends MessageType<DeleteCategoryResponse> {
    constructor() {
        super("services.docstore.DeleteCategoryResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message services.docstore.DeleteCategoryResponse
 */
export const DeleteCategoryResponse = new DeleteCategoryResponse$Type();
/**
 * @generated ServiceType for protobuf service services.docstore.DocStoreService
 */
export const DocStoreService = new ServiceType("services.docstore.DocStoreService", [
    { name: "ListTemplates", options: {}, I: ListTemplatesRequest, O: ListTemplatesResponse },
    { name: "GetTemplate", options: {}, I: GetTemplateRequest, O: GetTemplateResponse },
    { name: "CreateTemplate", options: {}, I: CreateTemplateRequest, O: CreateTemplateResponse },
    { name: "UpdateTemplate", options: {}, I: UpdateTemplateRequest, O: UpdateTemplateResponse },
    { name: "DeleteTemplate", options: {}, I: DeleteTemplateRequest, O: DeleteTemplateResponse },
    { name: "ListDocuments", options: {}, I: ListDocumentsRequest, O: ListDocumentsResponse },
    { name: "GetDocument", options: {}, I: GetDocumentRequest, O: GetDocumentResponse },
    { name: "CreateDocument", options: {}, I: CreateDocumentRequest, O: CreateDocumentResponse },
    { name: "UpdateDocument", options: {}, I: UpdateDocumentRequest, O: UpdateDocumentResponse },
    { name: "DeleteDocument", options: {}, I: DeleteDocumentRequest, O: DeleteDocumentResponse },
    { name: "ToggleDocument", options: {}, I: ToggleDocumentRequest, O: ToggleDocumentResponse },
    { name: "GetDocumentReferences", options: {}, I: GetDocumentReferencesRequest, O: GetDocumentReferencesResponse },
    { name: "GetDocumentRelations", options: {}, I: GetDocumentRelationsRequest, O: GetDocumentRelationsResponse },
    { name: "AddDocumentReference", options: {}, I: AddDocumentReferenceRequest, O: AddDocumentReferenceResponse },
    { name: "RemoveDocumentReference", options: {}, I: RemoveDocumentReferenceRequest, O: RemoveDocumentReferenceResponse },
    { name: "AddDocumentRelation", options: {}, I: AddDocumentRelationRequest, O: AddDocumentRelationResponse },
    { name: "RemoveDocumentRelation", options: {}, I: RemoveDocumentRelationRequest, O: RemoveDocumentRelationResponse },
    { name: "GetComments", options: {}, I: GetCommentsRequest, O: GetCommentsResponse },
    { name: "PostComment", options: {}, I: PostCommentRequest, O: PostCommentResponse },
    { name: "EditComment", options: {}, I: EditCommentRequest, O: EditCommentResponse },
    { name: "DeleteComment", options: {}, I: DeleteCommentRequest, O: DeleteCommentResponse },
    { name: "GetDocumentAccess", options: {}, I: GetDocumentAccessRequest, O: GetDocumentAccessResponse },
    { name: "SetDocumentAccess", options: {}, I: SetDocumentAccessRequest, O: SetDocumentAccessResponse },
    { name: "ListUserDocuments", options: {}, I: ListUserDocumentsRequest, O: ListUserDocumentsResponse },
    { name: "ListCategories", options: {}, I: ListCategoriesRequest, O: ListCategoriesResponse },
    { name: "CreateCategory", options: {}, I: CreateCategoryRequest, O: CreateCategoryResponse },
    { name: "UpdateCategory", options: {}, I: UpdateCategoryRequest, O: UpdateCategoryResponse },
    { name: "DeleteCategory", options: {}, I: DeleteCategoryRequest, O: DeleteCategoryResponse }
]);
