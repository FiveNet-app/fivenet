// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "services/docstore/docstore.proto" (package "services.docstore", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DocStoreService } from "./docstore.js";
import type { DeleteDocumentCategoryResponse } from "./docstore.js";
import type { DeleteDocumentCategoryRequest } from "./docstore.js";
import type { UpdateDocumentCategoryResponse } from "./docstore.js";
import type { UpdateDocumentCategoryRequest } from "./docstore.js";
import type { CreateDocumentCategoryResponse } from "./docstore.js";
import type { CreateDocumentCategoryRequest } from "./docstore.js";
import type { ListDocumentCategoriesResponse } from "./docstore.js";
import type { ListDocumentCategoriesRequest } from "./docstore.js";
import type { ListUserDocumentsResponse } from "./docstore.js";
import type { ListUserDocumentsRequest } from "./docstore.js";
import type { SetDocumentAccessResponse } from "./docstore.js";
import type { SetDocumentAccessRequest } from "./docstore.js";
import type { GetDocumentAccessResponse } from "./docstore.js";
import type { GetDocumentAccessRequest } from "./docstore.js";
import type { DeleteDocumentCommentResponse } from "./docstore.js";
import type { DeleteDocumentCommentRequest } from "./docstore.js";
import type { EditDocumentCommentResponse } from "./docstore.js";
import type { EditDocumentCommentRequest } from "./docstore.js";
import type { PostDocumentCommentResponse } from "./docstore.js";
import type { PostDocumentCommentRequest } from "./docstore.js";
import type { GetDocumentCommentsResponse } from "./docstore.js";
import type { GetDocumentCommentsRequest } from "./docstore.js";
import type { RemoveDocumentRelationResponse } from "./docstore.js";
import type { RemoveDocumentRelationRequest } from "./docstore.js";
import type { AddDocumentRelationResponse } from "./docstore.js";
import type { AddDocumentRelationRequest } from "./docstore.js";
import type { RemoveDocumentReferenceResponse } from "./docstore.js";
import type { RemoveDocumentReferenceRequest } from "./docstore.js";
import type { AddDocumentReferenceResponse } from "./docstore.js";
import type { AddDocumentReferenceRequest } from "./docstore.js";
import type { GetDocumentRelationsResponse } from "./docstore.js";
import type { GetDocumentRelationsRequest } from "./docstore.js";
import type { GetDocumentReferencesResponse } from "./docstore.js";
import type { GetDocumentReferencesRequest } from "./docstore.js";
import type { DeleteDocumentResponse } from "./docstore.js";
import type { DeleteDocumentRequest } from "./docstore.js";
import type { UpdateDocumentResponse } from "./docstore.js";
import type { UpdateDocumentRequest } from "./docstore.js";
import type { CreateDocumentResponse } from "./docstore.js";
import type { CreateDocumentRequest } from "./docstore.js";
import type { GetDocumentResponse } from "./docstore.js";
import type { GetDocumentRequest } from "./docstore.js";
import type { ListDocumentsResponse } from "./docstore.js";
import type { ListDocumentsRequest } from "./docstore.js";
import type { DeleteTemplateResponse } from "./docstore.js";
import type { DeleteTemplateRequest } from "./docstore.js";
import type { UpdateTemplateResponse } from "./docstore.js";
import type { UpdateTemplateRequest } from "./docstore.js";
import type { CreateTemplateResponse } from "./docstore.js";
import type { CreateTemplateRequest } from "./docstore.js";
import type { GetTemplateResponse } from "./docstore.js";
import type { GetTemplateRequest } from "./docstore.js";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListTemplatesResponse } from "./docstore.js";
import type { ListTemplatesRequest } from "./docstore.js";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service services.docstore.DocStoreService
 */
export interface IDocStoreServiceClient {
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListTemplates(services.docstore.ListTemplatesRequest) returns (services.docstore.ListTemplatesResponse);
     */
    listTemplates(input: ListTemplatesRequest, options?: RpcOptions): UnaryCall<ListTemplatesRequest, ListTemplatesResponse>;
    /**
     * @perm: Name=ListTemplates
     *
     * @generated from protobuf rpc: GetTemplate(services.docstore.GetTemplateRequest) returns (services.docstore.GetTemplateResponse);
     */
    getTemplate(input: GetTemplateRequest, options?: RpcOptions): UnaryCall<GetTemplateRequest, GetTemplateResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateTemplate(services.docstore.CreateTemplateRequest) returns (services.docstore.CreateTemplateResponse);
     */
    createTemplate(input: CreateTemplateRequest, options?: RpcOptions): UnaryCall<CreateTemplateRequest, CreateTemplateResponse>;
    /**
     * @perm: Name=CreateTemplate
     *
     * @generated from protobuf rpc: UpdateTemplate(services.docstore.UpdateTemplateRequest) returns (services.docstore.UpdateTemplateResponse);
     */
    updateTemplate(input: UpdateTemplateRequest, options?: RpcOptions): UnaryCall<UpdateTemplateRequest, UpdateTemplateResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteTemplate(services.docstore.DeleteTemplateRequest) returns (services.docstore.DeleteTemplateResponse);
     */
    deleteTemplate(input: DeleteTemplateRequest, options?: RpcOptions): UnaryCall<DeleteTemplateRequest, DeleteTemplateResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListDocuments(services.docstore.ListDocumentsRequest) returns (services.docstore.ListDocumentsResponse);
     */
    listDocuments(input: ListDocumentsRequest, options?: RpcOptions): UnaryCall<ListDocumentsRequest, ListDocumentsResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: GetDocument(services.docstore.GetDocumentRequest) returns (services.docstore.GetDocumentResponse);
     */
    getDocument(input: GetDocumentRequest, options?: RpcOptions): UnaryCall<GetDocumentRequest, GetDocumentResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateDocument(services.docstore.CreateDocumentRequest) returns (services.docstore.CreateDocumentResponse);
     */
    createDocument(input: CreateDocumentRequest, options?: RpcOptions): UnaryCall<CreateDocumentRequest, CreateDocumentResponse>;
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}
     *
     * @generated from protobuf rpc: UpdateDocument(services.docstore.UpdateDocumentRequest) returns (services.docstore.UpdateDocumentResponse);
     */
    updateDocument(input: UpdateDocumentRequest, options?: RpcOptions): UnaryCall<UpdateDocumentRequest, UpdateDocumentResponse>;
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}
     *
     * @generated from protobuf rpc: DeleteDocument(services.docstore.DeleteDocumentRequest) returns (services.docstore.DeleteDocumentResponse);
     */
    deleteDocument(input: DeleteDocumentRequest, options?: RpcOptions): UnaryCall<DeleteDocumentRequest, DeleteDocumentResponse>;
    /**
     * @perm: Name=GetDocument
     *
     * @generated from protobuf rpc: GetDocumentReferences(services.docstore.GetDocumentReferencesRequest) returns (services.docstore.GetDocumentReferencesResponse);
     */
    getDocumentReferences(input: GetDocumentReferencesRequest, options?: RpcOptions): UnaryCall<GetDocumentReferencesRequest, GetDocumentReferencesResponse>;
    /**
     * @perm: Name=GetDocument
     *
     * @generated from protobuf rpc: GetDocumentRelations(services.docstore.GetDocumentRelationsRequest) returns (services.docstore.GetDocumentRelationsResponse);
     */
    getDocumentRelations(input: GetDocumentRelationsRequest, options?: RpcOptions): UnaryCall<GetDocumentRelationsRequest, GetDocumentRelationsResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: AddDocumentReference(services.docstore.AddDocumentReferenceRequest) returns (services.docstore.AddDocumentReferenceResponse);
     */
    addDocumentReference(input: AddDocumentReferenceRequest, options?: RpcOptions): UnaryCall<AddDocumentReferenceRequest, AddDocumentReferenceResponse>;
    /**
     * @perm: Name=AddDocumentReference
     *
     * @generated from protobuf rpc: RemoveDocumentReference(services.docstore.RemoveDocumentReferenceRequest) returns (services.docstore.RemoveDocumentReferenceResponse);
     */
    removeDocumentReference(input: RemoveDocumentReferenceRequest, options?: RpcOptions): UnaryCall<RemoveDocumentReferenceRequest, RemoveDocumentReferenceResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: AddDocumentRelation(services.docstore.AddDocumentRelationRequest) returns (services.docstore.AddDocumentRelationResponse);
     */
    addDocumentRelation(input: AddDocumentRelationRequest, options?: RpcOptions): UnaryCall<AddDocumentRelationRequest, AddDocumentRelationResponse>;
    /**
     * @perm: Name=AddDocumentRelation
     *
     * @generated from protobuf rpc: RemoveDocumentRelation(services.docstore.RemoveDocumentRelationRequest) returns (services.docstore.RemoveDocumentRelationResponse);
     */
    removeDocumentRelation(input: RemoveDocumentRelationRequest, options?: RpcOptions): UnaryCall<RemoveDocumentRelationRequest, RemoveDocumentRelationResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: GetDocumentComments(services.docstore.GetDocumentCommentsRequest) returns (services.docstore.GetDocumentCommentsResponse);
     */
    getDocumentComments(input: GetDocumentCommentsRequest, options?: RpcOptions): UnaryCall<GetDocumentCommentsRequest, GetDocumentCommentsResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: PostDocumentComment(services.docstore.PostDocumentCommentRequest) returns (services.docstore.PostDocumentCommentResponse);
     */
    postDocumentComment(input: PostDocumentCommentRequest, options?: RpcOptions): UnaryCall<PostDocumentCommentRequest, PostDocumentCommentResponse>;
    /**
     * @perm: Name=PostDocumentComment
     *
     * @generated from protobuf rpc: EditDocumentComment(services.docstore.EditDocumentCommentRequest) returns (services.docstore.EditDocumentCommentResponse);
     */
    editDocumentComment(input: EditDocumentCommentRequest, options?: RpcOptions): UnaryCall<EditDocumentCommentRequest, EditDocumentCommentResponse>;
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}
     *
     * @generated from protobuf rpc: DeleteDocumentComment(services.docstore.DeleteDocumentCommentRequest) returns (services.docstore.DeleteDocumentCommentResponse);
     */
    deleteDocumentComment(input: DeleteDocumentCommentRequest, options?: RpcOptions): UnaryCall<DeleteDocumentCommentRequest, DeleteDocumentCommentResponse>;
    /**
     * @perm: Name=GetDocument
     *
     * @generated from protobuf rpc: GetDocumentAccess(services.docstore.GetDocumentAccessRequest) returns (services.docstore.GetDocumentAccessResponse);
     */
    getDocumentAccess(input: GetDocumentAccessRequest, options?: RpcOptions): UnaryCall<GetDocumentAccessRequest, GetDocumentAccessResponse>;
    /**
     * @perm: Name=CreateDocument
     *
     * @generated from protobuf rpc: SetDocumentAccess(services.docstore.SetDocumentAccessRequest) returns (services.docstore.SetDocumentAccessResponse);
     */
    setDocumentAccess(input: SetDocumentAccessRequest, options?: RpcOptions): UnaryCall<SetDocumentAccessRequest, SetDocumentAccessResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListUserDocuments(services.docstore.ListUserDocumentsRequest) returns (services.docstore.ListUserDocumentsResponse);
     */
    listUserDocuments(input: ListUserDocumentsRequest, options?: RpcOptions): UnaryCall<ListUserDocumentsRequest, ListUserDocumentsResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListDocumentCategories(services.docstore.ListDocumentCategoriesRequest) returns (services.docstore.ListDocumentCategoriesResponse);
     */
    listDocumentCategories(input: ListDocumentCategoriesRequest, options?: RpcOptions): UnaryCall<ListDocumentCategoriesRequest, ListDocumentCategoriesResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateDocumentCategory(services.docstore.CreateDocumentCategoryRequest) returns (services.docstore.CreateDocumentCategoryResponse);
     */
    createDocumentCategory(input: CreateDocumentCategoryRequest, options?: RpcOptions): UnaryCall<CreateDocumentCategoryRequest, CreateDocumentCategoryResponse>;
    /**
     * @perm: Name=CreateDocumentCategory
     *
     * @generated from protobuf rpc: UpdateDocumentCategory(services.docstore.UpdateDocumentCategoryRequest) returns (services.docstore.UpdateDocumentCategoryResponse);
     */
    updateDocumentCategory(input: UpdateDocumentCategoryRequest, options?: RpcOptions): UnaryCall<UpdateDocumentCategoryRequest, UpdateDocumentCategoryResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteDocumentCategory(services.docstore.DeleteDocumentCategoryRequest) returns (services.docstore.DeleteDocumentCategoryResponse);
     */
    deleteDocumentCategory(input: DeleteDocumentCategoryRequest, options?: RpcOptions): UnaryCall<DeleteDocumentCategoryRequest, DeleteDocumentCategoryResponse>;
}
/**
 * @generated from protobuf service services.docstore.DocStoreService
 */
export class DocStoreServiceClient implements IDocStoreServiceClient, ServiceInfo {
    typeName = DocStoreService.typeName;
    methods = DocStoreService.methods;
    options = DocStoreService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListTemplates(services.docstore.ListTemplatesRequest) returns (services.docstore.ListTemplatesResponse);
     */
    listTemplates(input: ListTemplatesRequest, options?: RpcOptions): UnaryCall<ListTemplatesRequest, ListTemplatesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListTemplatesRequest, ListTemplatesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=ListTemplates
     *
     * @generated from protobuf rpc: GetTemplate(services.docstore.GetTemplateRequest) returns (services.docstore.GetTemplateResponse);
     */
    getTemplate(input: GetTemplateRequest, options?: RpcOptions): UnaryCall<GetTemplateRequest, GetTemplateResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTemplateRequest, GetTemplateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateTemplate(services.docstore.CreateTemplateRequest) returns (services.docstore.CreateTemplateResponse);
     */
    createTemplate(input: CreateTemplateRequest, options?: RpcOptions): UnaryCall<CreateTemplateRequest, CreateTemplateResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTemplateRequest, CreateTemplateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=CreateTemplate
     *
     * @generated from protobuf rpc: UpdateTemplate(services.docstore.UpdateTemplateRequest) returns (services.docstore.UpdateTemplateResponse);
     */
    updateTemplate(input: UpdateTemplateRequest, options?: RpcOptions): UnaryCall<UpdateTemplateRequest, UpdateTemplateResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateTemplateRequest, UpdateTemplateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteTemplate(services.docstore.DeleteTemplateRequest) returns (services.docstore.DeleteTemplateResponse);
     */
    deleteTemplate(input: DeleteTemplateRequest, options?: RpcOptions): UnaryCall<DeleteTemplateRequest, DeleteTemplateResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteTemplateRequest, DeleteTemplateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListDocuments(services.docstore.ListDocumentsRequest) returns (services.docstore.ListDocumentsResponse);
     */
    listDocuments(input: ListDocumentsRequest, options?: RpcOptions): UnaryCall<ListDocumentsRequest, ListDocumentsResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListDocumentsRequest, ListDocumentsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: GetDocument(services.docstore.GetDocumentRequest) returns (services.docstore.GetDocumentResponse);
     */
    getDocument(input: GetDocumentRequest, options?: RpcOptions): UnaryCall<GetDocumentRequest, GetDocumentResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetDocumentRequest, GetDocumentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateDocument(services.docstore.CreateDocumentRequest) returns (services.docstore.CreateDocumentResponse);
     */
    createDocument(input: CreateDocumentRequest, options?: RpcOptions): UnaryCall<CreateDocumentRequest, CreateDocumentResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateDocumentRequest, CreateDocumentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}
     *
     * @generated from protobuf rpc: UpdateDocument(services.docstore.UpdateDocumentRequest) returns (services.docstore.UpdateDocumentResponse);
     */
    updateDocument(input: UpdateDocumentRequest, options?: RpcOptions): UnaryCall<UpdateDocumentRequest, UpdateDocumentResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateDocumentRequest, UpdateDocumentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}
     *
     * @generated from protobuf rpc: DeleteDocument(services.docstore.DeleteDocumentRequest) returns (services.docstore.DeleteDocumentResponse);
     */
    deleteDocument(input: DeleteDocumentRequest, options?: RpcOptions): UnaryCall<DeleteDocumentRequest, DeleteDocumentResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteDocumentRequest, DeleteDocumentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=GetDocument
     *
     * @generated from protobuf rpc: GetDocumentReferences(services.docstore.GetDocumentReferencesRequest) returns (services.docstore.GetDocumentReferencesResponse);
     */
    getDocumentReferences(input: GetDocumentReferencesRequest, options?: RpcOptions): UnaryCall<GetDocumentReferencesRequest, GetDocumentReferencesResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetDocumentReferencesRequest, GetDocumentReferencesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=GetDocument
     *
     * @generated from protobuf rpc: GetDocumentRelations(services.docstore.GetDocumentRelationsRequest) returns (services.docstore.GetDocumentRelationsResponse);
     */
    getDocumentRelations(input: GetDocumentRelationsRequest, options?: RpcOptions): UnaryCall<GetDocumentRelationsRequest, GetDocumentRelationsResponse> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetDocumentRelationsRequest, GetDocumentRelationsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: AddDocumentReference(services.docstore.AddDocumentReferenceRequest) returns (services.docstore.AddDocumentReferenceResponse);
     */
    addDocumentReference(input: AddDocumentReferenceRequest, options?: RpcOptions): UnaryCall<AddDocumentReferenceRequest, AddDocumentReferenceResponse> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddDocumentReferenceRequest, AddDocumentReferenceResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=AddDocumentReference
     *
     * @generated from protobuf rpc: RemoveDocumentReference(services.docstore.RemoveDocumentReferenceRequest) returns (services.docstore.RemoveDocumentReferenceResponse);
     */
    removeDocumentReference(input: RemoveDocumentReferenceRequest, options?: RpcOptions): UnaryCall<RemoveDocumentReferenceRequest, RemoveDocumentReferenceResponse> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveDocumentReferenceRequest, RemoveDocumentReferenceResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: AddDocumentRelation(services.docstore.AddDocumentRelationRequest) returns (services.docstore.AddDocumentRelationResponse);
     */
    addDocumentRelation(input: AddDocumentRelationRequest, options?: RpcOptions): UnaryCall<AddDocumentRelationRequest, AddDocumentRelationResponse> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddDocumentRelationRequest, AddDocumentRelationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=AddDocumentRelation
     *
     * @generated from protobuf rpc: RemoveDocumentRelation(services.docstore.RemoveDocumentRelationRequest) returns (services.docstore.RemoveDocumentRelationResponse);
     */
    removeDocumentRelation(input: RemoveDocumentRelationRequest, options?: RpcOptions): UnaryCall<RemoveDocumentRelationRequest, RemoveDocumentRelationResponse> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveDocumentRelationRequest, RemoveDocumentRelationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: GetDocumentComments(services.docstore.GetDocumentCommentsRequest) returns (services.docstore.GetDocumentCommentsResponse);
     */
    getDocumentComments(input: GetDocumentCommentsRequest, options?: RpcOptions): UnaryCall<GetDocumentCommentsRequest, GetDocumentCommentsResponse> {
        const method = this.methods[16], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetDocumentCommentsRequest, GetDocumentCommentsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: PostDocumentComment(services.docstore.PostDocumentCommentRequest) returns (services.docstore.PostDocumentCommentResponse);
     */
    postDocumentComment(input: PostDocumentCommentRequest, options?: RpcOptions): UnaryCall<PostDocumentCommentRequest, PostDocumentCommentResponse> {
        const method = this.methods[17], opt = this._transport.mergeOptions(options);
        return stackIntercept<PostDocumentCommentRequest, PostDocumentCommentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=PostDocumentComment
     *
     * @generated from protobuf rpc: EditDocumentComment(services.docstore.EditDocumentCommentRequest) returns (services.docstore.EditDocumentCommentResponse);
     */
    editDocumentComment(input: EditDocumentCommentRequest, options?: RpcOptions): UnaryCall<EditDocumentCommentRequest, EditDocumentCommentResponse> {
        const method = this.methods[18], opt = this._transport.mergeOptions(options);
        return stackIntercept<EditDocumentCommentRequest, EditDocumentCommentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank"}
     *
     * @generated from protobuf rpc: DeleteDocumentComment(services.docstore.DeleteDocumentCommentRequest) returns (services.docstore.DeleteDocumentCommentResponse);
     */
    deleteDocumentComment(input: DeleteDocumentCommentRequest, options?: RpcOptions): UnaryCall<DeleteDocumentCommentRequest, DeleteDocumentCommentResponse> {
        const method = this.methods[19], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteDocumentCommentRequest, DeleteDocumentCommentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=GetDocument
     *
     * @generated from protobuf rpc: GetDocumentAccess(services.docstore.GetDocumentAccessRequest) returns (services.docstore.GetDocumentAccessResponse);
     */
    getDocumentAccess(input: GetDocumentAccessRequest, options?: RpcOptions): UnaryCall<GetDocumentAccessRequest, GetDocumentAccessResponse> {
        const method = this.methods[20], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetDocumentAccessRequest, GetDocumentAccessResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=CreateDocument
     *
     * @generated from protobuf rpc: SetDocumentAccess(services.docstore.SetDocumentAccessRequest) returns (services.docstore.SetDocumentAccessResponse);
     */
    setDocumentAccess(input: SetDocumentAccessRequest, options?: RpcOptions): UnaryCall<SetDocumentAccessRequest, SetDocumentAccessResponse> {
        const method = this.methods[21], opt = this._transport.mergeOptions(options);
        return stackIntercept<SetDocumentAccessRequest, SetDocumentAccessResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListUserDocuments(services.docstore.ListUserDocumentsRequest) returns (services.docstore.ListUserDocumentsResponse);
     */
    listUserDocuments(input: ListUserDocumentsRequest, options?: RpcOptions): UnaryCall<ListUserDocumentsRequest, ListUserDocumentsResponse> {
        const method = this.methods[22], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListUserDocumentsRequest, ListUserDocumentsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListDocumentCategories(services.docstore.ListDocumentCategoriesRequest) returns (services.docstore.ListDocumentCategoriesResponse);
     */
    listDocumentCategories(input: ListDocumentCategoriesRequest, options?: RpcOptions): UnaryCall<ListDocumentCategoriesRequest, ListDocumentCategoriesResponse> {
        const method = this.methods[23], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListDocumentCategoriesRequest, ListDocumentCategoriesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateDocumentCategory(services.docstore.CreateDocumentCategoryRequest) returns (services.docstore.CreateDocumentCategoryResponse);
     */
    createDocumentCategory(input: CreateDocumentCategoryRequest, options?: RpcOptions): UnaryCall<CreateDocumentCategoryRequest, CreateDocumentCategoryResponse> {
        const method = this.methods[24], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateDocumentCategoryRequest, CreateDocumentCategoryResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=CreateDocumentCategory
     *
     * @generated from protobuf rpc: UpdateDocumentCategory(services.docstore.UpdateDocumentCategoryRequest) returns (services.docstore.UpdateDocumentCategoryResponse);
     */
    updateDocumentCategory(input: UpdateDocumentCategoryRequest, options?: RpcOptions): UnaryCall<UpdateDocumentCategoryRequest, UpdateDocumentCategoryResponse> {
        const method = this.methods[25], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateDocumentCategoryRequest, UpdateDocumentCategoryResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteDocumentCategory(services.docstore.DeleteDocumentCategoryRequest) returns (services.docstore.DeleteDocumentCategoryResponse);
     */
    deleteDocumentCategory(input: DeleteDocumentCategoryRequest, options?: RpcOptions): UnaryCall<DeleteDocumentCategoryRequest, DeleteDocumentCategoryResponse> {
        const method = this.methods[26], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteDocumentCategoryRequest, DeleteDocumentCategoryResponse>("unary", this._transport, method, opt, input);
    }
}
