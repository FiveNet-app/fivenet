// @generated by protobuf-ts 2.9.1 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "resources/jobs/requests.proto" (package "resources.jobs", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { UserShort } from "../users/users.js";
import { Timestamp } from "../timestamp/timestamp.js";
/**
 * @generated from protobuf message resources.jobs.RequestEntry
 */
export interface RequestEntry {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint; // @gotags: sql:"primary_key" alias:"id"
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: string job = 4;
     */
    job: string;
    /**
     * @generated from protobuf field: resources.jobs.REQUEST_TYPE type = 5;
     */
    type: REQUEST_TYPE;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp expires_at = 6;
     */
    expiresAt?: Timestamp;
    /**
     * TODO what info do we need for requests? begin and end time?
     *
     * @generated from protobuf field: int32 creator_id = 9;
     */
    creatorId: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort creator = 10;
     */
    creator?: UserShort;
}
/**
 * @generated from protobuf enum resources.jobs.REQUEST_TYPE
 */
export enum REQUEST_TYPE {
    /**
     * @generated from protobuf enum value: ABSENCE = 0;
     */
    ABSENCE = 0
}
// @generated message type with reflection information, may provide speed optimized methods
class RequestEntry$Type extends MessageType<RequestEntry> {
    constructor() {
        super("resources.jobs.RequestEntry", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 5, name: "type", kind: "enum", T: () => ["resources.jobs.REQUEST_TYPE", REQUEST_TYPE], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 6, name: "expires_at", kind: "message", T: () => Timestamp },
            { no: 9, name: "creator_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 10, name: "creator", kind: "message", T: () => UserShort }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.jobs.RequestEntry
 */
export const RequestEntry = new RequestEntry$Type();
