// @generated by protobuf-ts 2.9.4 with parameter optimize_speed,long_type_number,force_server_none
// @generated from protobuf file "resources/internet/ads.proto" (package "resources.internet", syntax proto3)
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { File } from "../filestore/file";
import { Timestamp } from "../timestamp/timestamp";
/**
 * @generated from protobuf message resources.internet.Ad
 */
export interface Ad {
    /**
     * @generated from protobuf field: uint64 id = 1 [jstype = JS_STRING];
     */
    id: string; // @gotags: sql:"primary_key" alias:"id"
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp deleted_at = 4;
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp expires_at = 5;
     */
    expiresAt?: Timestamp;
    /**
     * @generated from protobuf field: bool disabled = 6;
     */
    disabled: boolean;
    /**
     * @generated from protobuf field: resources.internet.AdType ad_type = 7;
     */
    adType: AdType;
    /**
     * @sanitize: method=StripTags
     *
     * @generated from protobuf field: string title = 8;
     */
    title: string;
    /**
     * @sanitize: method=StripTags
     *
     * @generated from protobuf field: string description = 9;
     */
    description: string;
    /**
     * @generated from protobuf field: optional resources.filestore.File image = 10;
     */
    image?: File;
}
/**
 * @generated from protobuf enum resources.internet.AdType
 */
export enum AdType {
    /**
     * @generated from protobuf enum value: AD_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: AD_TYPE_SPONSORED = 1;
     */
    SPONSORED = 1,
    /**
     * @generated from protobuf enum value: AD_TYPE_SEARCH_RESULT = 2;
     */
    SEARCH_RESULT = 2,
    /**
     * @generated from protobuf enum value: AD_TYPE_CONTENT_MAIN = 3;
     */
    CONTENT_MAIN = 3,
    /**
     * @generated from protobuf enum value: AD_TYPE_CONTENT_ASIDE = 4;
     */
    CONTENT_ASIDE = 4
}
// @generated message type with reflection information, may provide speed optimized methods
class Ad$Type extends MessageType<Ad> {
    constructor() {
        super("resources.internet.Ad", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "expires_at", kind: "message", T: () => Timestamp },
            { no: 6, name: "disabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "ad_type", kind: "enum", T: () => ["resources.internet.AdType", AdType, "AD_TYPE_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 8, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "128" } } } },
            { no: 9, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "2048" } } } },
            { no: 10, name: "image", kind: "message", T: () => File }
        ]);
    }
    create(value?: PartialMessage<Ad>): Ad {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "0";
        message.disabled = false;
        message.adType = 0;
        message.title = "";
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<Ad>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Ad): Ad {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id = 1 [jstype = JS_STRING];*/ 1:
                    message.id = reader.uint64().toString();
                    break;
                case /* resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* optional resources.timestamp.Timestamp updated_at */ 3:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                case /* optional resources.timestamp.Timestamp deleted_at */ 4:
                    message.deletedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deletedAt);
                    break;
                case /* optional resources.timestamp.Timestamp expires_at */ 5:
                    message.expiresAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.expiresAt);
                    break;
                case /* bool disabled */ 6:
                    message.disabled = reader.bool();
                    break;
                case /* resources.internet.AdType ad_type */ 7:
                    message.adType = reader.int32();
                    break;
                case /* string title */ 8:
                    message.title = reader.string();
                    break;
                case /* string description */ 9:
                    message.description = reader.string();
                    break;
                case /* optional resources.filestore.File image */ 10:
                    message.image = File.internalBinaryRead(reader, reader.uint32(), options, message.image);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Ad, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1 [jstype = JS_STRING]; */
        if (message.id !== "0")
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp updated_at = 3; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp deleted_at = 4; */
        if (message.deletedAt)
            Timestamp.internalBinaryWrite(message.deletedAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp expires_at = 5; */
        if (message.expiresAt)
            Timestamp.internalBinaryWrite(message.expiresAt, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bool disabled = 6; */
        if (message.disabled !== false)
            writer.tag(6, WireType.Varint).bool(message.disabled);
        /* resources.internet.AdType ad_type = 7; */
        if (message.adType !== 0)
            writer.tag(7, WireType.Varint).int32(message.adType);
        /* string title = 8; */
        if (message.title !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.title);
        /* string description = 9; */
        if (message.description !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.description);
        /* optional resources.filestore.File image = 10; */
        if (message.image)
            File.internalBinaryWrite(message.image, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.internet.Ad
 */
export const Ad = new Ad$Type();
