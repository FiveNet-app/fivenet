// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "resources/dispatch/dispatch.proto" (package "resources.dispatch", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Unit } from "./units.js";
import { DispatchMarker } from "../livemap/livemap.js";
import { Timestamp } from "../timestamp/timestamp.js";
/**
 * @generated from protobuf message resources.dispatch.Dispatch
 */
export interface Dispatch {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint; // @gotags: sql:"primary_key" alias:"id"
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp; // @gotags: alias:"created_at"
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp; // @gotags: alias:"updated_at"
    /**
     * @generated from protobuf field: optional string job = 4;
     */
    job?: string;
    /**
     * @generated from protobuf field: optional resources.dispatch.DISPATCH_STATUS status = 5;
     */
    status?: DISPATCH_STATUS;
    /**
     * @generated from protobuf field: string message = 6;
     */
    message: string;
    /**
     * @generated from protobuf field: optional string description = 7;
     */
    description?: string;
    /**
     * @generated from protobuf field: map<string, string> attributes = 8;
     */
    attributes: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: resources.livemap.DispatchMarker marker = 9;
     */
    marker?: DispatchMarker;
    /**
     * @generated from protobuf field: repeated uint64 unit_ids = 10;
     */
    unitIds: bigint[];
    /**
     * @generated from protobuf field: repeated resources.dispatch.Unit units = 11;
     */
    units: Unit[];
}
/**
 * @generated from protobuf enum resources.dispatch.DISPATCH_STATUS
 */
export enum DISPATCH_STATUS {
    /**
     * @generated from protobuf enum value: UNASSIGNED = 0;
     */
    UNASSIGNED = 0,
    /**
     * @generated from protobuf enum value: EN_ROUTE = 1;
     */
    EN_ROUTE = 1,
    /**
     * @generated from protobuf enum value: AT_SCENE = 2;
     */
    AT_SCENE = 2,
    /**
     * @generated from protobuf enum value: NEED_ASSISTANCE = 3;
     */
    NEED_ASSISTANCE = 3,
    /**
     * @generated from protobuf enum value: COMPLETED = 4;
     */
    COMPLETED = 4
}
// @generated message type with reflection information, may provide speed optimized methods
class Dispatch$Type extends MessageType<Dispatch> {
    constructor() {
        super("resources.dispatch.Dispatch", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "job", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "50" } } } },
            { no: 5, name: "status", kind: "enum", opt: true, T: () => ["resources.dispatch.DISPATCH_STATUS", DISPATCH_STATUS], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 6, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "255" } } } },
            { no: 7, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "1024" } } } },
            { no: 8, name: "attributes", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 9, name: "marker", kind: "message", T: () => DispatchMarker },
            { no: 10, name: "unit_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "units", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Unit }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.dispatch.Dispatch
 */
export const Dispatch = new Dispatch$Type();
