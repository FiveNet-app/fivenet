// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "resources/dispatch/dispatch.proto" (package "resources.dispatch", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Unit } from "./units.js";
import { UserShort } from "../users/users.js";
import { DispatchMarker } from "../livemap/livemap.js";
import { Timestamp } from "../timestamp/timestamp.js";
/**
 * @generated from protobuf message resources.dispatch.Dispatch
 */
export interface Dispatch {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint; // @gotags: sql:"primary_key" alias:"id"
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: string job = 4;
     */
    job: string;
    /**
     * @generated from protobuf field: optional resources.dispatch.DispatchStatus status = 5;
     */
    status?: DispatchStatus;
    /**
     * @generated from protobuf field: string message = 6;
     */
    message: string;
    /**
     * @generated from protobuf field: optional string description = 7;
     */
    description?: string;
    /**
     * @generated from protobuf field: optional resources.dispatch.Attributes attributes = 8;
     */
    attributes?: Attributes;
    /**
     * @generated from protobuf field: resources.livemap.DispatchMarker marker = 9;
     */
    marker?: DispatchMarker;
    /**
     * @generated from protobuf field: optional bool anon = 10;
     */
    anon?: boolean;
    /**
     * @generated from protobuf field: optional int32 user_id = 11;
     */
    userId?: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort user = 12;
     */
    user?: UserShort;
    /**
     * @generated from protobuf field: repeated resources.dispatch.DispatchAssignment units = 13;
     */
    units: DispatchAssignment[];
}
/**
 * @generated from protobuf message resources.dispatch.Attributes
 */
export interface Attributes {
    /**
     * @generated from protobuf field: repeated string list = 1;
     */
    list: string[];
}
/**
 * @generated from protobuf message resources.dispatch.DispatchAssignment
 */
export interface DispatchAssignment {
    /**
     * @generated from protobuf field: uint64 dispatch_id = 1;
     */
    dispatchId: bigint;
    /**
     * @generated from protobuf field: uint64 unit_id = 2;
     */
    unitId: bigint;
    /**
     * @generated from protobuf field: optional resources.dispatch.Unit unit = 3;
     */
    unit?: Unit;
}
/**
 * @generated from protobuf message resources.dispatch.DispatchStatus
 */
export interface DispatchStatus {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: bigint; // @gotags: sql:"primary_key" alias:"id"
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 dispatch_id = 3;
     */
    dispatchId: bigint;
    /**
     * @generated from protobuf field: uint64 unit_id = 4;
     */
    unitId: bigint;
    /**
     * @generated from protobuf field: resources.dispatch.DISPATCH_STATUS status = 5;
     */
    status: DISPATCH_STATUS;
    /**
     * @generated from protobuf field: optional string reason = 6;
     */
    reason?: string;
    /**
     * @generated from protobuf field: optional string code = 7;
     */
    code?: string;
    /**
     * @generated from protobuf field: optional int32 user_id = 8;
     */
    userId?: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort user = 9;
     */
    user?: UserShort;
}
/**
 * @generated from protobuf enum resources.dispatch.DISPATCH_STATUS
 */
export enum DISPATCH_STATUS {
    /**
     * @generated from protobuf enum value: NEW = 0;
     */
    NEW = 0,
    /**
     * @generated from protobuf enum value: DECLINED = 1;
     */
    DECLINED = 1,
    /**
     * @generated from protobuf enum value: UNASSIGNED = 2;
     */
    UNASSIGNED = 2,
    /**
     * @generated from protobuf enum value: UNIT_ASSIGNED = 3;
     */
    UNIT_ASSIGNED = 3,
    /**
     * @generated from protobuf enum value: EN_ROUTE = 4;
     */
    EN_ROUTE = 4,
    /**
     * @generated from protobuf enum value: AT_SCENE = 5;
     */
    AT_SCENE = 5,
    /**
     * @generated from protobuf enum value: NEED_ASSISTANCE = 6;
     */
    NEED_ASSISTANCE = 6,
    /**
     * @generated from protobuf enum value: COMPLETED = 7;
     */
    COMPLETED = 7
}
// @generated message type with reflection information, may provide speed optimized methods
class Dispatch$Type extends MessageType<Dispatch> {
    constructor() {
        super("resources.dispatch.Dispatch", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "50" } } } },
            { no: 5, name: "status", kind: "message", T: () => DispatchStatus },
            { no: 6, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "255" } } } },
            { no: 7, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "1024" } } } },
            { no: 8, name: "attributes", kind: "message", T: () => Attributes },
            { no: 9, name: "marker", kind: "message", T: () => DispatchMarker },
            { no: 10, name: "anon", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "user_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "user", kind: "message", T: () => UserShort },
            { no: 13, name: "units", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DispatchAssignment }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.dispatch.Dispatch
 */
export const Dispatch = new Dispatch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Attributes$Type extends MessageType<Attributes> {
    constructor() {
        super("resources.dispatch.Attributes", [
            { no: 1, name: "list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.dispatch.Attributes
 */
export const Attributes = new Attributes$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchAssignment$Type extends MessageType<DispatchAssignment> {
    constructor() {
        super("resources.dispatch.DispatchAssignment", [
            { no: 1, name: "dispatch_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "unit_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "unit", kind: "message", T: () => Unit }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.dispatch.DispatchAssignment
 */
export const DispatchAssignment = new DispatchAssignment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchStatus$Type extends MessageType<DispatchStatus> {
    constructor() {
        super("resources.dispatch.DispatchStatus", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "dispatch_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "unit_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "status", kind: "enum", T: () => ["resources.dispatch.DISPATCH_STATUS", DISPATCH_STATUS], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 6, name: "reason", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "255" } } } },
            { no: 7, name: "code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 8, name: "user_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 9, name: "user", kind: "message", T: () => UserShort }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.dispatch.DispatchStatus
 */
export const DispatchStatus = new DispatchStatus$Type();
