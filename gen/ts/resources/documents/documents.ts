// @generated by protobuf-ts 2.9.4 with parameter optimize_speed,long_type_bigint
// @generated from protobuf file "resources/documents/documents.proto" (package "resources.documents", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { UserShort } from "../users/users";
import { Category } from "./category";
import { Timestamp } from "../timestamp/timestamp";
/**
 * @generated from protobuf message resources.documents.Document
 */
export interface Document {
    /**
     * @generated from protobuf field: uint64 id = 1 [jstype = JS_STRING];
     */
    id: string;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp deleted_at = 4;
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 category_id = 5 [jstype = JS_STRING];
     */
    categoryId?: string;
    /**
     * @generated from protobuf field: optional resources.documents.Category category = 6;
     */
    category?: Category; // @gotags: alias:"category"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string title = 7;
     */
    title: string;
    /**
     * @generated from protobuf field: resources.documents.DocContentType content_type = 8;
     */
    contentType: DocContentType; // @gotags: alias:"content_type"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string content = 9;
     */
    content: string;
    /**
     * @sanitize
     *
     * @generated from protobuf field: optional string data = 10;
     */
    data?: string; // @gotags: alias:"data"
    /**
     * @generated from protobuf field: optional int32 creator_id = 11;
     */
    creatorId?: number; // @gotags: alias:"creator_id"
    /**
     * @generated from protobuf field: optional resources.users.UserShort creator = 12;
     */
    creator?: UserShort; // @gotags: alias:"creator"
    /**
     * @generated from protobuf field: string creator_job = 13;
     */
    creatorJob: string;
    /**
     * @sanitize
     *
     * @generated from protobuf field: string state = 14;
     */
    state: string;
    /**
     * @generated from protobuf field: bool closed = 15;
     */
    closed: boolean;
    /**
     * @generated from protobuf field: bool public = 16;
     */
    public: boolean;
    /**
     * @generated from protobuf field: optional uint64 template_id = 17 [jstype = JS_STRING];
     */
    templateId?: string;
}
/**
 * @generated from protobuf message resources.documents.DocumentShort
 */
export interface DocumentShort {
    /**
     * @generated from protobuf field: uint64 id = 1 [jstype = JS_STRING];
     */
    id: string;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp deleted_at = 4;
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional uint64 category_id = 5 [jstype = JS_STRING];
     */
    categoryId?: string;
    /**
     * @generated from protobuf field: optional resources.documents.Category category = 6;
     */
    category?: Category; // @gotags: alias:"category"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string title = 7;
     */
    title: string;
    /**
     * @generated from protobuf field: resources.documents.DocContentType content_type = 8;
     */
    contentType: DocContentType; // @gotags: alias:"content_type"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string content = 9;
     */
    content: string;
    /**
     * @generated from protobuf field: optional int32 creator_id = 10;
     */
    creatorId?: number; // @gotags: alias:"creator_id"
    /**
     * @generated from protobuf field: optional resources.users.UserShort creator = 11;
     */
    creator?: UserShort; // @gotags: alias:"creator"
    /**
     * @generated from protobuf field: string creator_job = 12;
     */
    creatorJob: string; // @gotags: alias:"creator_job"
    /**
     * @sanitize
     *
     * @generated from protobuf field: string state = 13;
     */
    state: string; // @gotags: alias:"state"
    /**
     * @generated from protobuf field: bool closed = 14;
     */
    closed: boolean;
    /**
     * @generated from protobuf field: bool public = 15;
     */
    public: boolean;
}
/**
 * @generated from protobuf message resources.documents.DocumentReference
 */
export interface DocumentReference {
    /**
     * @generated from protobuf field: optional uint64 id = 1 [jstype = JS_STRING];
     */
    id?: string;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 source_document_id = 3 [jstype = JS_STRING];
     */
    sourceDocumentId: string; // @gotags: alias:"source_document_id"
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort source_document = 4;
     */
    sourceDocument?: DocumentShort; // @gotags: alias:"source_document"
    /**
     * @generated from protobuf field: resources.documents.DocReference reference = 5;
     */
    reference: DocReference; // @gotags: alias:"reference"
    /**
     * @generated from protobuf field: uint64 target_document_id = 6 [jstype = JS_STRING];
     */
    targetDocumentId: string; // @gotags: alias:"target_document_id"
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort target_document = 7;
     */
    targetDocument?: DocumentShort; // @gotags: alias:"target_document"
    /**
     * @generated from protobuf field: optional int32 creator_id = 8;
     */
    creatorId?: number; // @gotags: alias:"creator_id"
    /**
     * @generated from protobuf field: optional resources.users.UserShort creator = 9;
     */
    creator?: UserShort; // @gotags: alias:"ref_creator"
}
/**
 * @generated from protobuf message resources.documents.DocumentRelation
 */
export interface DocumentRelation {
    /**
     * @generated from protobuf field: optional uint64 id = 1 [jstype = JS_STRING];
     */
    id?: string;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 document_id = 3 [jstype = JS_STRING];
     */
    documentId: string;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort document = 4;
     */
    document?: DocumentShort; // @gotags: alias:"document"
    /**
     * @generated from protobuf field: int32 source_user_id = 5;
     */
    sourceUserId: number; // @gotags: alias:"source_user_id"
    /**
     * @generated from protobuf field: optional resources.users.UserShort source_user = 6;
     */
    sourceUser?: UserShort; // @gotags: alias:"source_user"
    /**
     * @generated from protobuf field: resources.documents.DocRelation relation = 7;
     */
    relation: DocRelation; // @gotags: alias:"relation"
    /**
     * @generated from protobuf field: int32 target_user_id = 8;
     */
    targetUserId: number; // @gotags: alias:"target_user_id"
    /**
     * @generated from protobuf field: optional resources.users.UserShort target_user = 9;
     */
    targetUser?: UserShort; // @gotags: alias:"target_user"
}
/**
 * @generated from protobuf enum resources.documents.DocContentType
 */
export enum DocContentType {
    /**
     * @generated from protobuf enum value: DOC_CONTENT_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: DOC_CONTENT_TYPE_HTML = 1;
     */
    HTML = 1,
    /**
     * @generated from protobuf enum value: DOC_CONTENT_TYPE_PLAIN = 2;
     */
    PLAIN = 2
}
/**
 * @generated from protobuf enum resources.documents.DocReference
 */
export enum DocReference {
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_LINKED = 1;
     */
    LINKED = 1,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_SOLVES = 2;
     */
    SOLVES = 2,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_CLOSES = 3;
     */
    CLOSES = 3,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_DEPRECATES = 4;
     */
    DEPRECATES = 4
}
/**
 * @generated from protobuf enum resources.documents.DocRelation
 */
export enum DocRelation {
    /**
     * @generated from protobuf enum value: DOC_RELATION_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: DOC_RELATION_MENTIONED = 1;
     */
    MENTIONED = 1,
    /**
     * @generated from protobuf enum value: DOC_RELATION_TARGETS = 2;
     */
    TARGETS = 2,
    /**
     * @generated from protobuf enum value: DOC_RELATION_CAUSED = 3;
     */
    CAUSED = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class Document$Type extends MessageType<Document> {
    constructor() {
        super("resources.documents.Document", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "category_id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/ },
            { no: 6, name: "category", kind: "message", T: () => Category },
            { no: 7, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "1024" } } } },
            { no: 8, name: "content_type", kind: "enum", T: () => ["resources.documents.DocContentType", DocContentType, "DOC_CONTENT_TYPE_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 9, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "20", maxBytes: "1750000" } } } },
            { no: 10, name: "data", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "1000000" } } } },
            { no: 11, name: "creator_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "creator", kind: "message", T: () => UserShort },
            { no: 13, name: "creator_job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 14, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "32" } } } },
            { no: 15, name: "closed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "public", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "template_id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
    create(value?: PartialMessage<Document>): Document {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "0";
        message.title = "";
        message.contentType = 0;
        message.content = "";
        message.creatorJob = "";
        message.state = "";
        message.closed = false;
        message.public = false;
        if (value !== undefined)
            reflectionMergePartial<Document>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Document): Document {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id = 1 [jstype = JS_STRING];*/ 1:
                    message.id = reader.uint64().toString();
                    break;
                case /* resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* optional resources.timestamp.Timestamp updated_at */ 3:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                case /* optional resources.timestamp.Timestamp deleted_at */ 4:
                    message.deletedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deletedAt);
                    break;
                case /* optional uint64 category_id = 5 [jstype = JS_STRING];*/ 5:
                    message.categoryId = reader.uint64().toString();
                    break;
                case /* optional resources.documents.Category category */ 6:
                    message.category = Category.internalBinaryRead(reader, reader.uint32(), options, message.category);
                    break;
                case /* string title */ 7:
                    message.title = reader.string();
                    break;
                case /* resources.documents.DocContentType content_type */ 8:
                    message.contentType = reader.int32();
                    break;
                case /* string content */ 9:
                    message.content = reader.string();
                    break;
                case /* optional string data */ 10:
                    message.data = reader.string();
                    break;
                case /* optional int32 creator_id */ 11:
                    message.creatorId = reader.int32();
                    break;
                case /* optional resources.users.UserShort creator */ 12:
                    message.creator = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.creator);
                    break;
                case /* string creator_job */ 13:
                    message.creatorJob = reader.string();
                    break;
                case /* string state */ 14:
                    message.state = reader.string();
                    break;
                case /* bool closed */ 15:
                    message.closed = reader.bool();
                    break;
                case /* bool public */ 16:
                    message.public = reader.bool();
                    break;
                case /* optional uint64 template_id = 17 [jstype = JS_STRING];*/ 17:
                    message.templateId = reader.uint64().toString();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Document, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1 [jstype = JS_STRING]; */
        if (message.id !== "0")
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp updated_at = 3; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp deleted_at = 4; */
        if (message.deletedAt)
            Timestamp.internalBinaryWrite(message.deletedAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 category_id = 5 [jstype = JS_STRING]; */
        if (message.categoryId !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.categoryId);
        /* optional resources.documents.Category category = 6; */
        if (message.category)
            Category.internalBinaryWrite(message.category, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string title = 7; */
        if (message.title !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.title);
        /* resources.documents.DocContentType content_type = 8; */
        if (message.contentType !== 0)
            writer.tag(8, WireType.Varint).int32(message.contentType);
        /* string content = 9; */
        if (message.content !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.content);
        /* optional string data = 10; */
        if (message.data !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.data);
        /* optional int32 creator_id = 11; */
        if (message.creatorId !== undefined)
            writer.tag(11, WireType.Varint).int32(message.creatorId);
        /* optional resources.users.UserShort creator = 12; */
        if (message.creator)
            UserShort.internalBinaryWrite(message.creator, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* string creator_job = 13; */
        if (message.creatorJob !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.creatorJob);
        /* string state = 14; */
        if (message.state !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.state);
        /* bool closed = 15; */
        if (message.closed !== false)
            writer.tag(15, WireType.Varint).bool(message.closed);
        /* bool public = 16; */
        if (message.public !== false)
            writer.tag(16, WireType.Varint).bool(message.public);
        /* optional uint64 template_id = 17 [jstype = JS_STRING]; */
        if (message.templateId !== undefined)
            writer.tag(17, WireType.Varint).uint64(message.templateId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.Document
 */
export const Document = new Document$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentShort$Type extends MessageType<DocumentShort> {
    constructor() {
        super("resources.documents.DocumentShort", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "category_id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/ },
            { no: 6, name: "category", kind: "message", T: () => Category },
            { no: 7, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minLen: "3", maxLen: "1024" } } } },
            { no: 8, name: "content_type", kind: "enum", T: () => ["resources.documents.DocContentType", DocContentType, "DOC_CONTENT_TYPE_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 9, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "1024" } } } },
            { no: 10, name: "creator_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "creator", kind: "message", T: () => UserShort },
            { no: 12, name: "creator_job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 13, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "32" } } } },
            { no: 14, name: "closed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "public", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<DocumentShort>): DocumentShort {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "0";
        message.title = "";
        message.contentType = 0;
        message.content = "";
        message.creatorJob = "";
        message.state = "";
        message.closed = false;
        message.public = false;
        if (value !== undefined)
            reflectionMergePartial<DocumentShort>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocumentShort): DocumentShort {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id = 1 [jstype = JS_STRING];*/ 1:
                    message.id = reader.uint64().toString();
                    break;
                case /* resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* optional resources.timestamp.Timestamp updated_at */ 3:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                case /* optional resources.timestamp.Timestamp deleted_at */ 4:
                    message.deletedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deletedAt);
                    break;
                case /* optional uint64 category_id = 5 [jstype = JS_STRING];*/ 5:
                    message.categoryId = reader.uint64().toString();
                    break;
                case /* optional resources.documents.Category category */ 6:
                    message.category = Category.internalBinaryRead(reader, reader.uint32(), options, message.category);
                    break;
                case /* string title */ 7:
                    message.title = reader.string();
                    break;
                case /* resources.documents.DocContentType content_type */ 8:
                    message.contentType = reader.int32();
                    break;
                case /* string content */ 9:
                    message.content = reader.string();
                    break;
                case /* optional int32 creator_id */ 10:
                    message.creatorId = reader.int32();
                    break;
                case /* optional resources.users.UserShort creator */ 11:
                    message.creator = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.creator);
                    break;
                case /* string creator_job */ 12:
                    message.creatorJob = reader.string();
                    break;
                case /* string state */ 13:
                    message.state = reader.string();
                    break;
                case /* bool closed */ 14:
                    message.closed = reader.bool();
                    break;
                case /* bool public */ 15:
                    message.public = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DocumentShort, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1 [jstype = JS_STRING]; */
        if (message.id !== "0")
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp updated_at = 3; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp deleted_at = 4; */
        if (message.deletedAt)
            Timestamp.internalBinaryWrite(message.deletedAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 category_id = 5 [jstype = JS_STRING]; */
        if (message.categoryId !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.categoryId);
        /* optional resources.documents.Category category = 6; */
        if (message.category)
            Category.internalBinaryWrite(message.category, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string title = 7; */
        if (message.title !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.title);
        /* resources.documents.DocContentType content_type = 8; */
        if (message.contentType !== 0)
            writer.tag(8, WireType.Varint).int32(message.contentType);
        /* string content = 9; */
        if (message.content !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.content);
        /* optional int32 creator_id = 10; */
        if (message.creatorId !== undefined)
            writer.tag(10, WireType.Varint).int32(message.creatorId);
        /* optional resources.users.UserShort creator = 11; */
        if (message.creator)
            UserShort.internalBinaryWrite(message.creator, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* string creator_job = 12; */
        if (message.creatorJob !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.creatorJob);
        /* string state = 13; */
        if (message.state !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.state);
        /* bool closed = 14; */
        if (message.closed !== false)
            writer.tag(14, WireType.Varint).bool(message.closed);
        /* bool public = 15; */
        if (message.public !== false)
            writer.tag(15, WireType.Varint).bool(message.public);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.DocumentShort
 */
export const DocumentShort = new DocumentShort$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentReference$Type extends MessageType<DocumentReference> {
    constructor() {
        super("resources.documents.DocumentReference", [
            { no: 1, name: "id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "source_document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 4, name: "source_document", kind: "message", T: () => DocumentShort },
            { no: 5, name: "reference", kind: "enum", T: () => ["resources.documents.DocReference", DocReference, "DOC_REFERENCE_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 6, name: "target_document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 7, name: "target_document", kind: "message", T: () => DocumentShort },
            { no: 8, name: "creator_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "creator", kind: "message", T: () => UserShort }
        ]);
    }
    create(value?: PartialMessage<DocumentReference>): DocumentReference {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.sourceDocumentId = "0";
        message.reference = 0;
        message.targetDocumentId = "0";
        if (value !== undefined)
            reflectionMergePartial<DocumentReference>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocumentReference): DocumentReference {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 id = 1 [jstype = JS_STRING];*/ 1:
                    message.id = reader.uint64().toString();
                    break;
                case /* optional resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 source_document_id = 3 [jstype = JS_STRING];*/ 3:
                    message.sourceDocumentId = reader.uint64().toString();
                    break;
                case /* optional resources.documents.DocumentShort source_document */ 4:
                    message.sourceDocument = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.sourceDocument);
                    break;
                case /* resources.documents.DocReference reference */ 5:
                    message.reference = reader.int32();
                    break;
                case /* uint64 target_document_id = 6 [jstype = JS_STRING];*/ 6:
                    message.targetDocumentId = reader.uint64().toString();
                    break;
                case /* optional resources.documents.DocumentShort target_document */ 7:
                    message.targetDocument = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.targetDocument);
                    break;
                case /* optional int32 creator_id */ 8:
                    message.creatorId = reader.int32();
                    break;
                case /* optional resources.users.UserShort creator */ 9:
                    message.creator = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.creator);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DocumentReference, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 id = 1 [jstype = JS_STRING]; */
        if (message.id !== undefined)
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* optional resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* uint64 source_document_id = 3 [jstype = JS_STRING]; */
        if (message.sourceDocumentId !== "0")
            writer.tag(3, WireType.Varint).uint64(message.sourceDocumentId);
        /* optional resources.documents.DocumentShort source_document = 4; */
        if (message.sourceDocument)
            DocumentShort.internalBinaryWrite(message.sourceDocument, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* resources.documents.DocReference reference = 5; */
        if (message.reference !== 0)
            writer.tag(5, WireType.Varint).int32(message.reference);
        /* uint64 target_document_id = 6 [jstype = JS_STRING]; */
        if (message.targetDocumentId !== "0")
            writer.tag(6, WireType.Varint).uint64(message.targetDocumentId);
        /* optional resources.documents.DocumentShort target_document = 7; */
        if (message.targetDocument)
            DocumentShort.internalBinaryWrite(message.targetDocument, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 creator_id = 8; */
        if (message.creatorId !== undefined)
            writer.tag(8, WireType.Varint).int32(message.creatorId);
        /* optional resources.users.UserShort creator = 9; */
        if (message.creator)
            UserShort.internalBinaryWrite(message.creator, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.DocumentReference
 */
export const DocumentReference = new DocumentReference$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentRelation$Type extends MessageType<DocumentRelation> {
    constructor() {
        super("resources.documents.DocumentRelation", [
            { no: 1, name: "id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "document_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 4, name: "document", kind: "message", T: () => DocumentShort },
            { no: 5, name: "source_user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 6, name: "source_user", kind: "message", T: () => UserShort },
            { no: 7, name: "relation", kind: "enum", T: () => ["resources.documents.DocRelation", DocRelation, "DOC_RELATION_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 8, name: "target_user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 9, name: "target_user", kind: "message", T: () => UserShort }
        ]);
    }
    create(value?: PartialMessage<DocumentRelation>): DocumentRelation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentId = "0";
        message.sourceUserId = 0;
        message.relation = 0;
        message.targetUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<DocumentRelation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocumentRelation): DocumentRelation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 id = 1 [jstype = JS_STRING];*/ 1:
                    message.id = reader.uint64().toString();
                    break;
                case /* optional resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* uint64 document_id = 3 [jstype = JS_STRING];*/ 3:
                    message.documentId = reader.uint64().toString();
                    break;
                case /* optional resources.documents.DocumentShort document */ 4:
                    message.document = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.document);
                    break;
                case /* int32 source_user_id */ 5:
                    message.sourceUserId = reader.int32();
                    break;
                case /* optional resources.users.UserShort source_user */ 6:
                    message.sourceUser = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.sourceUser);
                    break;
                case /* resources.documents.DocRelation relation */ 7:
                    message.relation = reader.int32();
                    break;
                case /* int32 target_user_id */ 8:
                    message.targetUserId = reader.int32();
                    break;
                case /* optional resources.users.UserShort target_user */ 9:
                    message.targetUser = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.targetUser);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DocumentRelation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 id = 1 [jstype = JS_STRING]; */
        if (message.id !== undefined)
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* optional resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* uint64 document_id = 3 [jstype = JS_STRING]; */
        if (message.documentId !== "0")
            writer.tag(3, WireType.Varint).uint64(message.documentId);
        /* optional resources.documents.DocumentShort document = 4; */
        if (message.document)
            DocumentShort.internalBinaryWrite(message.document, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 source_user_id = 5; */
        if (message.sourceUserId !== 0)
            writer.tag(5, WireType.Varint).int32(message.sourceUserId);
        /* optional resources.users.UserShort source_user = 6; */
        if (message.sourceUser)
            UserShort.internalBinaryWrite(message.sourceUser, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* resources.documents.DocRelation relation = 7; */
        if (message.relation !== 0)
            writer.tag(7, WireType.Varint).int32(message.relation);
        /* int32 target_user_id = 8; */
        if (message.targetUserId !== 0)
            writer.tag(8, WireType.Varint).int32(message.targetUserId);
        /* optional resources.users.UserShort target_user = 9; */
        if (message.targetUser)
            UserShort.internalBinaryWrite(message.targetUser, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.DocumentRelation
 */
export const DocumentRelation = new DocumentRelation$Type();
