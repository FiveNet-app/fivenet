// @generated by protobuf-ts 2.9.2 with parameter optimize_code_size,long_type_bigint
// @generated from protobuf file "resources/centrum/dispatches.proto" (package "resources.centrum", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { UserShort } from "../users/users";
import { Unit } from "./units";
import { User } from "../users/users";
import { Attributes } from "./general";
import { Timestamp } from "../timestamp/timestamp";
/**
 * @generated from protobuf message resources.centrum.Dispatch
 */
export interface Dispatch {
    /**
     * @generated from protobuf field: uint64 id = 1 [jstype = JS_STRING];
     */
    id: string; // @gotags: sql:"primary_key" alias:"id"
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: string job = 4;
     */
    job: string;
    /**
     * @generated from protobuf field: optional resources.centrum.DispatchStatus status = 5;
     */
    status?: DispatchStatus;
    /**
     * @sanitize
     *
     * @generated from protobuf field: string message = 7;
     */
    message: string;
    /**
     * @sanitize
     *
     * @generated from protobuf field: optional string description = 8;
     */
    description?: string;
    /**
     * @generated from protobuf field: optional resources.centrum.Attributes attributes = 9;
     */
    attributes?: Attributes;
    /**
     * @generated from protobuf field: double x = 10;
     */
    x: number;
    /**
     * @generated from protobuf field: double y = 11;
     */
    y: number;
    /**
     * @sanitize
     *
     * @generated from protobuf field: optional string postal = 12;
     */
    postal?: string;
    /**
     * @generated from protobuf field: bool anon = 13;
     */
    anon: boolean;
    /**
     * @generated from protobuf field: optional int32 creator_id = 14;
     */
    creatorId?: number;
    /**
     * @generated from protobuf field: optional resources.users.User creator = 15;
     */
    creator?: User;
    /**
     * @generated from protobuf field: repeated resources.centrum.DispatchAssignment units = 16;
     */
    units: DispatchAssignment[];
}
/**
 * @generated from protobuf message resources.centrum.DispatchAssignments
 */
export interface DispatchAssignments {
    /**
     * @generated from protobuf field: uint64 dispatch_id = 1 [jstype = JS_STRING];
     */
    dispatchId: string;
    /**
     * @generated from protobuf field: string job = 2;
     */
    job: string;
    /**
     * @generated from protobuf field: repeated resources.centrum.DispatchAssignment units = 3;
     */
    units: DispatchAssignment[];
}
/**
 * @generated from protobuf message resources.centrum.DispatchAssignment
 */
export interface DispatchAssignment {
    /**
     * @generated from protobuf field: uint64 dispatch_id = 1 [jstype = JS_STRING];
     */
    dispatchId: string; // @gotags: sql:"primary_key" alias:"dispatch_id"
    /**
     * @generated from protobuf field: uint64 unit_id = 2 [jstype = JS_STRING];
     */
    unitId: string; // @gotags: sql:"primary_key" alias:"unit_id"
    /**
     * @generated from protobuf field: optional resources.centrum.Unit unit = 3;
     */
    unit?: Unit;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 4;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp expires_at = 5;
     */
    expiresAt?: Timestamp;
}
/**
 * @generated from protobuf message resources.centrum.DispatchStatus
 */
export interface DispatchStatus {
    /**
     * @generated from protobuf field: uint64 id = 1 [jstype = JS_STRING];
     */
    id: string; // @gotags: sql:"primary_key" alias:"id"
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 dispatch_id = 3 [jstype = JS_STRING];
     */
    dispatchId: string;
    /**
     * @generated from protobuf field: optional uint64 unit_id = 4 [jstype = JS_STRING];
     */
    unitId?: string;
    /**
     * @generated from protobuf field: optional resources.centrum.Unit unit = 5;
     */
    unit?: Unit;
    /**
     * @generated from protobuf field: resources.centrum.StatusDispatch status = 6;
     */
    status: StatusDispatch;
    /**
     * @sanitize
     *
     * @generated from protobuf field: optional string reason = 7;
     */
    reason?: string;
    /**
     * @sanitize
     *
     * @generated from protobuf field: optional string code = 8;
     */
    code?: string;
    /**
     * @generated from protobuf field: optional int32 user_id = 9;
     */
    userId?: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort user = 10;
     */
    user?: UserShort;
    /**
     * @generated from protobuf field: optional double x = 11;
     */
    x?: number;
    /**
     * @generated from protobuf field: optional double y = 12;
     */
    y?: number;
    /**
     * @sanitize
     *
     * @generated from protobuf field: optional string postal = 13;
     */
    postal?: string;
}
/**
 * @generated from protobuf enum resources.centrum.StatusDispatch
 */
export enum StatusDispatch {
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_NEW = 1;
     */
    NEW = 1,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_UNASSIGNED = 2;
     */
    UNASSIGNED = 2,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_UPDATED = 3;
     */
    UPDATED = 3,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_UNIT_ASSIGNED = 4;
     */
    UNIT_ASSIGNED = 4,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_UNIT_UNASSIGNED = 5;
     */
    UNIT_UNASSIGNED = 5,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_UNIT_ACCEPTED = 6;
     */
    UNIT_ACCEPTED = 6,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_UNIT_DECLINED = 7;
     */
    UNIT_DECLINED = 7,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_EN_ROUTE = 8;
     */
    EN_ROUTE = 8,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_ON_SCENE = 9;
     */
    ON_SCENE = 9,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_NEED_ASSISTANCE = 10;
     */
    NEED_ASSISTANCE = 10,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_COMPLETED = 11;
     */
    COMPLETED = 11,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_CANCELLED = 12;
     */
    CANCELLED = 12,
    /**
     * @generated from protobuf enum value: STATUS_DISPATCH_ARCHIVED = 13;
     */
    ARCHIVED = 13
}
/**
 * @generated from protobuf enum resources.centrum.TakeDispatchResp
 */
export enum TakeDispatchResp {
    /**
     * @generated from protobuf enum value: TAKE_DISPATCH_RESP_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: TAKE_DISPATCH_RESP_TIMEOUT = 1;
     */
    TIMEOUT = 1,
    /**
     * @generated from protobuf enum value: TAKE_DISPATCH_RESP_ACCEPTED = 2;
     */
    ACCEPTED = 2,
    /**
     * @generated from protobuf enum value: TAKE_DISPATCH_RESP_DECLINED = 3;
     */
    DECLINED = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class Dispatch$Type extends MessageType<Dispatch> {
    constructor() {
        super("resources.centrum.Dispatch", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 5, name: "status", kind: "message", T: () => DispatchStatus },
            { no: 7, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "255" } } } },
            { no: 8, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "1024" } } } },
            { no: 9, name: "attributes", kind: "message", T: () => Attributes },
            { no: 10, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 12, name: "postal", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "48" } } } },
            { no: 13, name: "anon", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "creator_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 15, name: "creator", kind: "message", T: () => User },
            { no: 16, name: "units", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DispatchAssignment }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.centrum.Dispatch
 */
export const Dispatch = new Dispatch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchAssignments$Type extends MessageType<DispatchAssignments> {
    constructor() {
        super("resources.centrum.DispatchAssignments", [
            { no: 1, name: "dispatch_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 3, name: "units", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DispatchAssignment }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.centrum.DispatchAssignments
 */
export const DispatchAssignments = new DispatchAssignments$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchAssignment$Type extends MessageType<DispatchAssignment> {
    constructor() {
        super("resources.centrum.DispatchAssignment", [
            { no: 1, name: "dispatch_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "unit_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "unit", kind: "message", T: () => Unit },
            { no: 4, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "expires_at", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.centrum.DispatchAssignment
 */
export const DispatchAssignment = new DispatchAssignment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchStatus$Type extends MessageType<DispatchStatus> {
    constructor() {
        super("resources.centrum.DispatchStatus", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "dispatch_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 4, name: "unit_id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/ },
            { no: 5, name: "unit", kind: "message", T: () => Unit },
            { no: 6, name: "status", kind: "enum", T: () => ["resources.centrum.StatusDispatch", StatusDispatch, "STATUS_DISPATCH_"], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 7, name: "reason", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "255" } } } },
            { no: 8, name: "code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "20" } } } },
            { no: 9, name: "user_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "validate.rules": { int32: { gt: 0 } } } },
            { no: 10, name: "user", kind: "message", T: () => UserShort },
            { no: 11, name: "x", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 12, name: "y", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 13, name: "postal", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxLen: "48" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message resources.centrum.DispatchStatus
 */
export const DispatchStatus = new DispatchStatus$Type();
