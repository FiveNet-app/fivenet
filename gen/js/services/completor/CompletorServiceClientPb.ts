/**
 * @fileoverview gRPC-Web generated client stub for services.completor
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: services/completor/completor.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as services_completor_completor_pb from '../../services/completor/completor_pb';


export class CompletorServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCompleteCitizens = new grpcWeb.MethodDescriptor(
    '/services.completor.CompletorService/CompleteCitizens',
    grpcWeb.MethodType.UNARY,
    services_completor_completor_pb.CompleteCitizensRequest,
    services_completor_completor_pb.CompleteCitizensRespoonse,
    (request: services_completor_completor_pb.CompleteCitizensRequest) => {
      return request.serializeBinary();
    },
    services_completor_completor_pb.CompleteCitizensRespoonse.deserializeBinary
  );

  completeCitizens(
    request: services_completor_completor_pb.CompleteCitizensRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_completor_completor_pb.CompleteCitizensRespoonse>;

  completeCitizens(
    request: services_completor_completor_pb.CompleteCitizensRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_completor_completor_pb.CompleteCitizensRespoonse) => void): grpcWeb.ClientReadableStream<services_completor_completor_pb.CompleteCitizensRespoonse>;

  completeCitizens(
    request: services_completor_completor_pb.CompleteCitizensRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_completor_completor_pb.CompleteCitizensRespoonse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.completor.CompletorService/CompleteCitizens',
        request,
        metadata || {},
        this.methodDescriptorCompleteCitizens,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.completor.CompletorService/CompleteCitizens',
    request,
    metadata || {},
    this.methodDescriptorCompleteCitizens);
  }

  methodDescriptorCompleteJobs = new grpcWeb.MethodDescriptor(
    '/services.completor.CompletorService/CompleteJobs',
    grpcWeb.MethodType.UNARY,
    services_completor_completor_pb.CompleteJobsRequest,
    services_completor_completor_pb.CompleteJobsResponse,
    (request: services_completor_completor_pb.CompleteJobsRequest) => {
      return request.serializeBinary();
    },
    services_completor_completor_pb.CompleteJobsResponse.deserializeBinary
  );

  completeJobs(
    request: services_completor_completor_pb.CompleteJobsRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_completor_completor_pb.CompleteJobsResponse>;

  completeJobs(
    request: services_completor_completor_pb.CompleteJobsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_completor_completor_pb.CompleteJobsResponse) => void): grpcWeb.ClientReadableStream<services_completor_completor_pb.CompleteJobsResponse>;

  completeJobs(
    request: services_completor_completor_pb.CompleteJobsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_completor_completor_pb.CompleteJobsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.completor.CompletorService/CompleteJobs',
        request,
        metadata || {},
        this.methodDescriptorCompleteJobs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.completor.CompletorService/CompleteJobs',
    request,
    metadata || {},
    this.methodDescriptorCompleteJobs);
  }

  methodDescriptorCompleteDocumentCategories = new grpcWeb.MethodDescriptor(
    '/services.completor.CompletorService/CompleteDocumentCategories',
    grpcWeb.MethodType.UNARY,
    services_completor_completor_pb.CompleteDocumentCategoriesRequest,
    services_completor_completor_pb.CompleteDocumentCategoriesResponse,
    (request: services_completor_completor_pb.CompleteDocumentCategoriesRequest) => {
      return request.serializeBinary();
    },
    services_completor_completor_pb.CompleteDocumentCategoriesResponse.deserializeBinary
  );

  completeDocumentCategories(
    request: services_completor_completor_pb.CompleteDocumentCategoriesRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_completor_completor_pb.CompleteDocumentCategoriesResponse>;

  completeDocumentCategories(
    request: services_completor_completor_pb.CompleteDocumentCategoriesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_completor_completor_pb.CompleteDocumentCategoriesResponse) => void): grpcWeb.ClientReadableStream<services_completor_completor_pb.CompleteDocumentCategoriesResponse>;

  completeDocumentCategories(
    request: services_completor_completor_pb.CompleteDocumentCategoriesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_completor_completor_pb.CompleteDocumentCategoriesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.completor.CompletorService/CompleteDocumentCategories',
        request,
        metadata || {},
        this.methodDescriptorCompleteDocumentCategories,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.completor.CompletorService/CompleteDocumentCategories',
    request,
    metadata || {},
    this.methodDescriptorCompleteDocumentCategories);
  }

}

