/**
 * @fileoverview gRPC-Web generated client stub for users
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: services/users/users.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as services_users_users_pb from '../../services/users/users_pb';


export class UsersServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorFindUsers = new grpcWeb.MethodDescriptor(
    '/users.UsersService/FindUsers',
    grpcWeb.MethodType.UNARY,
    services_users_users_pb.FindUsersRequest,
    services_users_users_pb.FindUsersResponse,
    (request: services_users_users_pb.FindUsersRequest) => {
      return request.serializeBinary();
    },
    services_users_users_pb.FindUsersResponse.deserializeBinary
  );

  findUsers(
    request: services_users_users_pb.FindUsersRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_users_users_pb.FindUsersResponse>;

  findUsers(
    request: services_users_users_pb.FindUsersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_users_users_pb.FindUsersResponse) => void): grpcWeb.ClientReadableStream<services_users_users_pb.FindUsersResponse>;

  findUsers(
    request: services_users_users_pb.FindUsersRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_users_users_pb.FindUsersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/users.UsersService/FindUsers',
        request,
        metadata || {},
        this.methodDescriptorFindUsers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/users.UsersService/FindUsers',
    request,
    metadata || {},
    this.methodDescriptorFindUsers);
  }

  methodDescriptorGetUser = new grpcWeb.MethodDescriptor(
    '/users.UsersService/GetUser',
    grpcWeb.MethodType.UNARY,
    services_users_users_pb.GetUserRequest,
    services_users_users_pb.GetUserResponse,
    (request: services_users_users_pb.GetUserRequest) => {
      return request.serializeBinary();
    },
    services_users_users_pb.GetUserResponse.deserializeBinary
  );

  getUser(
    request: services_users_users_pb.GetUserRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_users_users_pb.GetUserResponse>;

  getUser(
    request: services_users_users_pb.GetUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_users_users_pb.GetUserResponse) => void): grpcWeb.ClientReadableStream<services_users_users_pb.GetUserResponse>;

  getUser(
    request: services_users_users_pb.GetUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_users_users_pb.GetUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/users.UsersService/GetUser',
        request,
        metadata || {},
        this.methodDescriptorGetUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/users.UsersService/GetUser',
    request,
    metadata || {},
    this.methodDescriptorGetUser);
  }

  methodDescriptorGetUserActivity = new grpcWeb.MethodDescriptor(
    '/users.UsersService/GetUserActivity',
    grpcWeb.MethodType.UNARY,
    services_users_users_pb.GetUserActivityRequest,
    services_users_users_pb.GetUserActivityResponse,
    (request: services_users_users_pb.GetUserActivityRequest) => {
      return request.serializeBinary();
    },
    services_users_users_pb.GetUserActivityResponse.deserializeBinary
  );

  getUserActivity(
    request: services_users_users_pb.GetUserActivityRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_users_users_pb.GetUserActivityResponse>;

  getUserActivity(
    request: services_users_users_pb.GetUserActivityRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_users_users_pb.GetUserActivityResponse) => void): grpcWeb.ClientReadableStream<services_users_users_pb.GetUserActivityResponse>;

  getUserActivity(
    request: services_users_users_pb.GetUserActivityRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_users_users_pb.GetUserActivityResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/users.UsersService/GetUserActivity',
        request,
        metadata || {},
        this.methodDescriptorGetUserActivity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/users.UsersService/GetUserActivity',
    request,
    metadata || {},
    this.methodDescriptorGetUserActivity);
  }

  methodDescriptorSetUserProps = new grpcWeb.MethodDescriptor(
    '/users.UsersService/SetUserProps',
    grpcWeb.MethodType.UNARY,
    services_users_users_pb.SetUserPropsRequest,
    services_users_users_pb.SetUserPropsResponse,
    (request: services_users_users_pb.SetUserPropsRequest) => {
      return request.serializeBinary();
    },
    services_users_users_pb.SetUserPropsResponse.deserializeBinary
  );

  setUserProps(
    request: services_users_users_pb.SetUserPropsRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_users_users_pb.SetUserPropsResponse>;

  setUserProps(
    request: services_users_users_pb.SetUserPropsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_users_users_pb.SetUserPropsResponse) => void): grpcWeb.ClientReadableStream<services_users_users_pb.SetUserPropsResponse>;

  setUserProps(
    request: services_users_users_pb.SetUserPropsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_users_users_pb.SetUserPropsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/users.UsersService/SetUserProps',
        request,
        metadata || {},
        this.methodDescriptorSetUserProps,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/users.UsersService/SetUserProps',
    request,
    metadata || {},
    this.methodDescriptorSetUserProps);
  }

}

