// source: resources/users/users.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var resources_timestamp_timestamp_pb = require('../../resources/timestamp/timestamp_pb.js');
goog.object.extend(proto, resources_timestamp_timestamp_pb);
goog.exportSymbol('proto.resources.users.License', null, global);
goog.exportSymbol('proto.resources.users.USER_ACTIVITY_TYPE', null, global);
goog.exportSymbol('proto.resources.users.User', null, global);
goog.exportSymbol('proto.resources.users.UserActivity', null, global);
goog.exportSymbol('proto.resources.users.UserJob', null, global);
goog.exportSymbol('proto.resources.users.UserProps', null, global);
goog.exportSymbol('proto.resources.users.UserShort', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resources.users.UserJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resources.users.UserJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resources.users.UserJob.displayName = 'proto.resources.users.UserJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resources.users.UserShort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resources.users.UserShort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resources.users.UserShort.displayName = 'proto.resources.users.UserShort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resources.users.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.resources.users.User.repeatedFields_, null);
};
goog.inherits(proto.resources.users.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resources.users.User.displayName = 'proto.resources.users.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resources.users.License = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resources.users.License, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resources.users.License.displayName = 'proto.resources.users.License';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resources.users.UserProps = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resources.users.UserProps, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resources.users.UserProps.displayName = 'proto.resources.users.UserProps';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resources.users.UserActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resources.users.UserActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resources.users.UserActivity.displayName = 'proto.resources.users.UserActivity';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resources.users.UserJob.prototype.toObject = function(opt_includeInstance) {
  return proto.resources.users.UserJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resources.users.UserJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: jspb.Message.getFieldWithDefault(msg, 1, ""),
    grade: jspb.Message.getFieldWithDefault(msg, 2, 0),
    jobLabel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gradeLabel: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resources.users.UserJob}
 */
proto.resources.users.UserJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resources.users.UserJob;
  return proto.resources.users.UserJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resources.users.UserJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resources.users.UserJob}
 */
proto.resources.users.UserJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJob(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGrade(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobLabel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGradeLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resources.users.UserJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resources.users.UserJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resources.users.UserJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGrade();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getJobLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGradeLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string job = 1;
 * @return {string}
 */
proto.resources.users.UserJob.prototype.getJob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserJob} returns this
 */
proto.resources.users.UserJob.prototype.setJob = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 grade = 2;
 * @return {number}
 */
proto.resources.users.UserJob.prototype.getGrade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.UserJob} returns this
 */
proto.resources.users.UserJob.prototype.setGrade = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string job_label = 3;
 * @return {string}
 */
proto.resources.users.UserJob.prototype.getJobLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserJob} returns this
 */
proto.resources.users.UserJob.prototype.setJobLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string grade_label = 4;
 * @return {string}
 */
proto.resources.users.UserJob.prototype.getGradeLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserJob} returns this
 */
proto.resources.users.UserJob.prototype.setGradeLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resources.users.UserShort.prototype.toObject = function(opt_includeInstance) {
  return proto.resources.users.UserShort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resources.users.UserShort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserShort.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    identifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    job: jspb.Message.getFieldWithDefault(msg, 3, ""),
    jobGrade: jspb.Message.getFieldWithDefault(msg, 4, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resources.users.UserShort}
 */
proto.resources.users.UserShort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resources.users.UserShort;
  return proto.resources.users.UserShort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resources.users.UserShort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resources.users.UserShort}
 */
proto.resources.users.UserShort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJob(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJobGrade(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resources.users.UserShort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resources.users.UserShort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resources.users.UserShort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserShort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getJob();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getJobGrade();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.resources.users.UserShort.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.UserShort} returns this
 */
proto.resources.users.UserShort.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string identifier = 2;
 * @return {string}
 */
proto.resources.users.UserShort.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserShort} returns this
 */
proto.resources.users.UserShort.prototype.setIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string job = 3;
 * @return {string}
 */
proto.resources.users.UserShort.prototype.getJob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserShort} returns this
 */
proto.resources.users.UserShort.prototype.setJob = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 job_grade = 4;
 * @return {number}
 */
proto.resources.users.UserShort.prototype.getJobGrade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.UserShort} returns this
 */
proto.resources.users.UserShort.prototype.setJobGrade = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string firstname = 5;
 * @return {string}
 */
proto.resources.users.UserShort.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserShort} returns this
 */
proto.resources.users.UserShort.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lastname = 6;
 * @return {string}
 */
proto.resources.users.UserShort.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserShort} returns this
 */
proto.resources.users.UserShort.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.resources.users.User.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resources.users.User.prototype.toObject = function(opt_includeInstance) {
  return proto.resources.users.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resources.users.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    identifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    job: jspb.Message.getFieldWithDefault(msg, 3, ""),
    jobGrade: jspb.Message.getFieldWithDefault(msg, 4, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dateofbirth: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sex: jspb.Message.getFieldWithDefault(msg, 8, ""),
    height: jspb.Message.getFieldWithDefault(msg, 9, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 10, ""),
    visum: jspb.Message.getFieldWithDefault(msg, 11, 0),
    playtime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    props: (f = msg.getProps()) && proto.resources.users.UserProps.toObject(includeInstance, f),
    licensesList: jspb.Message.toObjectList(msg.getLicensesList(),
    proto.resources.users.License.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resources.users.User}
 */
proto.resources.users.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resources.users.User;
  return proto.resources.users.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resources.users.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resources.users.User}
 */
proto.resources.users.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJob(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJobGrade(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateofbirth(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSex(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeight(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVisum(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaytime(value);
      break;
    case 13:
      var value = new proto.resources.users.UserProps;
      reader.readMessage(value,proto.resources.users.UserProps.deserializeBinaryFromReader);
      msg.setProps(value);
      break;
    case 14:
      var value = new proto.resources.users.License;
      reader.readMessage(value,proto.resources.users.License.deserializeBinaryFromReader);
      msg.addLicenses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resources.users.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resources.users.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resources.users.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getJob();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getJobGrade();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDateofbirth();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSex();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHeight();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getVisum();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPlaytime();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getProps();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.resources.users.UserProps.serializeBinaryToWriter
    );
  }
  f = message.getLicensesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.resources.users.License.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.resources.users.User.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string identifier = 2;
 * @return {string}
 */
proto.resources.users.User.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string job = 3;
 * @return {string}
 */
proto.resources.users.User.prototype.getJob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setJob = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 job_grade = 4;
 * @return {number}
 */
proto.resources.users.User.prototype.getJobGrade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setJobGrade = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string firstname = 5;
 * @return {string}
 */
proto.resources.users.User.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lastname = 6;
 * @return {string}
 */
proto.resources.users.User.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string dateofbirth = 7;
 * @return {string}
 */
proto.resources.users.User.prototype.getDateofbirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setDateofbirth = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string sex = 8;
 * @return {string}
 */
proto.resources.users.User.prototype.getSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setSex = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string height = 9;
 * @return {string}
 */
proto.resources.users.User.prototype.getHeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setHeight = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string phone_number = 10;
 * @return {string}
 */
proto.resources.users.User.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 visum = 11;
 * @return {number}
 */
proto.resources.users.User.prototype.getVisum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setVisum = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 playtime = 12;
 * @return {number}
 */
proto.resources.users.User.prototype.getPlaytime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.setPlaytime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional UserProps props = 13;
 * @return {?proto.resources.users.UserProps}
 */
proto.resources.users.User.prototype.getProps = function() {
  return /** @type{?proto.resources.users.UserProps} */ (
    jspb.Message.getWrapperField(this, proto.resources.users.UserProps, 13));
};


/**
 * @param {?proto.resources.users.UserProps|undefined} value
 * @return {!proto.resources.users.User} returns this
*/
proto.resources.users.User.prototype.setProps = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.clearProps = function() {
  return this.setProps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resources.users.User.prototype.hasProps = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated License licenses = 14;
 * @return {!Array<!proto.resources.users.License>}
 */
proto.resources.users.User.prototype.getLicensesList = function() {
  return /** @type{!Array<!proto.resources.users.License>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.resources.users.License, 14));
};


/**
 * @param {!Array<!proto.resources.users.License>} value
 * @return {!proto.resources.users.User} returns this
*/
proto.resources.users.User.prototype.setLicensesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.resources.users.License=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resources.users.License}
 */
proto.resources.users.User.prototype.addLicenses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.resources.users.License, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resources.users.User} returns this
 */
proto.resources.users.User.prototype.clearLicensesList = function() {
  return this.setLicensesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resources.users.License.prototype.toObject = function(opt_includeInstance) {
  return proto.resources.users.License.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resources.users.License} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.License.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resources.users.License}
 */
proto.resources.users.License.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resources.users.License;
  return proto.resources.users.License.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resources.users.License} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resources.users.License}
 */
proto.resources.users.License.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resources.users.License.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resources.users.License.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resources.users.License} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.License.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.resources.users.License.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.License} returns this
 */
proto.resources.users.License.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resources.users.UserProps.prototype.toObject = function(opt_includeInstance) {
  return proto.resources.users.UserProps.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resources.users.UserProps} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserProps.toObject = function(includeInstance, msg) {
  var f, obj = {
    wanted: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resources.users.UserProps}
 */
proto.resources.users.UserProps.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resources.users.UserProps;
  return proto.resources.users.UserProps.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resources.users.UserProps} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resources.users.UserProps}
 */
proto.resources.users.UserProps.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWanted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resources.users.UserProps.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resources.users.UserProps.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resources.users.UserProps} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserProps.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWanted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool wanted = 1;
 * @return {boolean}
 */
proto.resources.users.UserProps.prototype.getWanted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.resources.users.UserProps} returns this
 */
proto.resources.users.UserProps.prototype.setWanted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resources.users.UserActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.resources.users.UserActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resources.users.UserActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    createdAt: (f = msg.getCreatedAt()) && resources_timestamp_timestamp_pb.Timestamp.toObject(includeInstance, f),
    targetuser: (f = msg.getTargetuser()) && proto.resources.users.UserShort.toObject(includeInstance, f),
    causeuser: (f = msg.getCauseuser()) && proto.resources.users.UserShort.toObject(includeInstance, f),
    key: jspb.Message.getFieldWithDefault(msg, 6, ""),
    oldvalue: jspb.Message.getFieldWithDefault(msg, 7, ""),
    newvalue: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resources.users.UserActivity}
 */
proto.resources.users.UserActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resources.users.UserActivity;
  return proto.resources.users.UserActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resources.users.UserActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resources.users.UserActivity}
 */
proto.resources.users.UserActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.resources.users.USER_ACTIVITY_TYPE} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new resources_timestamp_timestamp_pb.Timestamp;
      reader.readMessage(value,resources_timestamp_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = new proto.resources.users.UserShort;
      reader.readMessage(value,proto.resources.users.UserShort.deserializeBinaryFromReader);
      msg.setTargetuser(value);
      break;
    case 5:
      var value = new proto.resources.users.UserShort;
      reader.readMessage(value,proto.resources.users.UserShort.deserializeBinaryFromReader);
      msg.setCauseuser(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldvalue(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resources.users.UserActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resources.users.UserActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resources.users.UserActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resources.users.UserActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      resources_timestamp_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTargetuser();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.resources.users.UserShort.serializeBinaryToWriter
    );
  }
  f = message.getCauseuser();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.resources.users.UserShort.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOldvalue();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNewvalue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.resources.users.UserActivity.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional USER_ACTIVITY_TYPE type = 2;
 * @return {!proto.resources.users.USER_ACTIVITY_TYPE}
 */
proto.resources.users.UserActivity.prototype.getType = function() {
  return /** @type {!proto.resources.users.USER_ACTIVITY_TYPE} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.resources.users.USER_ACTIVITY_TYPE} value
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional resources.timestamp.Timestamp created_at = 3;
 * @return {?proto.resources.timestamp.Timestamp}
 */
proto.resources.users.UserActivity.prototype.getCreatedAt = function() {
  return /** @type{?proto.resources.timestamp.Timestamp} */ (
    jspb.Message.getWrapperField(this, resources_timestamp_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.resources.timestamp.Timestamp|undefined} value
 * @return {!proto.resources.users.UserActivity} returns this
*/
proto.resources.users.UserActivity.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resources.users.UserActivity.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UserShort targetUser = 4;
 * @return {?proto.resources.users.UserShort}
 */
proto.resources.users.UserActivity.prototype.getTargetuser = function() {
  return /** @type{?proto.resources.users.UserShort} */ (
    jspb.Message.getWrapperField(this, proto.resources.users.UserShort, 4));
};


/**
 * @param {?proto.resources.users.UserShort|undefined} value
 * @return {!proto.resources.users.UserActivity} returns this
*/
proto.resources.users.UserActivity.prototype.setTargetuser = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.clearTargetuser = function() {
  return this.setTargetuser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resources.users.UserActivity.prototype.hasTargetuser = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UserShort causeUser = 5;
 * @return {?proto.resources.users.UserShort}
 */
proto.resources.users.UserActivity.prototype.getCauseuser = function() {
  return /** @type{?proto.resources.users.UserShort} */ (
    jspb.Message.getWrapperField(this, proto.resources.users.UserShort, 5));
};


/**
 * @param {?proto.resources.users.UserShort|undefined} value
 * @return {!proto.resources.users.UserActivity} returns this
*/
proto.resources.users.UserActivity.prototype.setCauseuser = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.clearCauseuser = function() {
  return this.setCauseuser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resources.users.UserActivity.prototype.hasCauseuser = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string key = 6;
 * @return {string}
 */
proto.resources.users.UserActivity.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string oldValue = 7;
 * @return {string}
 */
proto.resources.users.UserActivity.prototype.getOldvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.setOldvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string newValue = 8;
 * @return {string}
 */
proto.resources.users.UserActivity.prototype.getNewvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.resources.users.UserActivity} returns this
 */
proto.resources.users.UserActivity.prototype.setNewvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * @enum {number}
 */
proto.resources.users.USER_ACTIVITY_TYPE = {
  CHANGED: 0,
  MENTIONED: 1,
  CREATED: 2
};

goog.object.extend(exports, proto.resources.users);
