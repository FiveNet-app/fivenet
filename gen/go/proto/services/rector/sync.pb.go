// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.20.3
// source: services/rector/sync.proto

package rector

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	users "github.com/fivenet-app/fivenet/gen/go/proto/resources/users"
	vehicles "github.com/fivenet-app/fivenet/gen/go/proto/resources/vehicles"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_services_rector_sync_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{0}
}

type GetStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         *DataStatus            `protobuf:"bytes,1,opt,name=users,proto3" json:"users,omitempty"`
	Jobs          *DataStatus            `protobuf:"bytes,2,opt,name=jobs,proto3" json:"jobs,omitempty"`
	Licenses      *DataStatus            `protobuf:"bytes,3,opt,name=licenses,proto3" json:"licenses,omitempty"`
	Vehicles      *DataStatus            `protobuf:"bytes,4,opt,name=vehicles,proto3" json:"vehicles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_services_rector_sync_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{1}
}

func (x *GetStatusResponse) GetUsers() *DataStatus {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetStatusResponse) GetJobs() *DataStatus {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *GetStatusResponse) GetLicenses() *DataStatus {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *GetStatusResponse) GetVehicles() *DataStatus {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

type DataStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalCount    uint64                 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	LastId        uint64                 `protobuf:"varint,2,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataStatus) Reset() {
	*x = DataStatus{}
	mi := &file_services_rector_sync_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStatus) ProtoMessage() {}

func (x *DataStatus) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStatus.ProtoReflect.Descriptor instead.
func (*DataStatus) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{2}
}

func (x *DataStatus) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *DataStatus) GetLastId() uint64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

type SyncRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*SyncRequest_Users
	//	*SyncRequest_Jobs
	//	*SyncRequest_Licenses
	//	*SyncRequest_Vehicles
	Data          isSyncRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	mi := &file_services_rector_sync_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{3}
}

func (x *SyncRequest) GetData() isSyncRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SyncRequest) GetUsers() *DataUsers {
	if x != nil {
		if x, ok := x.Data.(*SyncRequest_Users); ok {
			return x.Users
		}
	}
	return nil
}

func (x *SyncRequest) GetJobs() *DataJobs {
	if x != nil {
		if x, ok := x.Data.(*SyncRequest_Jobs); ok {
			return x.Jobs
		}
	}
	return nil
}

func (x *SyncRequest) GetLicenses() *DataLicenses {
	if x != nil {
		if x, ok := x.Data.(*SyncRequest_Licenses); ok {
			return x.Licenses
		}
	}
	return nil
}

func (x *SyncRequest) GetVehicles() *DataVehicles {
	if x != nil {
		if x, ok := x.Data.(*SyncRequest_Vehicles); ok {
			return x.Vehicles
		}
	}
	return nil
}

type isSyncRequest_Data interface {
	isSyncRequest_Data()
}

type SyncRequest_Users struct {
	Users *DataUsers `protobuf:"bytes,1,opt,name=users,proto3,oneof"`
}

type SyncRequest_Jobs struct {
	Jobs *DataJobs `protobuf:"bytes,2,opt,name=jobs,proto3,oneof"`
}

type SyncRequest_Licenses struct {
	Licenses *DataLicenses `protobuf:"bytes,3,opt,name=licenses,proto3,oneof"`
}

type SyncRequest_Vehicles struct {
	Vehicles *DataVehicles `protobuf:"bytes,4,opt,name=vehicles,proto3,oneof"`
}

func (*SyncRequest_Users) isSyncRequest_Data() {}

func (*SyncRequest_Jobs) isSyncRequest_Data() {}

func (*SyncRequest_Licenses) isSyncRequest_Data() {}

func (*SyncRequest_Vehicles) isSyncRequest_Data() {}

type DataUsers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*users.User          `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataUsers) Reset() {
	*x = DataUsers{}
	mi := &file_services_rector_sync_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataUsers) ProtoMessage() {}

func (x *DataUsers) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataUsers.ProtoReflect.Descriptor instead.
func (*DataUsers) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{4}
}

func (x *DataUsers) GetUsers() []*users.User {
	if x != nil {
		return x.Users
	}
	return nil
}

type DataJobs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*users.Job           `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataJobs) Reset() {
	*x = DataJobs{}
	mi := &file_services_rector_sync_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataJobs) ProtoMessage() {}

func (x *DataJobs) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataJobs.ProtoReflect.Descriptor instead.
func (*DataJobs) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{5}
}

func (x *DataJobs) GetJobs() []*users.Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type DataLicenses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Licenses      []*users.License       `protobuf:"bytes,1,rep,name=licenses,proto3" json:"licenses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataLicenses) Reset() {
	*x = DataLicenses{}
	mi := &file_services_rector_sync_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataLicenses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataLicenses) ProtoMessage() {}

func (x *DataLicenses) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataLicenses.ProtoReflect.Descriptor instead.
func (*DataLicenses) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{6}
}

func (x *DataLicenses) GetLicenses() []*users.License {
	if x != nil {
		return x.Licenses
	}
	return nil
}

type DataVehicles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vehicles      []*vehicles.Vehicle    `protobuf:"bytes,1,rep,name=vehicles,proto3" json:"vehicles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataVehicles) Reset() {
	*x = DataVehicles{}
	mi := &file_services_rector_sync_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataVehicles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVehicles) ProtoMessage() {}

func (x *DataVehicles) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataVehicles.ProtoReflect.Descriptor instead.
func (*DataVehicles) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{7}
}

func (x *DataVehicles) GetVehicles() []*vehicles.Vehicle {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

type SyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AffectedRows  int64                  `protobuf:"varint,1,opt,name=affected_rows,json=affectedRows,proto3" json:"affected_rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_services_rector_sync_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_rector_sync_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_services_rector_sync_proto_rawDescGZIP(), []int{8}
}

func (x *SyncResponse) GetAffectedRows() int64 {
	if x != nil {
		return x.AffectedRows
	}
	return 0
}

var File_services_rector_sync_proto protoreflect.FileDescriptor

var file_services_rector_sync_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x1a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x2f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73,
	0x12, 0x37, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x22, 0x46, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0b, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2f,
	0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4a, 0x6f, 0x62, 0x73, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12,
	0x3b, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x08,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x43, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x36,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x92, 0x01, 0x03, 0x10, 0xf4, 0x03, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x3f, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x6f,
	0x62, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x92, 0x01, 0x03, 0x10, 0x96,
	0x01, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x4e, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x10, 0x64, 0x52, 0x08, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x92, 0x01, 0x03, 0x10, 0xe8,
	0x07, 0x52, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x0c, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73,
	0x32, 0xa6, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x74, 0x2d,
	0x61, 0x70, 0x70, 0x2f, 0x66, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_rector_sync_proto_rawDescOnce sync.Once
	file_services_rector_sync_proto_rawDescData = file_services_rector_sync_proto_rawDesc
)

func file_services_rector_sync_proto_rawDescGZIP() []byte {
	file_services_rector_sync_proto_rawDescOnce.Do(func() {
		file_services_rector_sync_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_rector_sync_proto_rawDescData)
	})
	return file_services_rector_sync_proto_rawDescData
}

var file_services_rector_sync_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_services_rector_sync_proto_goTypes = []any{
	(*GetStatusRequest)(nil),  // 0: services.rector.GetStatusRequest
	(*GetStatusResponse)(nil), // 1: services.rector.GetStatusResponse
	(*DataStatus)(nil),        // 2: services.rector.DataStatus
	(*SyncRequest)(nil),       // 3: services.rector.SyncRequest
	(*DataUsers)(nil),         // 4: services.rector.DataUsers
	(*DataJobs)(nil),          // 5: services.rector.DataJobs
	(*DataLicenses)(nil),      // 6: services.rector.DataLicenses
	(*DataVehicles)(nil),      // 7: services.rector.DataVehicles
	(*SyncResponse)(nil),      // 8: services.rector.SyncResponse
	(*users.User)(nil),        // 9: resources.users.User
	(*users.Job)(nil),         // 10: resources.users.Job
	(*users.License)(nil),     // 11: resources.users.License
	(*vehicles.Vehicle)(nil),  // 12: resources.vehicles.Vehicle
}
var file_services_rector_sync_proto_depIdxs = []int32{
	2,  // 0: services.rector.GetStatusResponse.users:type_name -> services.rector.DataStatus
	2,  // 1: services.rector.GetStatusResponse.jobs:type_name -> services.rector.DataStatus
	2,  // 2: services.rector.GetStatusResponse.licenses:type_name -> services.rector.DataStatus
	2,  // 3: services.rector.GetStatusResponse.vehicles:type_name -> services.rector.DataStatus
	4,  // 4: services.rector.SyncRequest.users:type_name -> services.rector.DataUsers
	5,  // 5: services.rector.SyncRequest.jobs:type_name -> services.rector.DataJobs
	6,  // 6: services.rector.SyncRequest.licenses:type_name -> services.rector.DataLicenses
	7,  // 7: services.rector.SyncRequest.vehicles:type_name -> services.rector.DataVehicles
	9,  // 8: services.rector.DataUsers.users:type_name -> resources.users.User
	10, // 9: services.rector.DataJobs.jobs:type_name -> resources.users.Job
	11, // 10: services.rector.DataLicenses.licenses:type_name -> resources.users.License
	12, // 11: services.rector.DataVehicles.vehicles:type_name -> resources.vehicles.Vehicle
	0,  // 12: services.rector.SyncService.GetStatus:input_type -> services.rector.GetStatusRequest
	3,  // 13: services.rector.SyncService.Sync:input_type -> services.rector.SyncRequest
	1,  // 14: services.rector.SyncService.GetStatus:output_type -> services.rector.GetStatusResponse
	8,  // 15: services.rector.SyncService.Sync:output_type -> services.rector.SyncResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_services_rector_sync_proto_init() }
func file_services_rector_sync_proto_init() {
	if File_services_rector_sync_proto != nil {
		return
	}
	file_services_rector_sync_proto_msgTypes[3].OneofWrappers = []any{
		(*SyncRequest_Users)(nil),
		(*SyncRequest_Jobs)(nil),
		(*SyncRequest_Licenses)(nil),
		(*SyncRequest_Vehicles)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_rector_sync_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_rector_sync_proto_goTypes,
		DependencyIndexes: file_services_rector_sync_proto_depIdxs,
		MessageInfos:      file_services_rector_sync_proto_msgTypes,
	}.Build()
	File_services_rector_sync_proto = out.File
	file_services_rector_sync_proto_rawDesc = nil
	file_services_rector_sync_proto_goTypes = nil
	file_services_rector_sync_proto_depIdxs = nil
}
