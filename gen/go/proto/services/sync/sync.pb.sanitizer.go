// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: services/sync/sync.proto

package sync

func (m *AddActivityRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Activity
	if m.Activity != nil {
		if v, ok := interface{}(m.GetActivity()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *AddActivityResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetStatusRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetStatusResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Jobs
	if m.Jobs != nil {
		if v, ok := interface{}(m.GetJobs()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Licenses
	if m.Licenses != nil {
		if v, ok := interface{}(m.GetLicenses()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: UserLicenses
	if m.UserLicenses != nil {
		if v, ok := interface{}(m.GetUserLicenses()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Users
	if m.Users != nil {
		if v, ok := interface{}(m.GetUsers()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Vehicles
	if m.Vehicles != nil {
		if v, ok := interface{}(m.GetVehicles()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *SyncDataRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Jobs
	switch v := m.Data.(type) {

	case *SyncDataRequest_Jobs:
		if v, ok := interface{}(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: Licenses
	case *SyncDataRequest_Licenses:
		if v, ok := interface{}(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: UserLicenses
	case *SyncDataRequest_UserLicenses:
		if v, ok := interface{}(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: Users
	case *SyncDataRequest_Users:
		if v, ok := interface{}(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: Vehicles
	case *SyncDataRequest_Vehicles:
		if v, ok := interface{}(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *SyncDataResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}
