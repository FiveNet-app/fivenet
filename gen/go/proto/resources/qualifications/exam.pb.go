// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: resources/qualifications/exam.proto

package qualifications

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	timestamp "github.com/fivenet-app/fivenet/gen/go/proto/resources/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExamQuestions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*ExamQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *ExamQuestions) Reset() {
	*x = ExamQuestions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestions) ProtoMessage() {}

func (x *ExamQuestions) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestions.ProtoReflect.Descriptor instead.
func (*ExamQuestions) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{0}
}

func (x *ExamQuestions) GetQuestions() []*ExamQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type ExamQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	QualificationId uint64                  `protobuf:"varint,2,opt,name=qualification_id,json=qualificationId,proto3" json:"qualification_id,omitempty"`
	CreatedAt       *timestamp.Timestamp    `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt       *timestamp.Timestamp    `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Title           string                  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description     *string                 `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Data            *ExamQuestionData       `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Answer          *ExamQuestionAnswerData `protobuf:"bytes,8,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *ExamQuestion) Reset() {
	*x = ExamQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestion) ProtoMessage() {}

func (x *ExamQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestion.ProtoReflect.Descriptor instead.
func (*ExamQuestion) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{1}
}

func (x *ExamQuestion) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExamQuestion) GetQualificationId() uint64 {
	if x != nil {
		return x.QualificationId
	}
	return 0
}

func (x *ExamQuestion) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamQuestion) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ExamQuestion) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamQuestion) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ExamQuestion) GetData() *ExamQuestionData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExamQuestion) GetAnswer() *ExamQuestionAnswerData {
	if x != nil {
		return x.Answer
	}
	return nil
}

type ExamQuestionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*ExamQuestionData_Separator
	//	*ExamQuestionData_Yesno
	//	*ExamQuestionData_FreeText
	//	*ExamQuestionData_MultipleChoice
	Data isExamQuestionData_Data `protobuf_oneof:"data"`
}

func (x *ExamQuestionData) Reset() {
	*x = ExamQuestionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionData) ProtoMessage() {}

func (x *ExamQuestionData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionData.ProtoReflect.Descriptor instead.
func (*ExamQuestionData) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{2}
}

func (m *ExamQuestionData) GetData() isExamQuestionData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ExamQuestionData) GetSeparator() *ExamQuestionSeparator {
	if x, ok := x.GetData().(*ExamQuestionData_Separator); ok {
		return x.Separator
	}
	return nil
}

func (x *ExamQuestionData) GetYesno() *ExamQuestionYesNo {
	if x, ok := x.GetData().(*ExamQuestionData_Yesno); ok {
		return x.Yesno
	}
	return nil
}

func (x *ExamQuestionData) GetFreeText() *ExamQuestionText {
	if x, ok := x.GetData().(*ExamQuestionData_FreeText); ok {
		return x.FreeText
	}
	return nil
}

func (x *ExamQuestionData) GetMultipleChoice() *ExamQuestionMultipleChoice {
	if x, ok := x.GetData().(*ExamQuestionData_MultipleChoice); ok {
		return x.MultipleChoice
	}
	return nil
}

type isExamQuestionData_Data interface {
	isExamQuestionData_Data()
}

type ExamQuestionData_Separator struct {
	Separator *ExamQuestionSeparator `protobuf:"bytes,1,opt,name=separator,proto3,oneof"`
}

type ExamQuestionData_Yesno struct {
	Yesno *ExamQuestionYesNo `protobuf:"bytes,2,opt,name=yesno,proto3,oneof"`
}

type ExamQuestionData_FreeText struct {
	FreeText *ExamQuestionText `protobuf:"bytes,3,opt,name=free_text,json=freeText,proto3,oneof"`
}

type ExamQuestionData_MultipleChoice struct {
	MultipleChoice *ExamQuestionMultipleChoice `protobuf:"bytes,4,opt,name=multiple_choice,json=multipleChoice,proto3,oneof"`
}

func (*ExamQuestionData_Separator) isExamQuestionData_Data() {}

func (*ExamQuestionData_Yesno) isExamQuestionData_Data() {}

func (*ExamQuestionData_FreeText) isExamQuestionData_Data() {}

func (*ExamQuestionData_MultipleChoice) isExamQuestionData_Data() {}

type ExamQuestionSeparator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExamQuestionSeparator) Reset() {
	*x = ExamQuestionSeparator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionSeparator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionSeparator) ProtoMessage() {}

func (x *ExamQuestionSeparator) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionSeparator.ProtoReflect.Descriptor instead.
func (*ExamQuestionSeparator) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{3}
}

type ExamQuestionYesNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExamQuestionYesNo) Reset() {
	*x = ExamQuestionYesNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionYesNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionYesNo) ProtoMessage() {}

func (x *ExamQuestionYesNo) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionYesNo.ProtoReflect.Descriptor instead.
func (*ExamQuestionYesNo) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{4}
}

type ExamQuestionText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinLength int32 `protobuf:"varint,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength int32 `protobuf:"varint,2,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
}

func (x *ExamQuestionText) Reset() {
	*x = ExamQuestionText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionText) ProtoMessage() {}

func (x *ExamQuestionText) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionText.ProtoReflect.Descriptor instead.
func (*ExamQuestionText) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{5}
}

func (x *ExamQuestionText) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *ExamQuestionText) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

type ExamQuestionMultipleChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []string `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
	Limit   *int32   `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *ExamQuestionMultipleChoice) Reset() {
	*x = ExamQuestionMultipleChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionMultipleChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionMultipleChoice) ProtoMessage() {}

func (x *ExamQuestionMultipleChoice) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionMultipleChoice.ProtoReflect.Descriptor instead.
func (*ExamQuestionMultipleChoice) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{6}
}

func (x *ExamQuestionMultipleChoice) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *ExamQuestionMultipleChoice) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ExamQuestionAnswerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExamQuestionAnswerData) Reset() {
	*x = ExamQuestionAnswerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionAnswerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionAnswerData) ProtoMessage() {}

func (x *ExamQuestionAnswerData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionAnswerData.ProtoReflect.Descriptor instead.
func (*ExamQuestionAnswerData) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{7}
}

type ExamUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	QualificationId uint64               `protobuf:"varint,3,opt,name=qualification_id,json=qualificationId,proto3" json:"qualification_id,omitempty"`
	StartedAt       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	EndedAt         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=ended_at,json=endedAt,proto3,oneof" json:"ended_at,omitempty"`
	Responses       *ExamResponses       `protobuf:"bytes,6,opt,name=responses,proto3,oneof" json:"responses,omitempty"`
}

func (x *ExamUserResponse) Reset() {
	*x = ExamUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamUserResponse) ProtoMessage() {}

func (x *ExamUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamUserResponse.ProtoReflect.Descriptor instead.
func (*ExamUserResponse) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{8}
}

func (x *ExamUserResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExamUserResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamUserResponse) GetQualificationId() uint64 {
	if x != nil {
		return x.QualificationId
	}
	return 0
}

func (x *ExamUserResponse) GetStartedAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ExamUserResponse) GetEndedAt() *timestamp.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *ExamUserResponse) GetResponses() *ExamResponses {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ExamResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*ExamResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *ExamResponses) Reset() {
	*x = ExamResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponses) ProtoMessage() {}

func (x *ExamResponses) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponses.ProtoReflect.Descriptor instead.
func (*ExamResponses) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{9}
}

func (x *ExamResponses) GetResponses() []*ExamResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Response:
	//
	//	*ExamResponse_Separator
	//	*ExamResponse_Yesno
	//	*ExamResponse_FreeText
	//	*ExamResponse_MultipleChoice
	Response isExamResponse_Response `protobuf_oneof:"response"`
}

func (x *ExamResponse) Reset() {
	*x = ExamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponse) ProtoMessage() {}

func (x *ExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponse.ProtoReflect.Descriptor instead.
func (*ExamResponse) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{10}
}

func (x *ExamResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *ExamResponse) GetResponse() isExamResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ExamResponse) GetSeparator() bool {
	if x, ok := x.GetResponse().(*ExamResponse_Separator); ok {
		return x.Separator
	}
	return false
}

func (x *ExamResponse) GetYesno() *ExamResponseYesNo {
	if x, ok := x.GetResponse().(*ExamResponse_Yesno); ok {
		return x.Yesno
	}
	return nil
}

func (x *ExamResponse) GetFreeText() *ExamResponseText {
	if x, ok := x.GetResponse().(*ExamResponse_FreeText); ok {
		return x.FreeText
	}
	return nil
}

func (x *ExamResponse) GetMultipleChoice() *ExamResponseMultipleChoice {
	if x, ok := x.GetResponse().(*ExamResponse_MultipleChoice); ok {
		return x.MultipleChoice
	}
	return nil
}

type isExamResponse_Response interface {
	isExamResponse_Response()
}

type ExamResponse_Separator struct {
	Separator bool `protobuf:"varint,2,opt,name=separator,proto3,oneof"`
}

type ExamResponse_Yesno struct {
	Yesno *ExamResponseYesNo `protobuf:"bytes,3,opt,name=yesno,proto3,oneof"`
}

type ExamResponse_FreeText struct {
	FreeText *ExamResponseText `protobuf:"bytes,4,opt,name=free_text,json=freeText,proto3,oneof"`
}

type ExamResponse_MultipleChoice struct {
	MultipleChoice *ExamResponseMultipleChoice `protobuf:"bytes,5,opt,name=multiple_choice,json=multipleChoice,proto3,oneof"`
}

func (*ExamResponse_Separator) isExamResponse_Response() {}

func (*ExamResponse_Yesno) isExamResponse_Response() {}

func (*ExamResponse_FreeText) isExamResponse_Response() {}

func (*ExamResponse_MultipleChoice) isExamResponse_Response() {}

type ExamResponseYesNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExamResponseYesNo) Reset() {
	*x = ExamResponseYesNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamResponseYesNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseYesNo) ProtoMessage() {}

func (x *ExamResponseYesNo) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseYesNo.ProtoReflect.Descriptor instead.
func (*ExamResponseYesNo) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{11}
}

func (x *ExamResponseYesNo) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type ExamResponseText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 0.5 Megabyte
}

func (x *ExamResponseText) Reset() {
	*x = ExamResponseText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamResponseText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseText) ProtoMessage() {}

func (x *ExamResponseText) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseText.ProtoReflect.Descriptor instead.
func (*ExamResponseText) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{12}
}

func (x *ExamResponseText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ExamResponseMultipleChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []string `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *ExamResponseMultipleChoice) Reset() {
	*x = ExamResponseMultipleChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_qualifications_exam_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamResponseMultipleChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseMultipleChoice) ProtoMessage() {}

func (x *ExamResponseMultipleChoice) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseMultipleChoice.ProtoReflect.Descriptor instead.
func (*ExamResponseMultipleChoice) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{13}
}

func (x *ExamResponseMultipleChoice) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

var File_resources_qualifications_exam_proto protoreflect.FileDescriptor

var file_resources_qualifications_exam_proto_rawDesc = []byte{
	0x0a, 0x23, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x23, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a,
	0x0d, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e,
	0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01,
	0x02, 0x10, 0x32, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf8,
	0x03, 0x0a, 0x0c, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x10, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x03, 0x18, 0x80, 0x04, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x08, 0x48, 0x02, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x02, 0x0a, 0x10, 0x45, 0x78,
	0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f,
	0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x43, 0x0a, 0x05, 0x79, 0x65, 0x73, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x79,
	0x65, 0x73, 0x6e, 0x6f, 0x12, 0x49, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x5f, 0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x78, 0x61, 0x6d,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x13, 0x0a, 0x11, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x22, 0x50, 0x0a, 0x10, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69,
	0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x65, 0x0a, 0x1a, 0x45, 0x78, 0x61, 0x6d,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x10,
	0x0a, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x03, 0x0a, 0x10, 0x45, 0x78,
	0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x48, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x5f,
	0x0a, 0x0d, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12,
	0x4e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92,
	0x01, 0x02, 0x10, 0x32, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22,
	0xbf, 0x02, 0x0a, 0x0c, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x05, 0x79, 0x65, 0x73, 0x6e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45,
	0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x48, 0x00, 0x52, 0x05, 0x79, 0x65, 0x73, 0x6e, 0x6f, 0x12, 0x49, 0x0a, 0x09, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x5f, 0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x0a, 0x11, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10,
	0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1d, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x28, 0xa0, 0xc2, 0x1e, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x40, 0x0a, 0x1a, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x10, 0x0a, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x66, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x74, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x66, 0x69, 0x76, 0x65,
	0x6e, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resources_qualifications_exam_proto_rawDescOnce sync.Once
	file_resources_qualifications_exam_proto_rawDescData = file_resources_qualifications_exam_proto_rawDesc
)

func file_resources_qualifications_exam_proto_rawDescGZIP() []byte {
	file_resources_qualifications_exam_proto_rawDescOnce.Do(func() {
		file_resources_qualifications_exam_proto_rawDescData = protoimpl.X.CompressGZIP(file_resources_qualifications_exam_proto_rawDescData)
	})
	return file_resources_qualifications_exam_proto_rawDescData
}

var file_resources_qualifications_exam_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_resources_qualifications_exam_proto_goTypes = []interface{}{
	(*ExamQuestions)(nil),              // 0: resources.qualifications.ExamQuestions
	(*ExamQuestion)(nil),               // 1: resources.qualifications.ExamQuestion
	(*ExamQuestionData)(nil),           // 2: resources.qualifications.ExamQuestionData
	(*ExamQuestionSeparator)(nil),      // 3: resources.qualifications.ExamQuestionSeparator
	(*ExamQuestionYesNo)(nil),          // 4: resources.qualifications.ExamQuestionYesNo
	(*ExamQuestionText)(nil),           // 5: resources.qualifications.ExamQuestionText
	(*ExamQuestionMultipleChoice)(nil), // 6: resources.qualifications.ExamQuestionMultipleChoice
	(*ExamQuestionAnswerData)(nil),     // 7: resources.qualifications.ExamQuestionAnswerData
	(*ExamUserResponse)(nil),           // 8: resources.qualifications.ExamUserResponse
	(*ExamResponses)(nil),              // 9: resources.qualifications.ExamResponses
	(*ExamResponse)(nil),               // 10: resources.qualifications.ExamResponse
	(*ExamResponseYesNo)(nil),          // 11: resources.qualifications.ExamResponseYesNo
	(*ExamResponseText)(nil),           // 12: resources.qualifications.ExamResponseText
	(*ExamResponseMultipleChoice)(nil), // 13: resources.qualifications.ExamResponseMultipleChoice
	(*timestamp.Timestamp)(nil),        // 14: resources.timestamp.Timestamp
}
var file_resources_qualifications_exam_proto_depIdxs = []int32{
	1,  // 0: resources.qualifications.ExamQuestions.questions:type_name -> resources.qualifications.ExamQuestion
	14, // 1: resources.qualifications.ExamQuestion.created_at:type_name -> resources.timestamp.Timestamp
	14, // 2: resources.qualifications.ExamQuestion.updated_at:type_name -> resources.timestamp.Timestamp
	2,  // 3: resources.qualifications.ExamQuestion.data:type_name -> resources.qualifications.ExamQuestionData
	7,  // 4: resources.qualifications.ExamQuestion.answer:type_name -> resources.qualifications.ExamQuestionAnswerData
	3,  // 5: resources.qualifications.ExamQuestionData.separator:type_name -> resources.qualifications.ExamQuestionSeparator
	4,  // 6: resources.qualifications.ExamQuestionData.yesno:type_name -> resources.qualifications.ExamQuestionYesNo
	5,  // 7: resources.qualifications.ExamQuestionData.free_text:type_name -> resources.qualifications.ExamQuestionText
	6,  // 8: resources.qualifications.ExamQuestionData.multiple_choice:type_name -> resources.qualifications.ExamQuestionMultipleChoice
	14, // 9: resources.qualifications.ExamUserResponse.created_at:type_name -> resources.timestamp.Timestamp
	14, // 10: resources.qualifications.ExamUserResponse.started_at:type_name -> resources.timestamp.Timestamp
	14, // 11: resources.qualifications.ExamUserResponse.ended_at:type_name -> resources.timestamp.Timestamp
	9,  // 12: resources.qualifications.ExamUserResponse.responses:type_name -> resources.qualifications.ExamResponses
	10, // 13: resources.qualifications.ExamResponses.responses:type_name -> resources.qualifications.ExamResponse
	11, // 14: resources.qualifications.ExamResponse.yesno:type_name -> resources.qualifications.ExamResponseYesNo
	12, // 15: resources.qualifications.ExamResponse.free_text:type_name -> resources.qualifications.ExamResponseText
	13, // 16: resources.qualifications.ExamResponse.multiple_choice:type_name -> resources.qualifications.ExamResponseMultipleChoice
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_resources_qualifications_exam_proto_init() }
func file_resources_qualifications_exam_proto_init() {
	if File_resources_qualifications_exam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resources_qualifications_exam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionSeparator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionYesNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionMultipleChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionAnswerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamResponseYesNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamResponseText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_qualifications_exam_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamResponseMultipleChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_resources_qualifications_exam_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_resources_qualifications_exam_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ExamQuestionData_Separator)(nil),
		(*ExamQuestionData_Yesno)(nil),
		(*ExamQuestionData_FreeText)(nil),
		(*ExamQuestionData_MultipleChoice)(nil),
	}
	file_resources_qualifications_exam_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_resources_qualifications_exam_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_resources_qualifications_exam_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ExamResponse_Separator)(nil),
		(*ExamResponse_Yesno)(nil),
		(*ExamResponse_FreeText)(nil),
		(*ExamResponse_MultipleChoice)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resources_qualifications_exam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_qualifications_exam_proto_goTypes,
		DependencyIndexes: file_resources_qualifications_exam_proto_depIdxs,
		MessageInfos:      file_resources_qualifications_exam_proto_msgTypes,
	}.Build()
	File_resources_qualifications_exam_proto = out.File
	file_resources_qualifications_exam_proto_rawDesc = nil
	file_resources_qualifications_exam_proto_goTypes = nil
	file_resources_qualifications_exam_proto_depIdxs = nil
}
