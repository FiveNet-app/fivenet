// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.20.3
// source: resources/documents/workflow.proto

package documents

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	timestamp "github.com/fivenet-app/fivenet/gen/go/proto/resources/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminder          bool       `protobuf:"varint,1,opt,name=reminder,proto3" json:"reminder,omitempty"`
	Reminders         *Reminders `protobuf:"bytes,2,opt,name=reminders,proto3" json:"reminders,omitempty"`
	AutoClose         bool       `protobuf:"varint,3,opt,name=auto_close,json=autoClose,proto3" json:"auto_close,omitempty"`
	AutoCloseSettings *AutoClose `protobuf:"bytes,4,opt,name=auto_close_settings,json=autoCloseSettings,proto3" json:"auto_close_settings,omitempty"`
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_resources_documents_workflow_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_workflow_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_resources_documents_workflow_proto_rawDescGZIP(), []int{0}
}

func (x *Workflow) GetReminder() bool {
	if x != nil {
		return x.Reminder
	}
	return false
}

func (x *Workflow) GetReminders() *Reminders {
	if x != nil {
		return x.Reminders
	}
	return nil
}

func (x *Workflow) GetAutoClose() bool {
	if x != nil {
		return x.AutoClose
	}
	return false
}

func (x *Workflow) GetAutoCloseSettings() *AutoClose {
	if x != nil {
		return x.AutoCloseSettings
	}
	return nil
}

type Reminders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminders []*Reminder `protobuf:"bytes,1,rep,name=reminders,proto3" json:"reminders,omitempty"`
}

func (x *Reminders) Reset() {
	*x = Reminders{}
	mi := &file_resources_documents_workflow_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reminders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reminders) ProtoMessage() {}

func (x *Reminders) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_workflow_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reminders.ProtoReflect.Descriptor instead.
func (*Reminders) Descriptor() ([]byte, []int) {
	return file_resources_documents_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *Reminders) GetReminders() []*Reminder {
	if x != nil {
		return x.Reminders
	}
	return nil
}

type Reminder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Message  string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Reminder) Reset() {
	*x = Reminder{}
	mi := &file_resources_documents_workflow_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reminder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reminder) ProtoMessage() {}

func (x *Reminder) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_workflow_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reminder.ProtoReflect.Descriptor instead.
func (*Reminder) Descriptor() ([]byte, []int) {
	return file_resources_documents_workflow_proto_rawDescGZIP(), []int{2}
}

func (x *Reminder) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Reminder) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AutoClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Message  string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AutoClose) Reset() {
	*x = AutoClose{}
	mi := &file_resources_documents_workflow_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoClose) ProtoMessage() {}

func (x *AutoClose) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_workflow_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoClose.ProtoReflect.Descriptor instead.
func (*AutoClose) Descriptor() ([]byte, []int) {
	return file_resources_documents_workflow_proto_rawDescGZIP(), []int{3}
}

func (x *AutoClose) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *AutoClose) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WorkflowCronData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastDocId uint64 `protobuf:"varint,1,opt,name=last_doc_id,json=lastDocId,proto3" json:"last_doc_id,omitempty"`
}

func (x *WorkflowCronData) Reset() {
	*x = WorkflowCronData{}
	mi := &file_resources_documents_workflow_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowCronData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowCronData) ProtoMessage() {}

func (x *WorkflowCronData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_workflow_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowCronData.ProtoReflect.Descriptor instead.
func (*WorkflowCronData) Descriptor() ([]byte, []int) {
	return file_resources_documents_workflow_proto_rawDescGZIP(), []int{4}
}

func (x *WorkflowCronData) GetLastDocId() uint64 {
	if x != nil {
		return x.LastDocId
	}
	return 0
}

type WorkflowState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentId        uint64               `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	NextReminderTime  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=next_reminder_time,json=nextReminderTime,proto3,oneof" json:"next_reminder_time,omitempty"`
	NextReminderCount *int32               `protobuf:"varint,3,opt,name=next_reminder_count,json=nextReminderCount,proto3,oneof" json:"next_reminder_count,omitempty"`
	AutoCloseTime     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=auto_close_time,json=autoCloseTime,proto3,oneof" json:"auto_close_time,omitempty"`
	Workflow          *Workflow            `protobuf:"bytes,5,opt,name=workflow,proto3,oneof" json:"workflow,omitempty" alias:"workflow"` // @gotags: alias:"workflow"
	Document          *DocumentShort       `protobuf:"bytes,6,opt,name=document,proto3,oneof" json:"document,omitempty"`
}

func (x *WorkflowState) Reset() {
	*x = WorkflowState{}
	mi := &file_resources_documents_workflow_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowState) ProtoMessage() {}

func (x *WorkflowState) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_workflow_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowState.ProtoReflect.Descriptor instead.
func (*WorkflowState) Descriptor() ([]byte, []int) {
	return file_resources_documents_workflow_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowState) GetDocumentId() uint64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *WorkflowState) GetNextReminderTime() *timestamp.Timestamp {
	if x != nil {
		return x.NextReminderTime
	}
	return nil
}

func (x *WorkflowState) GetNextReminderCount() int32 {
	if x != nil && x.NextReminderCount != nil {
		return *x.NextReminderCount
	}
	return 0
}

func (x *WorkflowState) GetAutoCloseTime() *timestamp.Timestamp {
	if x != nil {
		return x.AutoCloseTime
	}
	return nil
}

func (x *WorkflowState) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *WorkflowState) GetDocument() *DocumentShort {
	if x != nil {
		return x.Document
	}
	return nil
}

type WorkflowUserState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentId            uint64               `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	UserId                int32                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ManualReminderTime    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=manual_reminder_time,json=manualReminderTime,proto3,oneof" json:"manual_reminder_time,omitempty"`
	ManualReminderMessage *string              `protobuf:"bytes,4,opt,name=manual_reminder_message,json=manualReminderMessage,proto3,oneof" json:"manual_reminder_message,omitempty"`
	Workflow              *Workflow            `protobuf:"bytes,5,opt,name=workflow,proto3,oneof" json:"workflow,omitempty" alias:"workflow"` // @gotags: alias:"workflow"
	Document              *DocumentShort       `protobuf:"bytes,6,opt,name=document,proto3,oneof" json:"document,omitempty"`
}

func (x *WorkflowUserState) Reset() {
	*x = WorkflowUserState{}
	mi := &file_resources_documents_workflow_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowUserState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowUserState) ProtoMessage() {}

func (x *WorkflowUserState) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_workflow_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowUserState.ProtoReflect.Descriptor instead.
func (*WorkflowUserState) Descriptor() ([]byte, []int) {
	return file_resources_documents_workflow_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowUserState) GetDocumentId() uint64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *WorkflowUserState) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WorkflowUserState) GetManualReminderTime() *timestamp.Timestamp {
	if x != nil {
		return x.ManualReminderTime
	}
	return nil
}

func (x *WorkflowUserState) GetManualReminderMessage() string {
	if x != nil && x.ManualReminderMessage != nil {
		return *x.ManualReminderMessage
	}
	return ""
}

func (x *WorkflowUserState) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *WorkflowUserState) GetDocument() *DocumentShort {
	if x != nil {
		return x.Document
	}
	return nil
}

var File_resources_documents_workflow_proto protoreflect.FileDescriptor

var file_resources_documents_workflow_proto_rawDesc = []byte{
	0x0a, 0x22, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x01, 0x0a,
	0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52,
	0x11, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x52, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x45, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x10, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x22, 0x7c, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x4c, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x15, 0xfa, 0x42, 0x12, 0xaa, 0x01, 0x0f, 0x08, 0x01, 0x1a, 0x05, 0x08, 0x80, 0xce, 0xda, 0x03,
	0x32, 0x04, 0x08, 0x80, 0xa3, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x28, 0x80, 0x08, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x7d, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x15,
	0xfa, 0x42, 0x12, 0xaa, 0x01, 0x0f, 0x08, 0x01, 0x1a, 0x05, 0x08, 0x80, 0xce, 0xda, 0x03, 0x32,
	0x04, 0x08, 0x80, 0xa3, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x28, 0x80, 0x08, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43,
	0x72, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xeb, 0x03, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0b, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x51,
	0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x33, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x02, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x48, 0x03, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x48, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xc2, 0x03, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0b, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x55, 0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x12, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x17, 0x6d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x15, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x02, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x48, 0x03, 0x52, 0x08,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x74,
	0x2d, 0x61, 0x70, 0x70, 0x2f, 0x66, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3b, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resources_documents_workflow_proto_rawDescOnce sync.Once
	file_resources_documents_workflow_proto_rawDescData = file_resources_documents_workflow_proto_rawDesc
)

func file_resources_documents_workflow_proto_rawDescGZIP() []byte {
	file_resources_documents_workflow_proto_rawDescOnce.Do(func() {
		file_resources_documents_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(file_resources_documents_workflow_proto_rawDescData)
	})
	return file_resources_documents_workflow_proto_rawDescData
}

var file_resources_documents_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_resources_documents_workflow_proto_goTypes = []any{
	(*Workflow)(nil),            // 0: resources.documents.Workflow
	(*Reminders)(nil),           // 1: resources.documents.Reminders
	(*Reminder)(nil),            // 2: resources.documents.Reminder
	(*AutoClose)(nil),           // 3: resources.documents.AutoClose
	(*WorkflowCronData)(nil),    // 4: resources.documents.WorkflowCronData
	(*WorkflowState)(nil),       // 5: resources.documents.WorkflowState
	(*WorkflowUserState)(nil),   // 6: resources.documents.WorkflowUserState
	(*durationpb.Duration)(nil), // 7: google.protobuf.Duration
	(*timestamp.Timestamp)(nil), // 8: resources.timestamp.Timestamp
	(*DocumentShort)(nil),       // 9: resources.documents.DocumentShort
}
var file_resources_documents_workflow_proto_depIdxs = []int32{
	1,  // 0: resources.documents.Workflow.reminders:type_name -> resources.documents.Reminders
	3,  // 1: resources.documents.Workflow.auto_close_settings:type_name -> resources.documents.AutoClose
	2,  // 2: resources.documents.Reminders.reminders:type_name -> resources.documents.Reminder
	7,  // 3: resources.documents.Reminder.duration:type_name -> google.protobuf.Duration
	7,  // 4: resources.documents.AutoClose.duration:type_name -> google.protobuf.Duration
	8,  // 5: resources.documents.WorkflowState.next_reminder_time:type_name -> resources.timestamp.Timestamp
	8,  // 6: resources.documents.WorkflowState.auto_close_time:type_name -> resources.timestamp.Timestamp
	0,  // 7: resources.documents.WorkflowState.workflow:type_name -> resources.documents.Workflow
	9,  // 8: resources.documents.WorkflowState.document:type_name -> resources.documents.DocumentShort
	8,  // 9: resources.documents.WorkflowUserState.manual_reminder_time:type_name -> resources.timestamp.Timestamp
	0,  // 10: resources.documents.WorkflowUserState.workflow:type_name -> resources.documents.Workflow
	9,  // 11: resources.documents.WorkflowUserState.document:type_name -> resources.documents.DocumentShort
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_resources_documents_workflow_proto_init() }
func file_resources_documents_workflow_proto_init() {
	if File_resources_documents_workflow_proto != nil {
		return
	}
	file_resources_documents_documents_proto_init()
	file_resources_documents_workflow_proto_msgTypes[5].OneofWrappers = []any{}
	file_resources_documents_workflow_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resources_documents_workflow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_documents_workflow_proto_goTypes,
		DependencyIndexes: file_resources_documents_workflow_proto_depIdxs,
		MessageInfos:      file_resources_documents_workflow_proto_msgTypes,
	}.Build()
	File_resources_documents_workflow_proto = out.File
	file_resources_documents_workflow_proto_rawDesc = nil
	file_resources_documents_workflow_proto_goTypes = nil
	file_resources_documents_workflow_proto_depIdxs = nil
}
