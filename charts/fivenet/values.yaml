# Default values for fivenet.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #nginx.ingress.kubernetes.io/server-snippet: |
    #  client_body_timeout 1800s;
  hosts:
    - host: chart-example.local
      paths:
        - path: /api
          pathType: Prefix
          service: server
          servicePort: http
        - path: /grpc
          pathType: Prefix
          service: envoy
          servicePort: grpc
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

fivenet:
  # -- FiveNet config
  config:
    logLevel: "INFO"
    # debug or release
    mode: "release"
    tracing:
      enabled: false
      type: "stdout"
      # OTLP Tracing endpoint URL
      url: "https://localhost:4317"
      insecure: false
      timeout: 10s
      environment: "live"
      ratio: 0.1
      attributes: []
    http:
      listen: ":8080"
      adminListen: ":7070"
      sessions:
        cookieSecret: "your_generated_cookie_secret"
        domain: "localhost"
      publicURL: "https://fivenet.example.com"
    grpc:
      listen: ":9090"
    database:
      # refer to https://github.com/go-sql-driver/mysql#dsn-data-source-name for details
      dsn: "DB_USER:DB_PASS@tcp(DB_HOST:DB_PORT)/DB_NAME?collation=utf8mb4_unicode_ci&parseTime=True&loc=Europe%2FBerlin"
      # For the local test database using `docker-compose`
      #dsn: "fivenet:changeme@tcp(localhost:3306)/fivenet?collation=utf8mb4_unicode_ci&parseTime=True&loc=Europe%2FBerlin"
      maxOpenConns: 32
      maxIdleConns: 5
      connMaxIdleTime: 15m
      connMaxLifetime: 60m
      custom:
        columns:
          user:
            visum: "visum"
            playtime: "playtime"
          vehicle:
            model: "model"
        conditions:
          user:
            filterEmptyName: false
    nats:
      # If you change the NATS username or password, below `nats:` config section
      url: "nats://localhost:4222"
    jwt:
      secret: "your_generated_jwt_secret"
    storage:
      type: "filesystem"
      filesystem:
        path: "/data"
      s3:
        endpoint: ""
        region: "us-east-1"
        accessKeyID: ""
        secretAccessKey: ""
        useSSL: true
        bucketName: ""
        prefix: ""
    imageProxy:
      enabled: true
      url: "/api/image_proxy/"
      cachePrefix: "images/"
      options:
        allowHosts: []
        denyHosts: []
    cache:
      refreshTime: 2m
    audit:
      retentionDays: 90
    oauth2:
      providers: []
        #- name: "discord"
        #  label: "Discord"
        #  homepage: "https://discord.com"
        #  icon: "i-simple-icons-discord" # or a URL to an image
        #  #defaultAvatar: ""
        #  type: "discord"
        #  redirectURL: "https://localhost:3000/api/oauth2/callback/discord"
        #  clientID: "your_discord_oauth2_client_id"
        #  clientSecret: "your_discord_oauth2_client_secret"
        #  scopes:
        #    - openid
        #    - identify
        #  endpoints:
        #    authURL: "https://discord.com/api/oauth2/authorize"
        #    tokenURL: "https://discord.com/api/oauth2/token"
    #postalsFile: ".output/public/data/postals.json"
    auth:
      superuserGroups:
        - projektleiter
        - teamleitung
      superuserUsers: []
    dispatchCenter:
      convertJobs: []
        #- police
    discord:
      enabled: true
      token: "your_discord_bot_token"
      presence:
        gameStatus: "FiveNet"
        #listeningStatus: ""
        #streamingStatus: ""
        #streamingStatusUrl: ""
        #watchStatus: ""
      userInfoSync:
        enabled: false
        gradeRoleFormat: "[%grade%] %grade_label%"
        employeeRoleFormat: "%s Personal"
        nicknameRegex: "^(?P<prefix>\\[\\S+][ ]*)?(?P<name>[^\\[]+)(?P<suffix>[ ]*\\[\\S+])?"
        jobsAbsceneRoleName: "Absent"
      groupSync:
        enabled: false
        mapping: {}
          #fraktionsverwaltung:
          #  roleName: "Fraktionsverwaltung"
          #  permissions: 414690258631
          #  color: "#9B59B6"
          #  notSameJob: true
          #teamleitung:
          #  roleName: "Teamleitung"
          #  permissions: 416032435935
          #  color: "#9B59B6"
      commands:
        enabled: true

frontend:
  enabled: true
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: docker.io/galexrt/fivenet
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  livenessProbe:
    httpGet:
      path: /readiness
      port: metrics
    failureThreshold: 3
    initialDelaySeconds: 25
    periodSeconds: 10
  readinessProbe: null
  startupProbe:
    httpGet:
      path: /readiness
      port: metrics
    failureThreshold: 30
    initialDelaySeconds: 20
    periodSeconds: 10
  additionalEnv: []
  serviceMonitor:
    # -- Specifies whether a prometheus-operator ServiceMonitor should be created
    enabled: false
    # -- Additional Labels for the ServiceMonitor object
    additionalLabels: {}
    #namespace: "monitoring"
    namespaceSelector:
    # Default: scrape .Release.Namespace only
    # To scrape all, use the following:
    #  matchNames:
    #    - monitoring
    #   any: true
    # -- (duration) Interval at which metrics should be scraped
    scrapeInterval: 30s
    # honorLabels: true

iconify:
  enabled: true
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts:
      - host: chart-example.local
        paths:
          - path: /api/icons(/|$)(.*)
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: docker.io/iconify/api
    pullPolicy: IfNotPresent
    tag: latest
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  livenessProbe: null
  readinessProbe: null
  startupProbe: null
  additionalEnv:
    - name: ICONIFY_SOURCE
      value: "full"
    - name: REDIRECT_INDEX
      value: "/about"
    - name: ALLOW_UPDATE
      value: "false"
    - name: ENABLE_ICON_LISTS
      value: "false"
    - name: ENABLE_SEARCH_ENGINE
      value: "false"

server:
  enabled: true
  serveFrontend: false
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: docker.io/galexrt/fivenet
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  livenessProbe:
    httpGet:
      path: /readiness
      port: metrics
    failureThreshold: 3
    initialDelaySeconds: 25
    periodSeconds: 10
  readinessProbe: null
  startupProbe:
    httpGet:
      path: /readiness
      port: metrics
    failureThreshold: 30
    initialDelaySeconds: 20
    periodSeconds: 10
  additionalEnv: []
  serviceMonitor:
    # -- Specifies whether a prometheus-operator ServiceMonitor should be created
    enabled: false
    # -- Additional Labels for the ServiceMonitor object
    additionalLabels: {}
    #namespace: "monitoring"
    namespaceSelector:
    # Default: scrape .Release.Namespace only
    # To scrape all, use the following:
    #  matchNames:
    #    - monitoring
    #   any: true
    # -- (duration) Interval at which metrics should be scraped
    scrapeInterval: 30s
    # honorLabels: true

# -- FiveNet Worker deployment config
worker:
  enabled: true
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: docker.io/galexrt/fivenet
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  livenessProbe:
    httpGet:
      path: /readiness
      port: metrics
    initialDelaySeconds: 15
    periodSeconds: 10
  readinessProbe: null
  startupProbe:
    httpGet:
      path: /readiness
      port: metrics
    initialDelaySeconds: 5
    failureThreshold: 20
    periodSeconds: 10
  additionalEnv: []
  serviceMonitor:
    # -- Specifies whether a prometheus-operator ServiceMonitor should be created
    enabled: false
    # -- Additional Labels for the ServiceMonitor object
    additionalLabels: {}
    #namespace: "monitoring"
    namespaceSelector:
    # Default: scrape .Release.Namespace only
    # To scrape all, use the following:
    #  matchNames:
    #    - monitoring
    #   any: true
    # -- (duration) Interval at which metrics should be scraped
    scrapeInterval: 30s
    # honorLabels: true

# -- FiveNet Discord Bot deployment config
discord:
  enabled: true
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: docker.io/galexrt/fivenet
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  livenessProbe:
    httpGet:
      path: /readiness
      port: metrics
    initialDelaySeconds: 15
    periodSeconds: 10
  readinessProbe: null
  startupProbe:
    httpGet:
      path: /readiness
      port: metrics
    initialDelaySeconds: 5
    failureThreshold: 20
    periodSeconds: 10
  additionalEnv: []
  serviceMonitor:
    # -- Specifies whether a prometheus-operator ServiceMonitor should be created
    enabled: false
    # -- Additional Labels for the ServiceMonitor object
    additionalLabels: {}
    #namespace: "monitoring"
    namespaceSelector:
    # Default: scrape .Release.Namespace only
    # To scrape all, use the following:
    #  matchNames:
    #    - monitoring
    #   any: true
    # -- (duration) Interval at which metrics should be scraped
    scrapeInterval: 30s
    # honorLabels: true

envoy:
  replicaCount: 2
  revisionHistoryLimit: 1
  image:
    repository: docker.io/envoyproxy/envoy
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.30.1"
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  livenessProbe:
    httpGet:
      path: /ready
      port: admin
  readinessProbe:
    httpGet:
      path: /ready
      port: admin
  startupProbe: null
  serviceMonitor:
    # -- Specifies whether a prometheus-operator ServiceMonitor should be created
    enabled: false
    # -- Additional Labels for the ServiceMonitor object
    additionalLabels: {}
    #namespace: "monitoring"
    namespaceSelector:
    # Default: scrape .Release.Namespace only
    # To scrape all, use the following:
    #  matchNames:
    #    - monitoring
    #   any: true
    # -- (duration) Interval at which metrics should be scraped
    scrapeInterval: 30s
    # honorLabels: true
  # -- Envoy config
  config:
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    layered_runtime:
      layers:
        - name: static_layer_0
          static_layer:
            envoy:
              resource_limits:
                listener:
                  example_listener_name:
                    connection_limit: 5000
            overload:
              global_downstream_max_connections: 25000
    static_resources:
      listeners:
        - name: listener_0
          address:
            # If you encounter issues, add `, ipv4_compat: true` to the `socket_address` structure
            socket_address: { address: 0.0.0.0, port_value: 8181 }
          filter_chains:
            - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  codec_type: auto
                  stat_prefix: ingress_http
                  # Should be set when behind an proxy/Ingress
                  use_remote_address: true
                  common_http_protocol_options:
                    idle_timeout: 1800s  # 30 minutes
                    headers_with_underscores_action: REJECT_REQUEST
                  http2_protocol_options:
                    max_concurrent_streams: 200
                    initial_stream_window_size: 65536  # 64 KiB
                    initial_connection_window_size: 1048576  # 1 MiB
                  stream_idle_timeout: 0s  # disabled for long-lived and streaming requests
                  request_timeout: 0s  # disabled for long-lived and streaming requests
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: local_service
                        domains: ["*"]
                        routes:
                          - match:
                              prefix: "/grpc/"
                            route:
                              prefix_rewrite: "/"
                              cluster: fivenet_service
                              timeout: 0s
                              idle_timeout: 0s
                              max_stream_duration:
                                grpc_timeout_header_max: 35s
                        cors:
                          allow_origin_string_match:
                            - safe_regex:
                                google_re2: {}
                                regex: \*
                          allow_methods: GET, PUT, DELETE, POST, OPTIONS
                          allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization
                          max_age: "1728000"
                          expose_headers: grpc-status,grpc-message
                  http_filters:
                    - name: envoy.filters.http.grpc_web
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                    - name: envoy.filters.http.cors
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                    - name: envoy.filters.http.router
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: fivenet_service
          connect_timeout: 0.5s
          type: logical_dns
          http2_protocol_options: {}
          lb_policy: round_robin
          load_assignment:
            cluster_name: cluster_0
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: '{{ include "fivenet.fullname" . }}-server'
                        port_value: 9090

# -- NATS server/cluster config values: https://artifacthub.io/packages/helm/nats/nats#values
nats:
  enabled: true # if disabled you must run your own Nats server or cluster
  config:
    cluster:
      enabled: true
      replicas: 3
    jetstream:
      enabled: true
      fileStore:
        enabled: true
        pvc:
          enabled: true
          size: 5Gi
          #storageClassName: default
      memoryStore:
        enabled: true
        # ensure that container has a sufficient memory limit greater than maxSize
        maxSize: 64Mi
    merge:
      accounts:
        fivenet:
          jetstream: enabled
          users:
            # You should change the username and password
            - user: "fivenet"
              password: "fivenet"
      max_payload: 3145728 # user tracker can create big updates at the moment
  promExporter:
    enabled: true
    image:
      repository: docker.io/natsio/prometheus-nats-exporter
      tag: 0.15.0

    patch:
      - op: replace
        path: /args
        value:
          - -port=7777
          - -channelz
          - -connz
          - -routez
          - -subz
          - -varz
          - -prefix=nats
          - -serverz
          - -use_internal_server_id
          - -jsz=streams
          - -ri=15
          - http://localhost:8222/

    podMonitor:
      enabled: false # enable only if your have the prometheus-operator deployed
      patch:
        - op: add
          path: /spec/podMetricsEndpoints/0/interval
          value: 30s

# -- Extra objects to deploy (value evaluated as a template)
extraObjects: []
