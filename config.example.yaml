logLevel: "DEBUG"
# debug or release
mode: "release"
tracing:
  enabled: false
  # Can be "stdout", "otlptracegrpc", "otlptracehttp"
  type: "stdout"
  # OTLP Tracing endpoint URL
  url: "https://localhost:4317"
  insecure: false
  timeout: 10s
  environment: "dev"
  ratio: 0.1
  attributes: {}
http:
  listen: ":8080"
  adminListen: ":7070"
  publicURL: "https://fivenet.example.com"
  origins:
    - "https://fivenet.example.com"
    #- "http://localhost:3000" # Only for development
  sessions:
    cookieSecret: "your_generated_cookie_secret"
    domain: "fivenet.example.com"
database:
  # refer to https://github.com/go-sql-driver/mysql#dsn-data-source-name for details
  dsn: "DB_USER:DB_PASS@tcp(DB_HOST:DB_PORT)/DB_NAME?collation=utf8mb4_unicode_ci&parseTime=True&loc=Europe%2FBerlin"
  # For the local test database using `docker-compose`
  #dsn: "fivenet:changeme@tcp(localhost:3306)/fivenet?collation=utf8mb4_unicode_ci&parseTime=True&loc=Europe%2FBerlin"
  maxOpenConns: 32
  maxIdleConns: 5
  connMaxIdleTime: 15m
  connMaxLifetime: 60m
  custom:
    # To disable a column, set it to `"-"`
    columns:
      user:
        visum: "visum"
        playtime: "playtime"
      vehicle:
        model: "model"
    conditions:
      user:
        filterEmptyName: false
nats:
  # This NATS url is for using the `docker-compose.yaml` NATS server
  url: "nats://fivenet:fivenet_topsecret@localhost:4222"
  replicas: 1
jwt:
  secret: "your_generated_jwt_secret"
storage:
  type: "filesystem"
  filesystem:
    path: ".data/"
  s3:
    endpoint: ""
    region: "us-east-1"
    accessKeyID: ""
    secretAccessKey: ""
    useSSL: true
    bucketName: ""
    prefix: ""
imageProxy:
  enabled: true
  url: "/api/image_proxy/"
  cachePrefix: "images/"
  options:
    allowHosts: []
    denyHosts: []
cache:
  refreshTime: 2m
audit:
  retentionDays: 90
oauth2:
  providers:
    - name: "discord"
      label: "Discord"
      homepage: "https://discord.com"
      #  icon: "i-simple-icons-discord" # or a URL to an image
      #defaultAvatar: ""
      type: "discord"
      redirectURL: "https://localhost:3000/api/oauth2/callback/discord"
      clientID: "your_discord_oauth2_client_id"
      clientSecret: "your_discord_oauth2_client_secret"
      scopes:
        - openid
        - identify
      endpoints:
        authURL: "https://discord.com/api/oauth2/authorize"
        tokenURL: "https://discord.com/api/oauth2/token"
#postalsFile: ".output/public/data/postals.json"
auth:
  superuserGroups:
    - projektleiter
    - teamleitung
  superuserUsers: []
dispatchCenter:
  convertJobs: []
    #- police
discord:
  enabled: true
  token: "your_discord_bot_token"
  userInfoSync:
    enabled: false
    gradeRoleFormat: "[%grade%] %grade_label%"
    employeeRoleFormat: "%s Employees"
    unemployedRoleName: "Citizen"
    nicknameRegex: "^(?P<prefix>\\[\\S+][ ]*)?(?P<name>[^\\[]+)(?P<suffix>[ ]*\\[\\S+])?"
    jobsAbsceneRoleName: "Absent"
  groupSync:
    enabled: false
    mapping:
      fraktionsverwaltung:
        roleName: "Fraktionsverwaltung"
        #permissions: 0
        #color: "#9B59B6"
        notSameJob: true
      teamleitung:
        roleName: "Teamleitung"
        #permissions: 0
        #color: "#9B59B6"
  commands:
    enabled: true
