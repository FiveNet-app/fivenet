//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ArpanetDocumentsComments = newArpanetDocumentsCommentsTable("arpanet", "arpanet_documents_comments", "")

type arpanetDocumentsCommentsTable struct {
	mysql.Table

	//Columns
	ID         mysql.ColumnInteger
	CreatedAt  mysql.ColumnTimestamp
	UpdatedAt  mysql.ColumnTimestamp
	DeletedAt  mysql.ColumnTimestamp
	DocumentID mysql.ColumnInteger
	Comment    mysql.ColumnString
	CreatorID  mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ArpanetDocumentsCommentsTable struct {
	arpanetDocumentsCommentsTable

	NEW arpanetDocumentsCommentsTable
}

// AS creates new ArpanetDocumentsCommentsTable with assigned alias
func (a ArpanetDocumentsCommentsTable) AS(alias string) *ArpanetDocumentsCommentsTable {
	return newArpanetDocumentsCommentsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ArpanetDocumentsCommentsTable with assigned schema name
func (a ArpanetDocumentsCommentsTable) FromSchema(schemaName string) *ArpanetDocumentsCommentsTable {
	return newArpanetDocumentsCommentsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ArpanetDocumentsCommentsTable with assigned table prefix
func (a ArpanetDocumentsCommentsTable) WithPrefix(prefix string) *ArpanetDocumentsCommentsTable {
	return newArpanetDocumentsCommentsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ArpanetDocumentsCommentsTable with assigned table suffix
func (a ArpanetDocumentsCommentsTable) WithSuffix(suffix string) *ArpanetDocumentsCommentsTable {
	return newArpanetDocumentsCommentsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newArpanetDocumentsCommentsTable(schemaName, tableName, alias string) *ArpanetDocumentsCommentsTable {
	return &ArpanetDocumentsCommentsTable{
		arpanetDocumentsCommentsTable: newArpanetDocumentsCommentsTableImpl(schemaName, tableName, alias),
		NEW:                           newArpanetDocumentsCommentsTableImpl("", "new", ""),
	}
}

func newArpanetDocumentsCommentsTableImpl(schemaName, tableName, alias string) arpanetDocumentsCommentsTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		UpdatedAtColumn  = mysql.TimestampColumn("updated_at")
		DeletedAtColumn  = mysql.TimestampColumn("deleted_at")
		DocumentIDColumn = mysql.IntegerColumn("document_id")
		CommentColumn    = mysql.StringColumn("comment")
		CreatorIDColumn  = mysql.IntegerColumn("creator_id")
		allColumns       = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, DocumentIDColumn, CommentColumn, CreatorIDColumn}
		mutableColumns   = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, DocumentIDColumn, CommentColumn, CreatorIDColumn}
	)

	return arpanetDocumentsCommentsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,
		DeletedAt:  DeletedAtColumn,
		DocumentID: DocumentIDColumn,
		Comment:    CommentColumn,
		CreatorID:  CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
