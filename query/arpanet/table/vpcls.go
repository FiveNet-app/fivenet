//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var VpcLS = newVpcLSTable("arpanet", "vpcLS", "")

type vpcLSTable struct {
	mysql.Table

	//Columns
	PlayerId mysql.ColumnString
	Coordsx  mysql.ColumnString
	Coordsy  mysql.ColumnString
	Net      mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type VpcLSTable struct {
	vpcLSTable

	NEW vpcLSTable
}

// AS creates new VpcLSTable with assigned alias
func (a VpcLSTable) AS(alias string) *VpcLSTable {
	return newVpcLSTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new VpcLSTable with assigned schema name
func (a VpcLSTable) FromSchema(schemaName string) *VpcLSTable {
	return newVpcLSTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new VpcLSTable with assigned table prefix
func (a VpcLSTable) WithPrefix(prefix string) *VpcLSTable {
	return newVpcLSTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new VpcLSTable with assigned table suffix
func (a VpcLSTable) WithSuffix(suffix string) *VpcLSTable {
	return newVpcLSTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newVpcLSTable(schemaName, tableName, alias string) *VpcLSTable {
	return &VpcLSTable{
		vpcLSTable: newVpcLSTableImpl(schemaName, tableName, alias),
		NEW:        newVpcLSTableImpl("", "new", ""),
	}
}

func newVpcLSTableImpl(schemaName, tableName, alias string) vpcLSTable {
	var (
		PlayerIdColumn = mysql.StringColumn("playerId")
		CoordsxColumn  = mysql.StringColumn("coordsx")
		CoordsyColumn  = mysql.StringColumn("coordsy")
		NetColumn      = mysql.StringColumn("NET")
		allColumns     = mysql.ColumnList{PlayerIdColumn, CoordsxColumn, CoordsyColumn, NetColumn}
		mutableColumns = mysql.ColumnList{CoordsxColumn, CoordsyColumn, NetColumn}
	)

	return vpcLSTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PlayerId: PlayerIdColumn,
		Coordsx:  CoordsxColumn,
		Coordsy:  CoordsyColumn,
		Net:      NetColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
