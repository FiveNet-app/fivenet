//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ArpanetDocumentsMentions = newArpanetDocumentsMentionsTable("arpanet", "arpanet_documents_mentions", "")

type arpanetDocumentsMentionsTable struct {
	mysql.Table

	//Columns
	ID         mysql.ColumnInteger
	CreatedAt  mysql.ColumnTimestamp
	UpdatedAt  mysql.ColumnTimestamp
	DocumentID mysql.ColumnInteger
	Identifier mysql.ColumnString
	UserID     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ArpanetDocumentsMentionsTable struct {
	arpanetDocumentsMentionsTable

	NEW arpanetDocumentsMentionsTable
}

// AS creates new ArpanetDocumentsMentionsTable with assigned alias
func (a ArpanetDocumentsMentionsTable) AS(alias string) *ArpanetDocumentsMentionsTable {
	return newArpanetDocumentsMentionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ArpanetDocumentsMentionsTable with assigned schema name
func (a ArpanetDocumentsMentionsTable) FromSchema(schemaName string) *ArpanetDocumentsMentionsTable {
	return newArpanetDocumentsMentionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ArpanetDocumentsMentionsTable with assigned table prefix
func (a ArpanetDocumentsMentionsTable) WithPrefix(prefix string) *ArpanetDocumentsMentionsTable {
	return newArpanetDocumentsMentionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ArpanetDocumentsMentionsTable with assigned table suffix
func (a ArpanetDocumentsMentionsTable) WithSuffix(suffix string) *ArpanetDocumentsMentionsTable {
	return newArpanetDocumentsMentionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newArpanetDocumentsMentionsTable(schemaName, tableName, alias string) *ArpanetDocumentsMentionsTable {
	return &ArpanetDocumentsMentionsTable{
		arpanetDocumentsMentionsTable: newArpanetDocumentsMentionsTableImpl(schemaName, tableName, alias),
		NEW:                           newArpanetDocumentsMentionsTableImpl("", "new", ""),
	}
}

func newArpanetDocumentsMentionsTableImpl(schemaName, tableName, alias string) arpanetDocumentsMentionsTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		UpdatedAtColumn  = mysql.TimestampColumn("updated_at")
		DocumentIDColumn = mysql.IntegerColumn("document_id")
		IdentifierColumn = mysql.StringColumn("identifier")
		UserIDColumn     = mysql.IntegerColumn("user_id")
		allColumns       = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DocumentIDColumn, IdentifierColumn, UserIDColumn}
		mutableColumns   = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DocumentIDColumn, IdentifierColumn, UserIDColumn}
	)

	return arpanetDocumentsMentionsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,
		DocumentID: DocumentIDColumn,
		Identifier: IdentifierColumn,
		UserID:     UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
