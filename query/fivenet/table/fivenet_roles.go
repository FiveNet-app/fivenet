//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetRoles = newFivenetRolesTable("", "fivenet_roles", "")

type fivenetRolesTable struct {
	mysql.Table

	//Columns
	ID          mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp
	Name        mysql.ColumnString
	GuardName   mysql.ColumnString
	Description mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetRolesTable struct {
	fivenetRolesTable

	NEW fivenetRolesTable
}

// AS creates new FivenetRolesTable with assigned alias
func (a FivenetRolesTable) AS(alias string) *FivenetRolesTable {
	return newFivenetRolesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetRolesTable with assigned schema name
func (a FivenetRolesTable) FromSchema(schemaName string) *FivenetRolesTable {
	return newFivenetRolesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetRolesTable with assigned table prefix
func (a FivenetRolesTable) WithPrefix(prefix string) *FivenetRolesTable {
	return newFivenetRolesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetRolesTable with assigned table suffix
func (a FivenetRolesTable) WithSuffix(suffix string) *FivenetRolesTable {
	return newFivenetRolesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetRolesTable(schemaName, tableName, alias string) *FivenetRolesTable {
	return &FivenetRolesTable{
		fivenetRolesTable: newFivenetRolesTableImpl(schemaName, tableName, alias),
		NEW:               newFivenetRolesTableImpl("", "new", ""),
	}
}

func newFivenetRolesTableImpl(schemaName, tableName, alias string) fivenetRolesTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		NameColumn        = mysql.StringColumn("name")
		GuardNameColumn   = mysql.StringColumn("guard_name")
		DescriptionColumn = mysql.StringColumn("description")
		allColumns        = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, NameColumn, GuardNameColumn, DescriptionColumn}
		mutableColumns    = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, NameColumn, GuardNameColumn, DescriptionColumn}
	)

	return fivenetRolesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,
		Name:        NameColumn,
		GuardName:   GuardNameColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
