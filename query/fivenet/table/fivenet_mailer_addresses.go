//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMailerAddresses = newFivenetMailerAddressesTable("", "fivenet_mailer_addresses", "")

type fivenetMailerAddressesTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	DeletedAt mysql.ColumnTimestamp
	Domain    mysql.ColumnString
	Email     mysql.ColumnString
	Signature mysql.ColumnString
	Job       mysql.ColumnString
	UserID    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetMailerAddressesTable struct {
	fivenetMailerAddressesTable

	NEW fivenetMailerAddressesTable
}

// AS creates new FivenetMailerAddressesTable with assigned alias
func (a FivenetMailerAddressesTable) AS(alias string) *FivenetMailerAddressesTable {
	return newFivenetMailerAddressesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMailerAddressesTable with assigned schema name
func (a FivenetMailerAddressesTable) FromSchema(schemaName string) *FivenetMailerAddressesTable {
	return newFivenetMailerAddressesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMailerAddressesTable with assigned table prefix
func (a FivenetMailerAddressesTable) WithPrefix(prefix string) *FivenetMailerAddressesTable {
	return newFivenetMailerAddressesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMailerAddressesTable with assigned table suffix
func (a FivenetMailerAddressesTable) WithSuffix(suffix string) *FivenetMailerAddressesTable {
	return newFivenetMailerAddressesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMailerAddressesTable(schemaName, tableName, alias string) *FivenetMailerAddressesTable {
	return &FivenetMailerAddressesTable{
		fivenetMailerAddressesTable: newFivenetMailerAddressesTableImpl(schemaName, tableName, alias),
		NEW:                         newFivenetMailerAddressesTableImpl("", "new", ""),
	}
}

func newFivenetMailerAddressesTableImpl(schemaName, tableName, alias string) fivenetMailerAddressesTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		DeletedAtColumn = mysql.TimestampColumn("deleted_at")
		DomainColumn    = mysql.StringColumn("domain")
		EmailColumn     = mysql.StringColumn("email")
		SignatureColumn = mysql.StringColumn("signature")
		JobColumn       = mysql.StringColumn("job")
		UserIDColumn    = mysql.IntegerColumn("user_id")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, DeletedAtColumn, DomainColumn, EmailColumn, SignatureColumn, JobColumn, UserIDColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, DeletedAtColumn, DomainColumn, EmailColumn, SignatureColumn, JobColumn, UserIDColumn}
	)

	return fivenetMailerAddressesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		DeletedAt: DeletedAtColumn,
		Domain:    DomainColumn,
		Email:     EmailColumn,
		Signature: SignatureColumn,
		Job:       JobColumn,
		UserID:    UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
