//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMsgsMessages = newFivenetMsgsMessagesTable("", "fivenet_msgs_messages", "")

type fivenetMsgsMessagesTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	ThreadID  mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp
	DeletedAt mysql.ColumnTimestamp
	Message   mysql.ColumnString
	Data      mysql.ColumnString
	CreatorID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetMsgsMessagesTable struct {
	fivenetMsgsMessagesTable

	NEW fivenetMsgsMessagesTable
}

// AS creates new FivenetMsgsMessagesTable with assigned alias
func (a FivenetMsgsMessagesTable) AS(alias string) *FivenetMsgsMessagesTable {
	return newFivenetMsgsMessagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMsgsMessagesTable with assigned schema name
func (a FivenetMsgsMessagesTable) FromSchema(schemaName string) *FivenetMsgsMessagesTable {
	return newFivenetMsgsMessagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMsgsMessagesTable with assigned table prefix
func (a FivenetMsgsMessagesTable) WithPrefix(prefix string) *FivenetMsgsMessagesTable {
	return newFivenetMsgsMessagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMsgsMessagesTable with assigned table suffix
func (a FivenetMsgsMessagesTable) WithSuffix(suffix string) *FivenetMsgsMessagesTable {
	return newFivenetMsgsMessagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMsgsMessagesTable(schemaName, tableName, alias string) *FivenetMsgsMessagesTable {
	return &FivenetMsgsMessagesTable{
		fivenetMsgsMessagesTable: newFivenetMsgsMessagesTableImpl(schemaName, tableName, alias),
		NEW:                      newFivenetMsgsMessagesTableImpl("", "new", ""),
	}
}

func newFivenetMsgsMessagesTableImpl(schemaName, tableName, alias string) fivenetMsgsMessagesTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		ThreadIDColumn  = mysql.IntegerColumn("thread_id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		DeletedAtColumn = mysql.TimestampColumn("deleted_at")
		MessageColumn   = mysql.StringColumn("message")
		DataColumn      = mysql.StringColumn("data")
		CreatorIDColumn = mysql.IntegerColumn("creator_id")
		allColumns      = mysql.ColumnList{IDColumn, ThreadIDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, MessageColumn, DataColumn, CreatorIDColumn}
		mutableColumns  = mysql.ColumnList{ThreadIDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, MessageColumn, DataColumn, CreatorIDColumn}
	)

	return fivenetMsgsMessagesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		ThreadID:  ThreadIDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		DeletedAt: DeletedAtColumn,
		Message:   MessageColumn,
		Data:      DataColumn,
		CreatorID: CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
