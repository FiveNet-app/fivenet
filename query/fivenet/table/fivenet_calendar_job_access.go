//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetCalendarJobAccess = newFivenetCalendarJobAccessTable("", "fivenet_calendar_job_access", "")

type fivenetCalendarJobAccessTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	CalendarID   mysql.ColumnInteger
	EntryID      mysql.ColumnInteger
	Job          mysql.ColumnString
	MinimumGrade mysql.ColumnInteger
	Access       mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetCalendarJobAccessTable struct {
	fivenetCalendarJobAccessTable

	NEW fivenetCalendarJobAccessTable
}

// AS creates new FivenetCalendarJobAccessTable with assigned alias
func (a FivenetCalendarJobAccessTable) AS(alias string) *FivenetCalendarJobAccessTable {
	return newFivenetCalendarJobAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetCalendarJobAccessTable with assigned schema name
func (a FivenetCalendarJobAccessTable) FromSchema(schemaName string) *FivenetCalendarJobAccessTable {
	return newFivenetCalendarJobAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetCalendarJobAccessTable with assigned table prefix
func (a FivenetCalendarJobAccessTable) WithPrefix(prefix string) *FivenetCalendarJobAccessTable {
	return newFivenetCalendarJobAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetCalendarJobAccessTable with assigned table suffix
func (a FivenetCalendarJobAccessTable) WithSuffix(suffix string) *FivenetCalendarJobAccessTable {
	return newFivenetCalendarJobAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetCalendarJobAccessTable(schemaName, tableName, alias string) *FivenetCalendarJobAccessTable {
	return &FivenetCalendarJobAccessTable{
		fivenetCalendarJobAccessTable: newFivenetCalendarJobAccessTableImpl(schemaName, tableName, alias),
		NEW:                           newFivenetCalendarJobAccessTableImpl("", "new", ""),
	}
}

func newFivenetCalendarJobAccessTableImpl(schemaName, tableName, alias string) fivenetCalendarJobAccessTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		CalendarIDColumn   = mysql.IntegerColumn("calendar_id")
		EntryIDColumn      = mysql.IntegerColumn("entry_id")
		JobColumn          = mysql.StringColumn("job")
		MinimumGradeColumn = mysql.IntegerColumn("minimum_grade")
		AccessColumn       = mysql.IntegerColumn("access")
		allColumns         = mysql.ColumnList{IDColumn, CreatedAtColumn, CalendarIDColumn, EntryIDColumn, JobColumn, MinimumGradeColumn, AccessColumn}
		mutableColumns     = mysql.ColumnList{CreatedAtColumn, CalendarIDColumn, EntryIDColumn, JobColumn, MinimumGradeColumn, AccessColumn}
	)

	return fivenetCalendarJobAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreatedAt:    CreatedAtColumn,
		CalendarID:   CalendarIDColumn,
		EntryID:      EntryIDColumn,
		Job:          JobColumn,
		MinimumGrade: MinimumGradeColumn,
		Access:       AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
