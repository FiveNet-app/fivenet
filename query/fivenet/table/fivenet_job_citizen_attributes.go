//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobCitizenAttributes = newFivenetJobCitizenAttributesTable("", "fivenet_job_citizen_attributes", "")

type fivenetJobCitizenAttributesTable struct {
	mysql.Table

	// Columns
	ID    mysql.ColumnInteger
	Job   mysql.ColumnString
	Name  mysql.ColumnString
	Color mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetJobCitizenAttributesTable struct {
	fivenetJobCitizenAttributesTable

	NEW fivenetJobCitizenAttributesTable
}

// AS creates new FivenetJobCitizenAttributesTable with assigned alias
func (a FivenetJobCitizenAttributesTable) AS(alias string) *FivenetJobCitizenAttributesTable {
	return newFivenetJobCitizenAttributesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobCitizenAttributesTable with assigned schema name
func (a FivenetJobCitizenAttributesTable) FromSchema(schemaName string) *FivenetJobCitizenAttributesTable {
	return newFivenetJobCitizenAttributesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobCitizenAttributesTable with assigned table prefix
func (a FivenetJobCitizenAttributesTable) WithPrefix(prefix string) *FivenetJobCitizenAttributesTable {
	return newFivenetJobCitizenAttributesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobCitizenAttributesTable with assigned table suffix
func (a FivenetJobCitizenAttributesTable) WithSuffix(suffix string) *FivenetJobCitizenAttributesTable {
	return newFivenetJobCitizenAttributesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobCitizenAttributesTable(schemaName, tableName, alias string) *FivenetJobCitizenAttributesTable {
	return &FivenetJobCitizenAttributesTable{
		fivenetJobCitizenAttributesTable: newFivenetJobCitizenAttributesTableImpl(schemaName, tableName, alias),
		NEW:                              newFivenetJobCitizenAttributesTableImpl("", "new", ""),
	}
}

func newFivenetJobCitizenAttributesTableImpl(schemaName, tableName, alias string) fivenetJobCitizenAttributesTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		JobColumn      = mysql.StringColumn("job")
		NameColumn     = mysql.StringColumn("name")
		ColorColumn    = mysql.StringColumn("color")
		allColumns     = mysql.ColumnList{IDColumn, JobColumn, NameColumn, ColorColumn}
		mutableColumns = mysql.ColumnList{JobColumn, NameColumn, ColorColumn}
	)

	return fivenetJobCitizenAttributesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:    IDColumn,
		Job:   JobColumn,
		Name:  NameColumn,
		Color: ColorColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
