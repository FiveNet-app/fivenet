//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobsQualificationsJobAccess = newFivenetJobsQualificationsJobAccessTable("", "fivenet_jobs_qualifications_job_access", "")

type fivenetJobsQualificationsJobAccessTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	CreatedAt       mysql.ColumnTimestamp
	QualificationID mysql.ColumnInteger
	Job             mysql.ColumnString
	MinimumGrade    mysql.ColumnInteger
	Access          mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetJobsQualificationsJobAccessTable struct {
	fivenetJobsQualificationsJobAccessTable

	NEW fivenetJobsQualificationsJobAccessTable
}

// AS creates new FivenetJobsQualificationsJobAccessTable with assigned alias
func (a FivenetJobsQualificationsJobAccessTable) AS(alias string) *FivenetJobsQualificationsJobAccessTable {
	return newFivenetJobsQualificationsJobAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobsQualificationsJobAccessTable with assigned schema name
func (a FivenetJobsQualificationsJobAccessTable) FromSchema(schemaName string) *FivenetJobsQualificationsJobAccessTable {
	return newFivenetJobsQualificationsJobAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobsQualificationsJobAccessTable with assigned table prefix
func (a FivenetJobsQualificationsJobAccessTable) WithPrefix(prefix string) *FivenetJobsQualificationsJobAccessTable {
	return newFivenetJobsQualificationsJobAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobsQualificationsJobAccessTable with assigned table suffix
func (a FivenetJobsQualificationsJobAccessTable) WithSuffix(suffix string) *FivenetJobsQualificationsJobAccessTable {
	return newFivenetJobsQualificationsJobAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobsQualificationsJobAccessTable(schemaName, tableName, alias string) *FivenetJobsQualificationsJobAccessTable {
	return &FivenetJobsQualificationsJobAccessTable{
		fivenetJobsQualificationsJobAccessTable: newFivenetJobsQualificationsJobAccessTableImpl(schemaName, tableName, alias),
		NEW:                                     newFivenetJobsQualificationsJobAccessTableImpl("", "new", ""),
	}
}

func newFivenetJobsQualificationsJobAccessTableImpl(schemaName, tableName, alias string) fivenetJobsQualificationsJobAccessTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		CreatedAtColumn       = mysql.TimestampColumn("created_at")
		QualificationIDColumn = mysql.IntegerColumn("qualification_id")
		JobColumn             = mysql.StringColumn("job")
		MinimumGradeColumn    = mysql.IntegerColumn("minimum_grade")
		AccessColumn          = mysql.IntegerColumn("access")
		allColumns            = mysql.ColumnList{IDColumn, CreatedAtColumn, QualificationIDColumn, JobColumn, MinimumGradeColumn, AccessColumn}
		mutableColumns        = mysql.ColumnList{CreatedAtColumn, QualificationIDColumn, JobColumn, MinimumGradeColumn, AccessColumn}
	)

	return fivenetJobsQualificationsJobAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		CreatedAt:       CreatedAtColumn,
		QualificationID: QualificationIDColumn,
		Job:             JobColumn,
		MinimumGrade:    MinimumGradeColumn,
		Access:          AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
