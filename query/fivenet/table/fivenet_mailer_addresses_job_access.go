//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMailerAddressesJobAccess = newFivenetMailerAddressesJobAccessTable("", "fivenet_mailer_addresses_job_access", "")

type fivenetMailerAddressesJobAccessTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	AddressID    mysql.ColumnInteger
	Job          mysql.ColumnString
	MinimumGrade mysql.ColumnInteger
	Access       mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetMailerAddressesJobAccessTable struct {
	fivenetMailerAddressesJobAccessTable

	NEW fivenetMailerAddressesJobAccessTable
}

// AS creates new FivenetMailerAddressesJobAccessTable with assigned alias
func (a FivenetMailerAddressesJobAccessTable) AS(alias string) *FivenetMailerAddressesJobAccessTable {
	return newFivenetMailerAddressesJobAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMailerAddressesJobAccessTable with assigned schema name
func (a FivenetMailerAddressesJobAccessTable) FromSchema(schemaName string) *FivenetMailerAddressesJobAccessTable {
	return newFivenetMailerAddressesJobAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMailerAddressesJobAccessTable with assigned table prefix
func (a FivenetMailerAddressesJobAccessTable) WithPrefix(prefix string) *FivenetMailerAddressesJobAccessTable {
	return newFivenetMailerAddressesJobAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMailerAddressesJobAccessTable with assigned table suffix
func (a FivenetMailerAddressesJobAccessTable) WithSuffix(suffix string) *FivenetMailerAddressesJobAccessTable {
	return newFivenetMailerAddressesJobAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMailerAddressesJobAccessTable(schemaName, tableName, alias string) *FivenetMailerAddressesJobAccessTable {
	return &FivenetMailerAddressesJobAccessTable{
		fivenetMailerAddressesJobAccessTable: newFivenetMailerAddressesJobAccessTableImpl(schemaName, tableName, alias),
		NEW:                                  newFivenetMailerAddressesJobAccessTableImpl("", "new", ""),
	}
}

func newFivenetMailerAddressesJobAccessTableImpl(schemaName, tableName, alias string) fivenetMailerAddressesJobAccessTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		AddressIDColumn    = mysql.IntegerColumn("address_id")
		JobColumn          = mysql.StringColumn("job")
		MinimumGradeColumn = mysql.IntegerColumn("minimum_grade")
		AccessColumn       = mysql.IntegerColumn("access")
		allColumns         = mysql.ColumnList{IDColumn, CreatedAtColumn, AddressIDColumn, JobColumn, MinimumGradeColumn, AccessColumn}
		mutableColumns     = mysql.ColumnList{CreatedAtColumn, AddressIDColumn, JobColumn, MinimumGradeColumn, AccessColumn}
	)

	return fivenetMailerAddressesJobAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreatedAt:    CreatedAtColumn,
		AddressID:    AddressIDColumn,
		Job:          JobColumn,
		MinimumGrade: MinimumGradeColumn,
		Access:       AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
