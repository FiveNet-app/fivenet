//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMsgsSettingsBlocks = newFivenetMsgsSettingsBlocksTable("", "fivenet_msgs_settings_blocks", "")

type fivenetMsgsSettingsBlocksTable struct {
	mysql.Table

	// Columns
	SourceID mysql.ColumnInteger
	UserID   mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetMsgsSettingsBlocksTable struct {
	fivenetMsgsSettingsBlocksTable

	NEW fivenetMsgsSettingsBlocksTable
}

// AS creates new FivenetMsgsSettingsBlocksTable with assigned alias
func (a FivenetMsgsSettingsBlocksTable) AS(alias string) *FivenetMsgsSettingsBlocksTable {
	return newFivenetMsgsSettingsBlocksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMsgsSettingsBlocksTable with assigned schema name
func (a FivenetMsgsSettingsBlocksTable) FromSchema(schemaName string) *FivenetMsgsSettingsBlocksTable {
	return newFivenetMsgsSettingsBlocksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMsgsSettingsBlocksTable with assigned table prefix
func (a FivenetMsgsSettingsBlocksTable) WithPrefix(prefix string) *FivenetMsgsSettingsBlocksTable {
	return newFivenetMsgsSettingsBlocksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMsgsSettingsBlocksTable with assigned table suffix
func (a FivenetMsgsSettingsBlocksTable) WithSuffix(suffix string) *FivenetMsgsSettingsBlocksTable {
	return newFivenetMsgsSettingsBlocksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMsgsSettingsBlocksTable(schemaName, tableName, alias string) *FivenetMsgsSettingsBlocksTable {
	return &FivenetMsgsSettingsBlocksTable{
		fivenetMsgsSettingsBlocksTable: newFivenetMsgsSettingsBlocksTableImpl(schemaName, tableName, alias),
		NEW:                            newFivenetMsgsSettingsBlocksTableImpl("", "new", ""),
	}
}

func newFivenetMsgsSettingsBlocksTableImpl(schemaName, tableName, alias string) fivenetMsgsSettingsBlocksTable {
	var (
		SourceIDColumn = mysql.IntegerColumn("source_id")
		UserIDColumn   = mysql.IntegerColumn("user_id")
		allColumns     = mysql.ColumnList{SourceIDColumn, UserIDColumn}
		mutableColumns = mysql.ColumnList{}
	)

	return fivenetMsgsSettingsBlocksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		SourceID: SourceIDColumn,
		UserID:   UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
