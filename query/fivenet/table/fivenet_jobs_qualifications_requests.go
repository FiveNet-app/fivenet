//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobsQualificationsRequests = newFivenetJobsQualificationsRequestsTable("", "fivenet_jobs_qualifications_requests", "")

type fivenetJobsQualificationsRequestsTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	CreatedAt       mysql.ColumnTimestamp
	DeletedAt       mysql.ColumnTimestamp
	QualificationID mysql.ColumnInteger
	UserID          mysql.ColumnInteger
	UserComment     mysql.ColumnString
	Approved        mysql.ColumnBool
	ApprovedAt      mysql.ColumnTimestamp
	ApproverComment mysql.ColumnString
	ApproverID      mysql.ColumnInteger
	ApproverJob     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetJobsQualificationsRequestsTable struct {
	fivenetJobsQualificationsRequestsTable

	NEW fivenetJobsQualificationsRequestsTable
}

// AS creates new FivenetJobsQualificationsRequestsTable with assigned alias
func (a FivenetJobsQualificationsRequestsTable) AS(alias string) *FivenetJobsQualificationsRequestsTable {
	return newFivenetJobsQualificationsRequestsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobsQualificationsRequestsTable with assigned schema name
func (a FivenetJobsQualificationsRequestsTable) FromSchema(schemaName string) *FivenetJobsQualificationsRequestsTable {
	return newFivenetJobsQualificationsRequestsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobsQualificationsRequestsTable with assigned table prefix
func (a FivenetJobsQualificationsRequestsTable) WithPrefix(prefix string) *FivenetJobsQualificationsRequestsTable {
	return newFivenetJobsQualificationsRequestsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobsQualificationsRequestsTable with assigned table suffix
func (a FivenetJobsQualificationsRequestsTable) WithSuffix(suffix string) *FivenetJobsQualificationsRequestsTable {
	return newFivenetJobsQualificationsRequestsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobsQualificationsRequestsTable(schemaName, tableName, alias string) *FivenetJobsQualificationsRequestsTable {
	return &FivenetJobsQualificationsRequestsTable{
		fivenetJobsQualificationsRequestsTable: newFivenetJobsQualificationsRequestsTableImpl(schemaName, tableName, alias),
		NEW:                                    newFivenetJobsQualificationsRequestsTableImpl("", "new", ""),
	}
}

func newFivenetJobsQualificationsRequestsTableImpl(schemaName, tableName, alias string) fivenetJobsQualificationsRequestsTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		CreatedAtColumn       = mysql.TimestampColumn("created_at")
		DeletedAtColumn       = mysql.TimestampColumn("deleted_at")
		QualificationIDColumn = mysql.IntegerColumn("qualification_id")
		UserIDColumn          = mysql.IntegerColumn("user_id")
		UserCommentColumn     = mysql.StringColumn("user_comment")
		ApprovedColumn        = mysql.BoolColumn("approved")
		ApprovedAtColumn      = mysql.TimestampColumn("approved_at")
		ApproverCommentColumn = mysql.StringColumn("approver_comment")
		ApproverIDColumn      = mysql.IntegerColumn("approver_id")
		ApproverJobColumn     = mysql.StringColumn("approver_job")
		allColumns            = mysql.ColumnList{IDColumn, CreatedAtColumn, DeletedAtColumn, QualificationIDColumn, UserIDColumn, UserCommentColumn, ApprovedColumn, ApprovedAtColumn, ApproverCommentColumn, ApproverIDColumn, ApproverJobColumn}
		mutableColumns        = mysql.ColumnList{CreatedAtColumn, DeletedAtColumn, QualificationIDColumn, UserIDColumn, UserCommentColumn, ApprovedColumn, ApprovedAtColumn, ApproverCommentColumn, ApproverIDColumn, ApproverJobColumn}
	)

	return fivenetJobsQualificationsRequestsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		CreatedAt:       CreatedAtColumn,
		DeletedAt:       DeletedAtColumn,
		QualificationID: QualificationIDColumn,
		UserID:          UserIDColumn,
		UserComment:     UserCommentColumn,
		Approved:        ApprovedColumn,
		ApprovedAt:      ApprovedAtColumn,
		ApproverComment: ApproverCommentColumn,
		ApproverID:      ApproverIDColumn,
		ApproverJob:     ApproverJobColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
