//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobsQualifications = newFivenetJobsQualificationsTable("", "fivenet_jobs_qualifications", "")

type fivenetJobsQualificationsTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	CreatedAt       mysql.ColumnTimestamp
	UpdatedAt       mysql.ColumnTimestamp
	DeletedAt       mysql.ColumnTimestamp
	Job             mysql.ColumnString
	Weight          mysql.ColumnInteger
	Closed          mysql.ColumnBool
	Abbreviation    mysql.ColumnString
	Title           mysql.ColumnString
	Description     mysql.ColumnString
	CreatorID       mysql.ColumnInteger
	CreatorJob      mysql.ColumnString
	DiscordSettings mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetJobsQualificationsTable struct {
	fivenetJobsQualificationsTable

	NEW fivenetJobsQualificationsTable
}

// AS creates new FivenetJobsQualificationsTable with assigned alias
func (a FivenetJobsQualificationsTable) AS(alias string) *FivenetJobsQualificationsTable {
	return newFivenetJobsQualificationsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobsQualificationsTable with assigned schema name
func (a FivenetJobsQualificationsTable) FromSchema(schemaName string) *FivenetJobsQualificationsTable {
	return newFivenetJobsQualificationsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobsQualificationsTable with assigned table prefix
func (a FivenetJobsQualificationsTable) WithPrefix(prefix string) *FivenetJobsQualificationsTable {
	return newFivenetJobsQualificationsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobsQualificationsTable with assigned table suffix
func (a FivenetJobsQualificationsTable) WithSuffix(suffix string) *FivenetJobsQualificationsTable {
	return newFivenetJobsQualificationsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobsQualificationsTable(schemaName, tableName, alias string) *FivenetJobsQualificationsTable {
	return &FivenetJobsQualificationsTable{
		fivenetJobsQualificationsTable: newFivenetJobsQualificationsTableImpl(schemaName, tableName, alias),
		NEW:                            newFivenetJobsQualificationsTableImpl("", "new", ""),
	}
}

func newFivenetJobsQualificationsTableImpl(schemaName, tableName, alias string) fivenetJobsQualificationsTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		CreatedAtColumn       = mysql.TimestampColumn("created_at")
		UpdatedAtColumn       = mysql.TimestampColumn("updated_at")
		DeletedAtColumn       = mysql.TimestampColumn("deleted_at")
		JobColumn             = mysql.StringColumn("job")
		WeightColumn          = mysql.IntegerColumn("weight")
		ClosedColumn          = mysql.BoolColumn("closed")
		AbbreviationColumn    = mysql.StringColumn("abbreviation")
		TitleColumn           = mysql.StringColumn("title")
		DescriptionColumn     = mysql.StringColumn("description")
		CreatorIDColumn       = mysql.IntegerColumn("creator_id")
		CreatorJobColumn      = mysql.StringColumn("creator_job")
		DiscordSettingsColumn = mysql.StringColumn("discord_settings")
		allColumns            = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, JobColumn, WeightColumn, ClosedColumn, AbbreviationColumn, TitleColumn, DescriptionColumn, CreatorIDColumn, CreatorJobColumn, DiscordSettingsColumn}
		mutableColumns        = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, JobColumn, WeightColumn, ClosedColumn, AbbreviationColumn, TitleColumn, DescriptionColumn, CreatorIDColumn, CreatorJobColumn, DiscordSettingsColumn}
	)

	return fivenetJobsQualificationsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		CreatedAt:       CreatedAtColumn,
		UpdatedAt:       UpdatedAtColumn,
		DeletedAt:       DeletedAtColumn,
		Job:             JobColumn,
		Weight:          WeightColumn,
		Closed:          ClosedColumn,
		Abbreviation:    AbbreviationColumn,
		Title:           TitleColumn,
		Description:     DescriptionColumn,
		CreatorID:       CreatorIDColumn,
		CreatorJob:      CreatorJobColumn,
		DiscordSettings: DiscordSettingsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
