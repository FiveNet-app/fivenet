//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetCalendarUserAccess = newFivenetCalendarUserAccessTable("", "fivenet_calendar_user_access", "")

type fivenetCalendarUserAccessTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnInteger
	CreatedAt  mysql.ColumnTimestamp
	CalendarID mysql.ColumnInteger
	EntryID    mysql.ColumnInteger
	UserID     mysql.ColumnInteger
	Access     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetCalendarUserAccessTable struct {
	fivenetCalendarUserAccessTable

	NEW fivenetCalendarUserAccessTable
}

// AS creates new FivenetCalendarUserAccessTable with assigned alias
func (a FivenetCalendarUserAccessTable) AS(alias string) *FivenetCalendarUserAccessTable {
	return newFivenetCalendarUserAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetCalendarUserAccessTable with assigned schema name
func (a FivenetCalendarUserAccessTable) FromSchema(schemaName string) *FivenetCalendarUserAccessTable {
	return newFivenetCalendarUserAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetCalendarUserAccessTable with assigned table prefix
func (a FivenetCalendarUserAccessTable) WithPrefix(prefix string) *FivenetCalendarUserAccessTable {
	return newFivenetCalendarUserAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetCalendarUserAccessTable with assigned table suffix
func (a FivenetCalendarUserAccessTable) WithSuffix(suffix string) *FivenetCalendarUserAccessTable {
	return newFivenetCalendarUserAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetCalendarUserAccessTable(schemaName, tableName, alias string) *FivenetCalendarUserAccessTable {
	return &FivenetCalendarUserAccessTable{
		fivenetCalendarUserAccessTable: newFivenetCalendarUserAccessTableImpl(schemaName, tableName, alias),
		NEW:                            newFivenetCalendarUserAccessTableImpl("", "new", ""),
	}
}

func newFivenetCalendarUserAccessTableImpl(schemaName, tableName, alias string) fivenetCalendarUserAccessTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		CalendarIDColumn = mysql.IntegerColumn("calendar_id")
		EntryIDColumn    = mysql.IntegerColumn("entry_id")
		UserIDColumn     = mysql.IntegerColumn("user_id")
		AccessColumn     = mysql.IntegerColumn("access")
		allColumns       = mysql.ColumnList{IDColumn, CreatedAtColumn, CalendarIDColumn, EntryIDColumn, UserIDColumn, AccessColumn}
		mutableColumns   = mysql.ColumnList{CreatedAtColumn, CalendarIDColumn, EntryIDColumn, UserIDColumn, AccessColumn}
	)

	return fivenetCalendarUserAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		CreatedAt:  CreatedAtColumn,
		CalendarID: CalendarIDColumn,
		EntryID:    EntryIDColumn,
		UserID:     UserIDColumn,
		Access:     AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
