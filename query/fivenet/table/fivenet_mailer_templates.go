//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMailerTemplates = newFivenetMailerTemplatesTable("", "fivenet_mailer_templates", "")

type fivenetMailerTemplatesTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnInteger
	CreatedAt  mysql.ColumnTimestamp
	UpdatedAt  mysql.ColumnTimestamp
	DeletedAt  mysql.ColumnTimestamp
	Title      mysql.ColumnString
	Content    mysql.ColumnString
	EmailID    mysql.ColumnInteger
	CreatorJob mysql.ColumnString
	CreatorID  mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetMailerTemplatesTable struct {
	fivenetMailerTemplatesTable

	NEW fivenetMailerTemplatesTable
}

// AS creates new FivenetMailerTemplatesTable with assigned alias
func (a FivenetMailerTemplatesTable) AS(alias string) *FivenetMailerTemplatesTable {
	return newFivenetMailerTemplatesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMailerTemplatesTable with assigned schema name
func (a FivenetMailerTemplatesTable) FromSchema(schemaName string) *FivenetMailerTemplatesTable {
	return newFivenetMailerTemplatesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMailerTemplatesTable with assigned table prefix
func (a FivenetMailerTemplatesTable) WithPrefix(prefix string) *FivenetMailerTemplatesTable {
	return newFivenetMailerTemplatesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMailerTemplatesTable with assigned table suffix
func (a FivenetMailerTemplatesTable) WithSuffix(suffix string) *FivenetMailerTemplatesTable {
	return newFivenetMailerTemplatesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMailerTemplatesTable(schemaName, tableName, alias string) *FivenetMailerTemplatesTable {
	return &FivenetMailerTemplatesTable{
		fivenetMailerTemplatesTable: newFivenetMailerTemplatesTableImpl(schemaName, tableName, alias),
		NEW:                         newFivenetMailerTemplatesTableImpl("", "new", ""),
	}
}

func newFivenetMailerTemplatesTableImpl(schemaName, tableName, alias string) fivenetMailerTemplatesTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		UpdatedAtColumn  = mysql.TimestampColumn("updated_at")
		DeletedAtColumn  = mysql.TimestampColumn("deleted_at")
		TitleColumn      = mysql.StringColumn("title")
		ContentColumn    = mysql.StringColumn("content")
		EmailIDColumn    = mysql.IntegerColumn("email_id")
		CreatorJobColumn = mysql.StringColumn("creator_job")
		CreatorIDColumn  = mysql.IntegerColumn("creator_id")
		allColumns       = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TitleColumn, ContentColumn, EmailIDColumn, CreatorJobColumn, CreatorIDColumn}
		mutableColumns   = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TitleColumn, ContentColumn, EmailIDColumn, CreatorJobColumn, CreatorIDColumn}
	)

	return fivenetMailerTemplatesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,
		DeletedAt:  DeletedAtColumn,
		Title:      TitleColumn,
		Content:    ContentColumn,
		EmailID:    EmailIDColumn,
		CreatorJob: CreatorJobColumn,
		CreatorID:  CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
