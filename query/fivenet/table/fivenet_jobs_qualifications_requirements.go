//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobsQualificationsRequirements = newFivenetJobsQualificationsRequirementsTable("", "fivenet_jobs_qualifications_requirements", "")

type fivenetJobsQualificationsRequirementsTable struct {
	mysql.Table

	// Columns
	ID                    mysql.ColumnInteger
	CreatedAt             mysql.ColumnTimestamp
	QualificationID       mysql.ColumnInteger
	TargetQualificationID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetJobsQualificationsRequirementsTable struct {
	fivenetJobsQualificationsRequirementsTable

	NEW fivenetJobsQualificationsRequirementsTable
}

// AS creates new FivenetJobsQualificationsRequirementsTable with assigned alias
func (a FivenetJobsQualificationsRequirementsTable) AS(alias string) *FivenetJobsQualificationsRequirementsTable {
	return newFivenetJobsQualificationsRequirementsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobsQualificationsRequirementsTable with assigned schema name
func (a FivenetJobsQualificationsRequirementsTable) FromSchema(schemaName string) *FivenetJobsQualificationsRequirementsTable {
	return newFivenetJobsQualificationsRequirementsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobsQualificationsRequirementsTable with assigned table prefix
func (a FivenetJobsQualificationsRequirementsTable) WithPrefix(prefix string) *FivenetJobsQualificationsRequirementsTable {
	return newFivenetJobsQualificationsRequirementsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobsQualificationsRequirementsTable with assigned table suffix
func (a FivenetJobsQualificationsRequirementsTable) WithSuffix(suffix string) *FivenetJobsQualificationsRequirementsTable {
	return newFivenetJobsQualificationsRequirementsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobsQualificationsRequirementsTable(schemaName, tableName, alias string) *FivenetJobsQualificationsRequirementsTable {
	return &FivenetJobsQualificationsRequirementsTable{
		fivenetJobsQualificationsRequirementsTable: newFivenetJobsQualificationsRequirementsTableImpl(schemaName, tableName, alias),
		NEW: newFivenetJobsQualificationsRequirementsTableImpl("", "new", ""),
	}
}

func newFivenetJobsQualificationsRequirementsTableImpl(schemaName, tableName, alias string) fivenetJobsQualificationsRequirementsTable {
	var (
		IDColumn                    = mysql.IntegerColumn("id")
		CreatedAtColumn             = mysql.TimestampColumn("created_at")
		QualificationIDColumn       = mysql.IntegerColumn("qualification_id")
		TargetQualificationIDColumn = mysql.IntegerColumn("target_qualification_id")
		allColumns                  = mysql.ColumnList{IDColumn, CreatedAtColumn, QualificationIDColumn, TargetQualificationIDColumn}
		mutableColumns              = mysql.ColumnList{CreatedAtColumn, QualificationIDColumn, TargetQualificationIDColumn}
	)

	return fivenetJobsQualificationsRequirementsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                    IDColumn,
		CreatedAt:             CreatedAtColumn,
		QualificationID:       QualificationIDColumn,
		TargetQualificationID: TargetQualificationIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
