//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMailerThreadsUserAccess = newFivenetMailerThreadsUserAccessTable("", "fivenet_mailer_threads_user_access", "")

type fivenetMailerThreadsUserAccessTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	AddressID mysql.ColumnInteger
	UserID    mysql.ColumnInteger
	Access    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetMailerThreadsUserAccessTable struct {
	fivenetMailerThreadsUserAccessTable

	NEW fivenetMailerThreadsUserAccessTable
}

// AS creates new FivenetMailerThreadsUserAccessTable with assigned alias
func (a FivenetMailerThreadsUserAccessTable) AS(alias string) *FivenetMailerThreadsUserAccessTable {
	return newFivenetMailerThreadsUserAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMailerThreadsUserAccessTable with assigned schema name
func (a FivenetMailerThreadsUserAccessTable) FromSchema(schemaName string) *FivenetMailerThreadsUserAccessTable {
	return newFivenetMailerThreadsUserAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMailerThreadsUserAccessTable with assigned table prefix
func (a FivenetMailerThreadsUserAccessTable) WithPrefix(prefix string) *FivenetMailerThreadsUserAccessTable {
	return newFivenetMailerThreadsUserAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMailerThreadsUserAccessTable with assigned table suffix
func (a FivenetMailerThreadsUserAccessTable) WithSuffix(suffix string) *FivenetMailerThreadsUserAccessTable {
	return newFivenetMailerThreadsUserAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMailerThreadsUserAccessTable(schemaName, tableName, alias string) *FivenetMailerThreadsUserAccessTable {
	return &FivenetMailerThreadsUserAccessTable{
		fivenetMailerThreadsUserAccessTable: newFivenetMailerThreadsUserAccessTableImpl(schemaName, tableName, alias),
		NEW:                                 newFivenetMailerThreadsUserAccessTableImpl("", "new", ""),
	}
}

func newFivenetMailerThreadsUserAccessTableImpl(schemaName, tableName, alias string) fivenetMailerThreadsUserAccessTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		AddressIDColumn = mysql.IntegerColumn("address_id")
		UserIDColumn    = mysql.IntegerColumn("user_id")
		AccessColumn    = mysql.IntegerColumn("access")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, AddressIDColumn, UserIDColumn, AccessColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, AddressIDColumn, UserIDColumn, AccessColumn}
	)

	return fivenetMailerThreadsUserAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		AddressID: AddressIDColumn,
		UserID:    UserIDColumn,
		Access:    AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
