//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsJobAccess = newFivenetDocumentsJobAccessTable("", "fivenet_documents_job_access", "")

type fivenetDocumentsJobAccessTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	UpdatedAt    mysql.ColumnTimestamp
	DeletedAt    mysql.ColumnTimestamp
	DocumentID   mysql.ColumnInteger
	Job          mysql.ColumnString
	MinimumGrade mysql.ColumnInteger
	Access       mysql.ColumnInteger
	CreatorID    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetDocumentsJobAccessTable struct {
	fivenetDocumentsJobAccessTable

	NEW fivenetDocumentsJobAccessTable
}

// AS creates new FivenetDocumentsJobAccessTable with assigned alias
func (a FivenetDocumentsJobAccessTable) AS(alias string) *FivenetDocumentsJobAccessTable {
	return newFivenetDocumentsJobAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsJobAccessTable with assigned schema name
func (a FivenetDocumentsJobAccessTable) FromSchema(schemaName string) *FivenetDocumentsJobAccessTable {
	return newFivenetDocumentsJobAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsJobAccessTable with assigned table prefix
func (a FivenetDocumentsJobAccessTable) WithPrefix(prefix string) *FivenetDocumentsJobAccessTable {
	return newFivenetDocumentsJobAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsJobAccessTable with assigned table suffix
func (a FivenetDocumentsJobAccessTable) WithSuffix(suffix string) *FivenetDocumentsJobAccessTable {
	return newFivenetDocumentsJobAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsJobAccessTable(schemaName, tableName, alias string) *FivenetDocumentsJobAccessTable {
	return &FivenetDocumentsJobAccessTable{
		fivenetDocumentsJobAccessTable: newFivenetDocumentsJobAccessTableImpl(schemaName, tableName, alias),
		NEW:                            newFivenetDocumentsJobAccessTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsJobAccessTableImpl(schemaName, tableName, alias string) fivenetDocumentsJobAccessTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		UpdatedAtColumn    = mysql.TimestampColumn("updated_at")
		DeletedAtColumn    = mysql.TimestampColumn("deleted_at")
		DocumentIDColumn   = mysql.IntegerColumn("document_id")
		JobColumn          = mysql.StringColumn("job")
		MinimumGradeColumn = mysql.IntegerColumn("minimum_grade")
		AccessColumn       = mysql.IntegerColumn("access")
		CreatorIDColumn    = mysql.IntegerColumn("creator_id")
		allColumns         = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, DocumentIDColumn, JobColumn, MinimumGradeColumn, AccessColumn, CreatorIDColumn}
		mutableColumns     = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, DocumentIDColumn, JobColumn, MinimumGradeColumn, AccessColumn, CreatorIDColumn}
	)

	return fivenetDocumentsJobAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,
		DeletedAt:    DeletedAtColumn,
		DocumentID:   DocumentIDColumn,
		Job:          JobColumn,
		MinimumGrade: MinimumGradeColumn,
		Access:       AccessColumn,
		CreatorID:    CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
