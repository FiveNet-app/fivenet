//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetQualificationsExam = newFivenetQualificationsExamTable("", "fivenet_qualifications_exam", "")

type fivenetQualificationsExamTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	CreatedAt       mysql.ColumnTimestamp
	UpdatedAt       mysql.ColumnTimestamp
	DeletedAt       mysql.ColumnTimestamp
	QualificationID mysql.ColumnInteger
	Settings        mysql.ColumnString
	Questions       mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetQualificationsExamTable struct {
	fivenetQualificationsExamTable

	NEW fivenetQualificationsExamTable
}

// AS creates new FivenetQualificationsExamTable with assigned alias
func (a FivenetQualificationsExamTable) AS(alias string) *FivenetQualificationsExamTable {
	return newFivenetQualificationsExamTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetQualificationsExamTable with assigned schema name
func (a FivenetQualificationsExamTable) FromSchema(schemaName string) *FivenetQualificationsExamTable {
	return newFivenetQualificationsExamTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetQualificationsExamTable with assigned table prefix
func (a FivenetQualificationsExamTable) WithPrefix(prefix string) *FivenetQualificationsExamTable {
	return newFivenetQualificationsExamTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetQualificationsExamTable with assigned table suffix
func (a FivenetQualificationsExamTable) WithSuffix(suffix string) *FivenetQualificationsExamTable {
	return newFivenetQualificationsExamTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetQualificationsExamTable(schemaName, tableName, alias string) *FivenetQualificationsExamTable {
	return &FivenetQualificationsExamTable{
		fivenetQualificationsExamTable: newFivenetQualificationsExamTableImpl(schemaName, tableName, alias),
		NEW:                            newFivenetQualificationsExamTableImpl("", "new", ""),
	}
}

func newFivenetQualificationsExamTableImpl(schemaName, tableName, alias string) fivenetQualificationsExamTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		CreatedAtColumn       = mysql.TimestampColumn("created_at")
		UpdatedAtColumn       = mysql.TimestampColumn("updated_at")
		DeletedAtColumn       = mysql.TimestampColumn("deleted_at")
		QualificationIDColumn = mysql.IntegerColumn("qualification_id")
		SettingsColumn        = mysql.StringColumn("settings")
		QuestionsColumn       = mysql.StringColumn("questions")
		allColumns            = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, QualificationIDColumn, SettingsColumn, QuestionsColumn}
		mutableColumns        = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, QualificationIDColumn, SettingsColumn, QuestionsColumn}
	)

	return fivenetQualificationsExamTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		CreatedAt:       CreatedAtColumn,
		UpdatedAt:       UpdatedAtColumn,
		DeletedAt:       DeletedAtColumn,
		QualificationID: QualificationIDColumn,
		Settings:        SettingsColumn,
		Questions:       QuestionsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
