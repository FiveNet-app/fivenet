//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetCentrumMarkers = newFivenetCentrumMarkersTable("", "fivenet_centrum_markers", "")

type fivenetCentrumMarkersTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp
	Job         mysql.ColumnString
	Name        mysql.ColumnString
	Description mysql.ColumnString
	X           mysql.ColumnFloat
	Y           mysql.ColumnFloat
	Postal      mysql.ColumnInteger
	Color       mysql.ColumnString
	Icon        mysql.ColumnString
	MarkerType  mysql.ColumnInteger
	MarkerData  mysql.ColumnString
	CreatorID   mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetCentrumMarkersTable struct {
	fivenetCentrumMarkersTable

	NEW fivenetCentrumMarkersTable
}

// AS creates new FivenetCentrumMarkersTable with assigned alias
func (a FivenetCentrumMarkersTable) AS(alias string) *FivenetCentrumMarkersTable {
	return newFivenetCentrumMarkersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetCentrumMarkersTable with assigned schema name
func (a FivenetCentrumMarkersTable) FromSchema(schemaName string) *FivenetCentrumMarkersTable {
	return newFivenetCentrumMarkersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetCentrumMarkersTable with assigned table prefix
func (a FivenetCentrumMarkersTable) WithPrefix(prefix string) *FivenetCentrumMarkersTable {
	return newFivenetCentrumMarkersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetCentrumMarkersTable with assigned table suffix
func (a FivenetCentrumMarkersTable) WithSuffix(suffix string) *FivenetCentrumMarkersTable {
	return newFivenetCentrumMarkersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetCentrumMarkersTable(schemaName, tableName, alias string) *FivenetCentrumMarkersTable {
	return &FivenetCentrumMarkersTable{
		fivenetCentrumMarkersTable: newFivenetCentrumMarkersTableImpl(schemaName, tableName, alias),
		NEW:                        newFivenetCentrumMarkersTableImpl("", "new", ""),
	}
}

func newFivenetCentrumMarkersTableImpl(schemaName, tableName, alias string) fivenetCentrumMarkersTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		JobColumn         = mysql.StringColumn("job")
		NameColumn        = mysql.StringColumn("name")
		DescriptionColumn = mysql.StringColumn("description")
		XColumn           = mysql.FloatColumn("x")
		YColumn           = mysql.FloatColumn("y")
		PostalColumn      = mysql.IntegerColumn("postal")
		ColorColumn       = mysql.StringColumn("color")
		IconColumn        = mysql.StringColumn("icon")
		MarkerTypeColumn  = mysql.IntegerColumn("marker_type")
		MarkerDataColumn  = mysql.StringColumn("marker_data")
		CreatorIDColumn   = mysql.IntegerColumn("creator_id")
		allColumns        = mysql.ColumnList{IDColumn, CreatedAtColumn, JobColumn, NameColumn, DescriptionColumn, XColumn, YColumn, PostalColumn, ColorColumn, IconColumn, MarkerTypeColumn, MarkerDataColumn, CreatorIDColumn}
		mutableColumns    = mysql.ColumnList{CreatedAtColumn, JobColumn, NameColumn, DescriptionColumn, XColumn, YColumn, PostalColumn, ColorColumn, IconColumn, MarkerTypeColumn, MarkerDataColumn, CreatorIDColumn}
	)

	return fivenetCentrumMarkersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CreatedAt:   CreatedAtColumn,
		Job:         JobColumn,
		Name:        NameColumn,
		Description: DescriptionColumn,
		X:           XColumn,
		Y:           YColumn,
		Postal:      PostalColumn,
		Color:       ColorColumn,
		Icon:        IconColumn,
		MarkerType:  MarkerTypeColumn,
		MarkerData:  MarkerDataColumn,
		CreatorID:   CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
